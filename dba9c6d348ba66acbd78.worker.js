/*! For license information please see dba9c6d348ba66acbd78.worker.js.LICENSE.txt */
!function(e){var t={};function __webpack_require__(n){if(t[n])return t[n].exports;var r=t[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,__webpack_require__),r.l=!0,r.exports}__webpack_require__.m=e,__webpack_require__.c=t,__webpack_require__.d=function(e,t,n){__webpack_require__.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},__webpack_require__.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},__webpack_require__.t=function(e,t){if(1&t&&(e=__webpack_require__(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(__webpack_require__.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)__webpack_require__.d(n,r,function(t){return e[t]}.bind(null,r));return n},__webpack_require__.n=function(e){var t=e&&e.__esModule?function getDefault(){return e.default}:function getModuleExports(){return e};return __webpack_require__.d(t,"a",t),t},__webpack_require__.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},__webpack_require__.p="https://daitan-group.gitlab.io/innovation/poc/timeseries-learning-tool/",__webpack_require__(__webpack_require__.s="aa69")}({0:function(e,t){},"00ee":function(e,t,n){var r={};r[n("b622")("toStringTag")]="z",e.exports="[object z]"===String(r)},"011b":function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("76c2"),a=n("a3f7"),s=n("c77c"),o=n("b9b9"),i=n("54ef"),u=n("6791"),c=n("a09b");const l=Object(i.a)({divNoNan_:function divNoNan_(e,t){let n=Object(a.a)(e,"a","div"),i=Object(a.a)(t,"b","div");[n,i]=Object(r.makeTypesMatch)(n,i);const l=Object(s.a)(n,i),d=Object(c.a)(l),p=Object(o.a)(i,d);return Object(u.a)(p,d,l)}})},"015f":function(e,t,n){"use strict";n.d(t,"a",(function(){return scalar}));var r=n("6ad5"),a=n("5959");function scalar(e,t){if((Object(r.A)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Object(r.A)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Object(a.a)(e,[],[],t)}},"0280":function(e,t,n){"use strict";n.d(t,"a",(function(){return whereImpl}));var r=n("043e");function whereImpl(e,t){const n=[];for(let r=0;r<t.length;r++)t[r]&&n.push(r);const a=Object(r.a)(e,"int32"),s=Object(r.a)([n.length,e.length],"int32");for(let r=0;r<n.length;r++){const t=a.indexToLoc(n[r]),o=r*e.length;s.values.set(t,o)}return s.toTensor()}},"0366":function(e,t,n){var r=n("1c0b");e.exports=function(e,t,n){if(r(e),void 0===t)return e;switch(n){case 0:return function(){return e.call(t)};case 1:return function(n){return e.call(t,n)};case 2:return function(n,r){return e.call(t,n,r)};case 3:return function(n,r,a){return e.call(t,n,r,a)}}return function(){return e.apply(t,arguments)}}},"043e":function(e,t,n){"use strict";n.d(t,"a",(function(){return buffer}));var r=n("34d7"),a=n("6ad5");function buffer(e,t="float32",n){return t=t||"float32",a.c(e),new r.b(e,t,n)}},"04b8":function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}]},"04c4":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("54ef");const u=Object(i.a)({bincount_:function bincount_(e,t,n){const i=Object(s.a)(e,"x","bincount"),u=Object(s.a)(t,"weights","bincount");o.b("int32"===i.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${i.dtype}`)),o.b(n>=0,(()=>`size must be non-negative, but got ${n}.`)),o.b(u.size===i.size||0===u.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${i.shape}, weights shape: ${u.shape}.`));const c={x:i,weights:u},l={size:n};return r.a.runKernel(a.u,c,l)}})},"057f":function(e,t,n){var r=n("fc6a"),a=n("241c").f,s={}.toString,o="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function getOwnPropertyNames(e){return o&&"[object Window]"==s.call(e)?function(e){try{return a(e)}catch(t){return o.slice()}}(e):a(r(e))}},"05bb":function(e,t,n){"use strict";n.d(t,"a",(function(){return tensor3d}));var r=n("a3f7"),a=n("6ad5"),s=n("5959");function tensor3d(e,t,n){if(Object(a.d)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const o=Object(r.c)(e,n);if(3!==o.length&&1!==o.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===o.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Object(s.a)(e,t,o,n)}},"06cf":function(e,t,n){var r=n("83ab"),a=n("d1e7"),s=n("5c6c"),o=n("fc6a"),i=n("c04ea"),u=n("5135"),c=n("0cfb"),l=Object.getOwnPropertyDescriptor;t.f=r?l:function getOwnPropertyDescriptor(e,t){if(e=o(e),t=i(t,!0),c)try{return l(e,t)}catch(n){}if(u(e,t))return s(!a.f.call(e,t),e[t])}},"0777":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("54ef");const u=Object(i.a)({complex_:function complex_(e,t){const n=Object(s.a)(e,"real","complex"),i=Object(s.a)(t,"imag","complex");o.e(n.shape,i.shape,`real and imag shapes, ${n.shape} and ${i.shape}, must match in call to tf.complex().`);const u={real:n,imag:i};return r.a.runKernel(a.z,u)}})},"07d6":function(e,t){e.exports=function(){throw new Error("define cannot be used indirect")}},"07e8":function(e,t,n){(function(e){var r;!function(e,a,s){function XorGen(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function copy(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function impl(e,t){var n=new XorGen(e),r=t&&t.state,prng=function(){return(n.next()>>>0)/4294967296};return prng.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},prng.int32=n.next,prng.quick=prng,r&&("object"==typeof r&&copy(r,n),prng.state=function(){return copy(n,{})}),prng}a&&a.exports?a.exports=impl:n("07d6")&&n("3c35")?void 0===(r=function(){return impl}.call(t,n,t,a))||(a.exports=r):this.tychei=impl}(0,e,n("07d6"))}).call(this,n("62e4")(e))},"08a9":function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({round_:function round_(e){const t={x:Object(s.a)(e,"x","round")};return r.a.runKernel(a.uc,t)}})},"09f4":function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),o=n("a3f7"),i=n("526f"),u=n("deb3"),c=n("54ef");const l=Object(c.a)({maximum_:function maximum_(e,t){let n=Object(o.a)(e,"a","maximum"),c=Object(o.a)(t,"b","maximum");[n,c]=Object(s.makeTypesMatch)(n,c),"bool"===n.dtype&&(n=Object(u.a)(n,"int32"),c=Object(u.a)(c,"int32")),Object(i.a)(n.shape,c.shape);const l={a:n,b:c};return r.a.runKernel(a.Nb,l)}})},"0cfb":function(e,t,n){var r=n("83ab"),a=n("d039"),s=n("cc12");e.exports=!r&&!a((function(){return 7!=Object.defineProperty(s("div"),"a",{get:function(){return 7}}).a}))},"0db5":function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({onesLike_:function onesLike_(e){const t={x:Object(s.a)(e,"x","onesLike")};return r.a.runKernel(a.bc,t)}})},"0eb5":function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({pad_:function pad_(e,t,n=0){const o=Object(s.a)(e,"x","pad");if(0===o.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const i={paddings:t,constantValue:n},u={x:o};return r.a.runKernel(a.dc,u,i)}})},"0f6f":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("6ad5"),o=n("54ef"),i=n("35c9");const u=Object(o.a)({conv2DBackpropFilter_:function conv2DBackpropFilter_(e,t,n,o,u,c="NHWC",l){let d=e;3===e.rank&&(d=Object(i.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let p=t;3===p.rank&&(p=Object(i.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),s.b(4===d.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${d.shape}.`)),s.b(4===p.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${p.shape}.`)),s.b(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const h="NHWC"===c?d.shape[3]:d.shape[1],f="NHWC"===c?p.shape[3]:p.shape[1];s.b(h===n[2],(()=>`Error in conv2dDerFilter: depth of input ${h}) must match input depth in filter (${n[2]}.`)),s.b(f===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${f}) must match output depth for filter (${n[3]}).`)),null!=l&&s.b(s.v(u),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${l} but got pad ${u}.`));const m={x:d,dy:p},g={strides:o,pad:u,dataFormat:c,dimRoundingMode:l,filterShape:n};return r.a.runKernel(a.D,m,g)}})},"0f86":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("54ef"),u=n("35c9");const c=Object(i.a)({resizeNearestNeighbor_:function resizeNearestNeighbor_(e,t,n=!1,i=!1){const c=Object(s.a)(e,"images","resizeNearestNeighbor");o.b(3===c.rank||4===c.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${c.rank}.`)),o.b(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),o.b("float32"===c.dtype||"int32"===c.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),o.b(!1===i||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let l=c,d=!1;3===c.rank&&(d=!0,l=Object(u.a)(c,[1,c.shape[0],c.shape[1],c.shape[2]]));const[]=t,p={images:l},h={alignCorners:n,halfPixelCenters:i,size:t},f=r.a.runKernel(a.qc,p,h);return d?Object(u.a)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},1:function(e,t){},"113e":function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}]},"116b":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("a3f7"),a=n("6ad5"),s=n("dd7e"),o=n("838f"),i=n("54ef"),u=n("35c9");const c=Object(i.a)({separableConv2d_:function separableConv2d_(e,t,n,i,c,l=[1,1],d="NHWC"){const p=Object(r.a)(e,"x","separableConv2d"),h=Object(r.a)(t,"depthwiseFilter","separableConv2d"),f=Object(r.a)(n,"pointwiseFilter","separableConv2d");let m=p,g=!1;if(3===p.rank&&(g=!0,m=Object(u.a)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),"NCHW"===d)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");a.b(4===m.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${m.rank}.`)),a.b(4===h.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${h.rank}.`)),a.b(4===f.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${h.rank}.`)),a.b(1===f.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${f.shape[0]}.`)),a.b(1===f.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${f.shape[1]}.`));const b=h.shape[2],y=h.shape[3];a.b(f.shape[2]===b*y,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${b*y}, but got ${f.shape[2]}.`));const x=Object(o.a)(m,h,i,c,d,l),v=Object(s.a)(x,f,1,"valid",d);return g?Object(u.a)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},1212:function(e,t,n){(function(e){var r;!function(e,a,s){function Alea(e){var t=this,n=function Mash(){var e=4022871197;return function(t){t=t.toString();for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)}}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function copy(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function impl(e,t){var n=new Alea(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&copy(r,n),a.state=function(){return copy(n,{})}),a}a&&a.exports?a.exports=impl:n("07d6")&&n("3c35")?void 0===(r=function(){return impl}.call(t,n,t,a))||(a.exports=r):this.alea=impl}(0,e,n("07d6"))}).call(this,n("62e4")(e))},"122e":function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({mean_:function mean_(e,t=null,n=!1){const o={x:Object(s.a)(e,"x","mean")},i={axis:t,keepDims:n};return r.a.runKernel(a.Ob,o,i)}})},1276:function(e,t,n){"use strict";var r=n("d784"),a=n("44e7"),s=n("825a"),o=n("1d80"),i=n("4840"),u=n("8aa5"),c=n("50c4"),l=n("14c3"),d=n("9263"),p=n("9f7f").UNSUPPORTED_Y,h=[].push,f=Math.min,m=4294967295;r("split",2,(function(e,t,n){var r;return r="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(e,n){var r=String(o(this)),s=void 0===n?m:n>>>0;if(0===s)return[];if(void 0===e)return[r];if(!a(e))return t.call(r,e,s);for(var i,u,c,l=[],p=(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"")+(e.sticky?"y":""),f=0,g=new RegExp(e.source,p+"g");(i=d.call(g,r))&&!((u=g.lastIndex)>f&&(l.push(r.slice(f,i.index)),i.length>1&&i.index<r.length&&h.apply(l,i.slice(1)),c=i[0].length,f=u,l.length>=s));)g.lastIndex===i.index&&g.lastIndex++;return f===r.length?!c&&g.test("")||l.push(""):l.push(r.slice(f)),l.length>s?l.slice(0,s):l}:"0".split(void 0,0).length?function(e,n){return void 0===e&&0===n?[]:t.call(this,e,n)}:t,[function split(t,n){var a=o(this),s=null==t?void 0:t[e];return void 0!==s?s.call(t,a,n):r.call(String(a),t,n)},function(e,a){var o=n(r,e,this,a,r!==t);if(o.done)return o.value;var d=s(e),h=String(this),g=i(d,RegExp),b=d.unicode,y=(d.ignoreCase?"i":"")+(d.multiline?"m":"")+(d.unicode?"u":"")+(p?"g":"y"),x=new g(p?"^(?:"+d.source+")":d,y),v=void 0===a?m:a>>>0;if(0===v)return[];if(0===h.length)return null===l(x,h)?[h]:[];for(var k=0,w=0,O=[];w<h.length;){x.lastIndex=p?0:w;var _,I=l(x,p?h.slice(w):h);if(null===I||(_=f(c(x.lastIndex+(p?w:0)),h.length))===k)w=u(h,w,b);else{if(O.push(h.slice(k,w)),O.length===v)return O;for(var S=1;S<=I.length-1;S++)if(O.push(I[S]),O.length===v)return O;w=k=_}}return O.push(h.slice(k)),O}]}),p)},"132b":function(e,t,n){"use strict";n.d(t,"a",(function(){return a.a})),n.d(t,"b",(function(){return s.a})),n.d(t,"c",(function(){return o.a})),n.d(t,"d",(function(){return i.a})),n.d(t,"e",(function(){return u.a})),n.d(t,"f",(function(){return c.a})),n.d(t,"g",(function(){return l.a})),n.d(t,"h",(function(){return m})),n.d(t,"i",(function(){return g})),n.d(t,"j",(function(){return b})),n.d(t,"k",(function(){return y.a})),n.d(t,"l",(function(){return x.a})),n.d(t,"m",(function(){return v.a})),n.d(t,"n",(function(){return k.a})),n.d(t,"o",(function(){return w.a})),n.d(t,"p",(function(){return O})),n.d(t,"q",(function(){return _})),n.d(t,"r",(function(){return I})),n.d(t,"s",(function(){return S})),n.d(t,"t",(function(){return N.a})),n.d(t,"u",(function(){return C.a})),n.d(t,"v",(function(){return T.a})),n.d(t,"w",(function(){return A.a})),n.d(t,"x",(function(){return E.a})),n.d(t,"y",(function(){return j.a})),n.d(t,"A",(function(){return R.a})),n.d(t,"B",(function(){return $.a})),n.d(t,"C",(function(){return D.a})),n.d(t,"D",(function(){return z.a})),n.d(t,"E",(function(){return M})),n.d(t,"F",(function(){return B.a})),n.d(t,"G",(function(){return V.a})),n.d(t,"I",(function(){return W.a})),n.d(t,"J",(function(){return U.a})),n.d(t,"K",(function(){return G.a})),n.d(t,"M",(function(){return H.a})),n.d(t,"O",(function(){return K.a})),n.d(t,"P",(function(){return q.a})),n.d(t,"Q",(function(){return X.a})),n.d(t,"R",(function(){return J.a})),n.d(t,"S",(function(){return Y.a})),n.d(t,"T",(function(){return Z.a})),n.d(t,"U",(function(){return Q.a})),n.d(t,"V",(function(){return ee.a})),n.d(t,"W",(function(){return te.a})),n.d(t,"X",(function(){return ne.a})),n.d(t,"Y",(function(){return oe})),n.d(t,"Z",(function(){return ie.a})),n.d(t,"ab",(function(){return ue.a})),n.d(t,"bb",(function(){return ce.a})),n.d(t,"cb",(function(){return le.a})),n.d(t,"db",(function(){return de.a})),n.d(t,"eb",(function(){return pe.a})),n.d(t,"fb",(function(){return he.a})),n.d(t,"gb",(function(){return fe.a})),n.d(t,"hb",(function(){return ge.a})),n.d(t,"ib",(function(){return ye})),n.d(t,"jb",(function(){return xe.a})),n.d(t,"kb",(function(){return ve.a})),n.d(t,"lb",(function(){return ke.a})),n.d(t,"mb",(function(){return P.a})),n.d(t,"nb",(function(){return we.a})),n.d(t,"ob",(function(){return Oe.a})),n.d(t,"pb",(function(){return _e.a})),n.d(t,"qb",(function(){return Ie.a})),n.d(t,"rb",(function(){return Se.a})),n.d(t,"sb",(function(){return Ne.a})),n.d(t,"tb",(function(){return Ce})),n.d(t,"ub",(function(){return Te})),n.d(t,"vb",(function(){return Ae})),n.d(t,"wb",(function(){return Ee})),n.d(t,"xb",(function(){return je.a})),n.d(t,"yb",(function(){return Re.a})),n.d(t,"zb",(function(){return $e.a})),n.d(t,"Ab",(function(){return Fe.a})),n.d(t,"Bb",(function(){return ae.a})),n.d(t,"Cb",(function(){return De.a})),n.d(t,"Db",(function(){return ze.a})),n.d(t,"Eb",(function(){return se.a})),n.d(t,"Fb",(function(){return Pe.a})),n.d(t,"Gb",(function(){return Le.a})),n.d(t,"Hb",(function(){return Me.a})),n.d(t,"Ib",(function(){return Be.a})),n.d(t,"Jb",(function(){return tensor2d})),n.d(t,"Kb",(function(){return L.a})),n.d(t,"Mb",(function(){return We.a})),n.d(t,"Nb",(function(){return Ue.a})),n.d(t,"Ob",(function(){return variable})),n.d(t,"Pb",(function(){return He.a})),n.d(t,"Qb",(function(){return Ke.a})),n.d(t,"Rb",(function(){return qe.a})),n.d(t,"Lb",(function(){return Xe.a})),n.d(t,"z",(function(){return Ye})),n.d(t,"L",(function(){return Vt})),n.d(t,"N",(function(){return Wt})),n.d(t,"H",(function(){return r}));var r={};n.r(r),n.d(r,"conv2d",(function(){return lt})),n.d(r,"depthwiseConv2d",(function(){return ht})),n.d(r,"matMul",(function(){return mt}));var a=n("8ae0"),s=n("9117"),o=n("df81"),i=n("4516"),u=n("e89f"),c=n("9748"),l=n("ba53"),d=n("a3f7"),p=n("6ad5"),h=n("71db"),f=n("54ef");const m=Object(f.a)({batchNorm2d_:function batchNorm2d_(e,t,n,r,a,s){const o=Object(d.a)(e,"x","batchNorm"),i=Object(d.a)(t,"mean","batchNorm"),u=Object(d.a)(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(d.a)(a,"scale","batchNorm")),null!=r&&(l=Object(d.a)(r,"offset","batchNorm")),p.b(2===o.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`)),p.b(2===i.rank||1===i.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`)),p.b(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&p.b(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`)),null!=l&&p.b(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${l.rank}.`)),Object(h.a)(o,i,u,l,c,s)}});const g=Object(f.a)({batchNorm3d_:function batchNorm3d_(e,t,n,r,a,s){const o=Object(d.a)(e,"x","batchNorm"),i=Object(d.a)(t,"mean","batchNorm"),u=Object(d.a)(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(d.a)(a,"scale","batchNorm")),null!=r&&(l=Object(d.a)(r,"offset","batchNorm")),p.b(3===o.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`)),p.b(3===i.rank||1===i.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`)),p.b(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&p.b(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`)),null!=l&&p.b(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${l.rank}.`)),Object(h.a)(o,i,u,l,c,s)}});const b=Object(f.a)({batchNorm4d_:function batchNorm4d_(e,t,n,r,a,s){const o=Object(d.a)(e,"x","batchNorm"),i=Object(d.a)(t,"mean","batchNorm"),u=Object(d.a)(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(d.a)(a,"scale","batchNorm")),null!=r&&(l=Object(d.a)(r,"offset","batchNorm")),p.b(4===o.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`)),p.b(4===i.rank||1===i.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`)),p.b(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&p.b(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`)),null!=l&&p.b(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${l.rank}.`)),Object(h.a)(o,i,u,l,c,s)}});var y=n("043e"),x=n("deb3"),v=n("c08f"),k=n("f0a9"),w=n("649e");const O=Object(f.a)({concat1d_:function concat1d_(e){return Object(w.a)(e,0)}});const _=Object(f.a)({concat2d_:function concat2d_(e,t){return Object(w.a)(e,t)}});const I=Object(f.a)({concat3d_:function concat3d_(e,t){return Object(w.a)(e,t)}});const S=Object(f.a)({concat4d_:function concat4d_(e,t){return Object(w.a)(e,t)}});var N=n("7675"),C=n("dd7e"),T=n("cd1f"),A=n("1590"),E=n("838f"),j=n("c77c"),R=n("9e38"),$=n("b9b9"),D=n("4f20"),z=n("dae8"),P=n("35c9"),L=n("8d71");const M=Object(f.a)({eye_:function eye_(e,t,n,r="float32"){null==t&&(t=e);const a=Object(y.a)([e,t],r),s=e<=t?e:t;for(let i=0;i<s;++i)a.set(1,i,i);const o=Object(P.a)(a.toTensor(),[e,t]);if(null==n)return o;if(1===n.length)return Object(L.a)(Object(z.a)(o,0),[n[0],1,1]);if(2===n.length)return Object(L.a)(Object(z.a)(Object(z.a)(o,0),0),[n[0],n[1],1,1]);if(3===n.length)return Object(L.a)(Object(z.a)(Object(z.a)(Object(z.a)(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});var B=n("46b8"),V=n("d369"),W=n("91a3"),U=n("cef0"),G=n("bb2d"),H=n("6f37"),K=n("1359"),q=n("804a"),X=n("e333"),J=n("c021"),Y=n("9fe6"),Z=n("53fd"),Q=n("09f4"),ee=n("122e"),te=n("ae6d"),ne=n("f0e5"),re=n("36e5"),ae=n("93b2"),se=n("a009");const oe=Object(f.a)({moments_:function moments_(e,t=null,n=!1){e=Object(d.a)(e,"x","moments");const r=Object(p.I)(t,e.shape),a=Object(ee.a)(e,r,n);let s=a.shape;n||(s=Object(re.e)(a.shape,r));const o=Object(ae.a)(Object(se.a)(Object(x.a)(e,"float32"),Object(P.a)(a,s)));return{mean:a,variance:Object(ee.a)(o,r,n)}}});var ie=n("a5aa"),ue=n("3bb7"),ce=n("d4de"),le=n("e22c"),de=n("c22a"),pe=n("0db5"),he=n("0eb5"),fe=n("c9f1"),ge=n("520f"),be=n("d4e4");const ye=Object(f.a)({randomNormal_:function randomNormal_(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const s=new be.a(t,n,r,!1,a),o=Object(y.a)(e,r);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});var xe=n("8629"),ve=n("84d6"),ke=n("917a"),we=n("d08e"),Oe=n("015f"),_e=n("b39e"),Ie=n("116b"),Se=n("ffb3"),Ne=n("6d3c");const Ce=Object(f.a)({slice1d_:function slice1d_(e,t,n){const r=Object(d.a)(e,"x","slice1d");return p.b(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),Object(Ne.a)(r,[t],[n])}});const Te=Object(f.a)({slice2d_:function slice2d_(e,t,n){const r=Object(d.a)(e,"x","slice2d");return p.b(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),Object(Ne.a)(r,t,n)}});const Ae=Object(f.a)({slice3d_:function slice3d_(e,t,n){const r=Object(d.a)(e,"x","slice3d");return p.b(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),Object(Ne.a)(r,t,n)}});const Ee=Object(f.a)({slice4d_:function slice4d_(e,t,n){const r=Object(d.a)(e,"x","slice4d");return p.b(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),Object(Ne.a)(r,t,n)}});var je=n("5f87"),Re=n("9ffd"),$e=n("45bb"),Fe=n("163a"),De=n("d1f4"),ze=n("d54d"),Pe=n("e053"),Le=n("8888"),Me=n("357d"),Be=n("960f"),Ve=n("5959");function tensor2d(e,t,n){if(Object(p.d)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Object(d.c)(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Object(Ve.a)(e,t,r,n)}var We=n("7e6a"),Ue=n("3a44"),Ge=n("6ae2");function variable(e,t=!0,n,r){return Ge.a.makeVariable(e,t,n,r)}var He=n("6791"),Ke=n("5a2c"),qe=n("a09b"),Xe=n("c912"),Je=n("34d7");const Ye=Object(f.a)({dropout_:function dropout_(e,t,n,r){const a=Object(d.a)(e,"x","dropout");if(p.b("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),p.b(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Je.a?a.clone():a;const o=function getNoiseShape(e,t){if(null==t)return e.shape.slice();if(p.a(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),i=1-t,u=Object(j.a)(Object(V.a)(Object(s.a)(Object(xe.a)(o,0,1,"float32",r),i)),i);return Object(ie.a)(a,u)}});var Ze=n("b61d"),Qe=n("1ab7"),et=n("4c7a"),tt=n("69dc"),nt=n("538e"),rt=n("c05b"),at=n("76c2"),st=n("526f"),ot=n("0f6f"),it=n("73d3"),ut=n("b818"),ct=n("4749");const lt=Object(f.a)({fusedConv2d_:function fusedConv2d_({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:u,activation:c="linear",preluActivationWeights:l,leakyreluAlpha:h}){if(c=c||"linear",!1===Object(ct.d)(Ge.a.state.gradientDepth,c)){let d=Object(C.a)(e,t,n,r,a,o,i);return null!=u&&(d=Object(s.a)(d,u)),Object(ct.a)(d,c,l,h)}const f=Object(d.a)(e,"x","conv2d"),m=Object(d.a)(t,"filter","conv2d");let g=f,b=!1;3===f.rank&&(b=!0,g=Object(P.a)(f,[1,f.shape[0],f.shape[1],f.shape[2]])),p.b(4===g.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${g.rank}.`)),p.b(4===m.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${m.rank}.`)),null!=i&&p.b(p.v(r),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`)),p.b(g.shape[3]===m.shape[2],(()=>`Error in conv2d: depth of input (${g.shape[3]}) must match input depth for filter ${m.shape[2]}.`)),p.b(ut.h(n,o),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`)),p.b("NHWC"===a,(()=>`Error in conv2d: got dataFormat of ${a} but only NHWC is currently supported.`));const y=ut.a(g.shape,m.shape,n,o,r,i);let x,v;null!=u&&(x=Object(d.a)(u,"bias","fused conv2d"),[x]=Object(at.makeTypesMatch)(x,f),st.a(y.outShape,x.shape)),null!=l&&(v=Object(d.a)(l,"prelu weights","fused conv2d"));const grad=(e,t)=>{const[a,s,i,u]=t,l=Object(ct.c)(e,i,c);p.b(ut.i(o),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`));const d=[Object(it.a)(s.shape,l,a,n,r),Object(ot.a)(s,l,a.shape,n,r)];if(null!=u){const e=Object(ct.b)(u,l);d.push(e)}return d},k={x:g,filter:m,bias:x,preluActivationWeights:v},w={strides:n,pad:r,dataFormat:a,dilations:o,dimRoundingMode:i,activation:c,leakyreluAlpha:h};if(null==u){return Object(nt.a)(((e,t,n)=>{let r=Ge.a.runKernel(rt.jb,k,w);return n([t,e,r]),b&&(r=Object(P.a)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:grad}}))(g,m)}return Object(nt.a)(((e,t,n,r)=>{let a=Ge.a.runKernel(rt.jb,k,w);return r([t,e,a,n]),b&&(a=Object(P.a)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:grad}}))(g,m,x)}});var dt=n("6926"),pt=n("8cb0");const ht=Object(f.a)({fusedDepthwiseConv2d_:function fusedDepthwiseConv2d_({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:u,activation:c="linear",preluActivationWeights:l,leakyreluAlpha:h}){if(!1===Object(ct.d)(Ge.a.state.gradientDepth,c)){let d=Object(E.a)(e,t,n,r,a,o,i);return null!=u&&(d=Object(s.a)(d,u)),Object(ct.a)(d,c,l,h)}const f=Object(d.a)(e,"x","depthwiseConv2d"),m=Object(d.a)(t,"filter","depthwiseConv2d");let g=f,b=!1;3===f.rank&&(b=!0,g=Object(P.a)(f,[1,f.shape[0],f.shape[1],f.shape[2]])),p.b(4===g.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${g.rank}.`)),p.b(4===m.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${m.rank}.`)),p.b(g.shape[3]===m.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${g.shape[3]}) must match the inChannels dimension in filter ${m.shape[2]}.`)),null==o&&(o=[1,1]),p.b(ut.h(n,o),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`)),null!=i&&p.b(p.v(r),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${r}.`));const y=ut.a(g.shape,m.shape,n,o,r,i,!0);let x,v;null!=u&&(x=Object(d.a)(u,"bias","fused conv2d"),[x]=Object(at.makeTypesMatch)(x,f),st.a(y.outShape,x.shape)),null!=l&&(v=Object(d.a)(l,"prelu weights","fused depthwiseConv2d"));const grad=(e,t)=>{p.b(ut.i(o),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[a,s,u,l]=t,d=Object(ct.c)(e,u,c),h=Object(pt.a)(s.shape,d,a,n,r,o,i),f=Object(dt.a)(s,d,a.shape,n,r,o,i);if(null!=l){return[h,f,Object(ct.b)(x,d)]}return[h,f]},k={x:g,filter:m,bias:x,preluActivationWeights:v},w={strides:n,pad:r,dataFormat:a,dilations:o,dimRoundingMode:i,activation:c,leakyreluAlpha:h};if(null==u){return Object(nt.a)(((e,t,n)=>{let r=Ge.a.runKernel(rt.kb,k,w);return n([t,e,r]),b&&(r=Object(P.a)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:grad}}))(g,m)}return Object(nt.a)(((e,t,n,r)=>{let a=Ge.a.runKernel(rt.kb,k,w);return r([t,e,a,n]),b&&(a=Object(P.a)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:grad}}))(g,m,x)}});var ft=n("487b");const mt=Object(f.a)({fusedMatMul_:function fusedMatMul_({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:o="linear",preluActivationWeights:i,leakyreluAlpha:u}){if(!1===Object(ct.d)(Ge.a.state.gradientDepth,o)){let c=Object(ft.a)(e,t,n,r);return null!=a&&(c=Object(s.a)(c,a)),Object(ct.a)(c,o,i,u)}let c=Object(d.a)(e,"a","fused matMul"),l=Object(d.a)(t,"b","fused matMul");[c,l]=Object(at.makeTypesMatch)(c,l);const h=n?c.shape[c.rank-2]:c.shape[c.rank-1],f=r?l.shape[l.rank-1]:l.shape[l.rank-2],m=n?c.shape[c.rank-1]:c.shape[c.rank-2],g=r?l.shape[l.rank-2]:l.shape[l.rank-1],b=c.shape.slice(0,-2),y=l.shape.slice(0,-2),x=p.O(b),v=p.O(y);p.b(c.rank>=2&&l.rank>=2&&c.rank===l.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${c.rank} and ${l.rank}.`)),p.b(p.a(b,y),(()=>`Error in fused matMul: outer dimensions (${b}) and (${y}) of Tensors with shapes ${c.shape} and ${l.shape} must match.`)),p.b(h===f,(()=>`Error in fused matMul: inner shapes (${h}) and (${f}) of Tensors with shapes ${c.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`));const k=c.shape.slice(0,-2).concat([m,g]),w=n?Object(P.a)(c,[x,h,m]):Object(P.a)(c,[x,m,h]),O=r?Object(P.a)(l,[v,g,f]):Object(P.a)(l,[v,f,g]);let _,I;null!=a&&(_=Object(d.a)(a,"bias","fused matMul"),[_]=Object(at.makeTypesMatch)(_,c),st.a(k,_.shape)),null!=i&&(I=Object(d.a)(i,"prelu weights","fused matMul"));const grad=(e,t)=>{const[s,i,u,c]=t,l=Object(ct.c)(Object(P.a)(e,u.shape),u,o);let d,p;if(n||r?!n&&r?(d=Object(ft.a)(l,i,!1,!1),p=Object(ft.a)(l,s,!0,!1)):n&&!r?(d=Object(ft.a)(i,l,!1,!0),p=Object(ft.a)(s,l,!1,!1)):(d=Object(ft.a)(i,l,!0,!0),p=Object(ft.a)(l,s,!0,!0)):(d=Object(ft.a)(l,i,!1,!0),p=Object(ft.a)(s,l,!0,!1)),null!=a){return[d,p,Object(ct.b)(c,l)]}return[d,p]},S={a:w,b:O,bias:_,preluActivationWeights:I},N={transposeA:n,transposeB:r,activation:o,leakyreluAlpha:u};if(null==a){return Object(nt.a)(((e,t,n)=>{const r=Ge.a.runKernel(rt.ad,S,N);return n([e,t,r]),{value:Object(P.a)(r,k),gradFunc:grad}}))(w,O)}return Object(nt.a)(((e,t,n,r)=>{const a=Ge.a.runKernel(rt.ad,S,N);return r([e,t,a,n]),{value:Object(P.a)(a,k),gradFunc:grad}}))(w,O,_)}});function cosineWindow(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){const o=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(o)}return Object(Be.a)(a,"float32")}Object(f.a)({hammingWindow_:function hammingWindow_(e){return cosineWindow(e,.54,.46)}});const gt=Object(f.a)({hannWindow_:function hannWindow_(e){return cosineWindow(e,.5,.5)}});const bt=Object(f.a)({frame_:function frame_(e,t,n,r=!1,a=0){let s=0;const o=[];for(;s+t<=e.size;)o.push(Object(Ne.a)(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,i=Object(w.a)([Object(Ne.a)(e,s,t-r),Object(B.a)([r],a)]);o.push(i),s+=n}return 0===o.length?tensor2d([],[0,t]):Object(P.a)(Object(w.a)(o),[o.length,t])}});Object(f.a)({stft_:function stft_(e,t,n,r,a=gt){null==r&&(r=function enclosingPowerOfTwo(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}(t));const s=bt(e,t,n),o=Object(ie.a)(s,a(t)),i=[];for(let u=0;u<s.shape[0];u++)i.push(Object(Ze.a)(Object(Ne.a)(o,[u,0],[1,t]),r));return Object(w.a)(i)}});const yt=Object(f.a)({cropAndResize_:function cropAndResize_(e,t,n,r,a="bilinear",s=0){const o=Object(d.a)(e,"image","cropAndResize"),i=Object(d.a)(t,"boxes","cropAndResize","float32"),u=Object(d.a)(n,"boxInd","cropAndResize","int32"),c=i.shape[0];p.b(4===o.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`)),p.b(2===i.rank&&4===i.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${i.shape}.`)),p.b(1===u.rank&&u.shape[0]===c,(()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${i.shape}.`)),p.b(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),p.b(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),p.b("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));const l={image:o,boxes:i,boxInd:u},h={method:a,extrapolationValue:s,cropSize:r};return Ge.a.runKernel(rt.K,l,h)}});const xt=Object(f.a)({flipLeftRight_:function flipLeftRight_(e){const t=Object(d.a)(e,"image","flipLeftRight","float32");p.b(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return Ge.a.runKernel(rt.eb,n,{})}});const vt=Object(f.a)({rotateWithOffset_:function rotateWithOffset_(e,t,n=0,r=.5){const a=Object(d.a)(e,"image","rotateWithOffset","float32");p.b(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));const s={image:a},o={radians:t,fillValue:n,center:r};return Ge.a.runKernel(rt.tc,s,o)}});function nonMaxSuppSanityCheck(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const o=e.shape[0];return n=Math.min(n,o),p.b(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),p.b(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),p.b(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),p.b(1===t.rank,(()=>"scores must be a 1D tensor")),p.b(t.shape[0]===o,(()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`)),p.b(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}const kt=Object(f.a)({nonMaxSuppression_:function nonMaxSuppression_(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=Object(d.a)(e,"boxes","nonMaxSuppression"),o=Object(d.a)(t,"scores","nonMaxSuppression"),i=nonMaxSuppSanityCheck(s,o,n,r,a),u={maxOutputSize:n=i.maxOutputSize,iouThreshold:r=i.iouThreshold,scoreThreshold:a=i.scoreThreshold};return Ge.a.runKernel(rt.Wb,{boxes:s,scores:o},u)}});var wt=n("8389");const Ot=async function nonMaxSuppressionAsync_(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=Object(d.a)(e,"boxes","nonMaxSuppressionAsync"),o=Object(d.a)(t,"scores","nonMaxSuppressionAsync"),i=nonMaxSuppSanityCheck(s,o,n,r,a);n=i.maxOutputSize,r=i.iouThreshold,a=i.scoreThreshold;const u=await Promise.all([s.data(),o.data()]),c=u[0],l=u[1],{selectedIndices:p}=Object(wt.a)(c,l,n,r,a);return s!==e&&s.dispose(),o!==t&&o.dispose(),Object(Be.a)(p,"int32")};const _t=Object(f.a)({nonMaxSuppressionWithScore_:function nonMaxSuppressionWithScore_(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const o=Object(d.a)(e,"boxes","nonMaxSuppression"),i=Object(d.a)(t,"scores","nonMaxSuppression"),u=nonMaxSuppSanityCheck(o,i,n,r,a,s),c={boxes:o,scores:i},l={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:s=u.softNmsSigma},p=Ge.a.runKernel(rt.Yb,c,l);return{selectedIndices:p[0],selectedScores:p[1]}}});const It=async function nonMaxSuppressionWithScoreAsync_(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const o=Object(d.a)(e,"boxes","nonMaxSuppressionAsync"),i=Object(d.a)(t,"scores","nonMaxSuppressionAsync"),u=nonMaxSuppSanityCheck(o,i,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;const c=await Promise.all([o.data(),i.data()]),l=c[0],p=c[1],{selectedIndices:h,selectedScores:f}=Object(wt.c)(l,p,n,r,a,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Object(Be.a)(h,"int32"),selectedScores:Object(Be.a)(f)}};const St=Object(f.a)({nonMaxSuppressionPadded_:function nonMaxSuppressionPadded_(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const o=Object(d.a)(e,"boxes","nonMaxSuppression"),i=Object(d.a)(t,"scores","nonMaxSuppression"),u=nonMaxSuppSanityCheck(o,i,n,r,a,null),c={boxes:o,scores:i},l={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:s},p=Ge.a.runKernel(rt.Xb,c,l);return{selectedIndices:p[0],validOutputs:p[1]}}});const Nt=async function nonMaxSuppressionPaddedAsync_(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const o=Object(d.a)(e,"boxes","nonMaxSuppressionAsync"),i=Object(d.a)(t,"scores","nonMaxSuppressionAsync"),u=nonMaxSuppSanityCheck(o,i,n,r,a,null),c=u.maxOutputSize,l=u.iouThreshold,p=u.scoreThreshold,[h,f]=await Promise.all([o.data(),i.data()]),{selectedIndices:m,validOutputs:g}=Object(wt.b)(h,f,c,l,p,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Object(Be.a)(m,"int32"),validOutputs:Object(Oe.a)(g,"int32")}};var Ct=n("73f8"),Tt=n("0f86");const At=Object(f.a)({transform_:function transform_(e,t,n="nearest",r="constant",a=0,s){const o=Object(d.a)(e,"image","transform","float32"),i=Object(d.a)(t,"transforms","transform","float32");p.b(4===o.rank,(()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`)),p.b(2===i.rank&&(i.shape[0]===o.shape[0]||1===i.shape[0])&&8===i.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),p.b(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`));const u={image:o,transforms:i},c={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return Ge.a.runKernel(rt.Uc,u,c)}});var Et=n("b21c");const jt=Object(f.a)({bandPart_:function bandPart_(e,t,n){Object(p.b)(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),Object(p.b)(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=Object(d.a)(e,"a","bandPart");Object(p.b)(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const a=r.shape,[s,o]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=o))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`);t<0&&(t=s),n<0&&(n=o);const i=Object(P.a)(Object(ve.a)(0,s,1,"int32"),[-1,1]),u=Object(ve.a)(0,o,1,"int32"),c=Object(se.a)(i,u),l=Object(X.a)(Object(Et.a)(c,Object(Oe.a)(+t,"int32")),Object(G.a)(c,Object(Oe.a)(-n,"int32"))),h=Object(Ke.a)([s,o],r.dtype);return Object(P.a)(Object(ze.a)(Object(Ue.a)(Object(P.a)(r,[-1,s,o])).map((e=>Object(He.a)(l,e,h)))),a)}});var Rt=n("f757");const $t=Object(f.a)({gramSchmidt_:function gramSchmidt_(e){let t;if(Array.isArray(e)){t=!1,Object(p.b)(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)Object(p.b)(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Object($e.a)(e,e.shape[0],0).map((e=>Object(De.a)(e,[0])));Object(p.b)(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let a=0;a<e.length;++a)n.push(Ge.a.tidy((()=>{let e=r[a];if(a>0)for(let t=0;t<a;++t){const r=Object(ie.a)(Object(Pe.a)(Object(ie.a)(n[t],e)),n[t]);e=Object(se.a)(e,r)}return Object(j.a)(e,Object(Rt.a)(e,"euclidean"))})));return t?Object(ze.a)(n,0):n}});var Ft=n("c04e");function qr2d(e,t=!1){return Ge.a.tidy((()=>{Object(p.b)(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let a=M(n),s=Object(k.a)(e);const o=tensor2d([[1]],[1,1]);let i=Object(k.a)(o);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=s,u=i,c=a;[i,s,a]=Ge.a.tidy((()=>{const t=Object(Ne.a)(s,[e,e],[n-e,1]),u=Object(Rt.a)(t),c=Object(Ne.a)(s,[e,e],[1,1]),l=Object(He.a)(Object(U.a)(c,0),tensor2d([[-1]]),tensor2d([[1]])),d=Object(se.a)(c,Object(ie.a)(l,u)),p=Object(j.a)(t,d);i=1===p.shape[0]?Object(k.a)(o):Object(w.a)([o,Object(Ne.a)(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const h=Object(ue.a)(Object(j.a)(Object(ft.a)(l,d),u)),f=Object(Ne.a)(s,[e,0],[n-e,r]),m=Object(ie.a)(h,i),g=Object(Xe.a)(i);if(0===e)s=Object(se.a)(f,Object(ft.a)(m,Object(ft.a)(g,f)));else{const t=Object(se.a)(f,Object(ft.a)(m,Object(ft.a)(g,f)));s=Object(w.a)([Object(Ne.a)(s,[0,0],[e,r]),t],0)}const b=Object(Xe.a)(m),y=Object(Ne.a)(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=Object(se.a)(y,Object(ft.a)(Object(ft.a)(y,i),b));else{const t=Object(se.a)(y,Object(ft.a)(Object(ft.a)(y,i),b));a=Object(w.a)([Object(Ne.a)(a,[0,0],[n,e]),t],1)}return[i,s,a]})),Object(Ft.b)([t,u,c])}return!t&&n>r&&(a=Object(Ne.a)(a,[0,0],[n,r]),s=Object(Ne.a)(s,[0,0],[r,r])),[a,s]}))}const Dt=Object(f.a)({qr_:function qr_(e,t=!1){if(Object(p.b)(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return qr2d(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=Object(Ue.a)(Object(P.a)(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];r.forEach((e=>{const[n,r]=qr2d(e,t);a.push(n),s.push(r)}));return[Object(P.a)(Object(ze.a)(a,0),e.shape),Object(P.a)(Object(ze.a)(s,0),e.shape)]}}});var zt=n("57e0");const Pt=Object(f.a)({computeWeightedLoss_:function computeWeightedLoss_(e,t,n=zt.a.SUM_BY_NONZERO_WEIGHTS){const r=Object(d.a)(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=Object(d.a)(t,"weights","computeWeightedLoss"));const s=null==a?r:Object(ie.a)(r,a);if(n===zt.a.NONE)return s;if(n===zt.a.SUM)return Object(Pe.a)(s);if(n===zt.a.MEAN){if(null==a)return Object(ee.a)(s);{const e=r.size/a.size,t=Object(j.a)(Object(Pe.a)(s),Object(Pe.a)(a));return e>1?Object(j.a)(t,Object(Oe.a)(e)):t}}if(n===zt.a.SUM_BY_NONZERO_WEIGHTS){if(null==a)return Object(j.a)(Object(Pe.a)(s),Object(Oe.a)(r.size));{const e=Object(ie.a)(a,Object(de.a)(r.shape)),t=Object(x.a)(Object(Pe.a)(Object(ce.a)(e,Object(Oe.a)(0))),"float32");return Object(j.a)(Object(Pe.a)(s),t)}}throw Error(`Unknown reduction: ${n}`)}});Object(f.a)({absoluteDifference_:function absoluteDifference_(e,t,n,r=zt.a.SUM_BY_NONZERO_WEIGHTS){const s=Object(d.a)(e,"labels","absoluteDifference"),o=Object(d.a)(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=Object(d.a)(n,"weights","absoluteDifference")),Object(p.e)(s.shape,o.shape,"Error in absoluteDifference: ");const u=Object(a.a)(Object(se.a)(s,o));return Pt(u,i,r)}});Object(f.a)({cosineDistance_:function cosineDistance_(e,t,n,r,a=zt.a.SUM_BY_NONZERO_WEIGHTS){const s=Object(d.a)(e,"labels","cosineDistance"),o=Object(d.a)(t,"predictions","cosineDistance");let i=null;null!=r&&(i=Object(d.a)(r,"weights","cosineDistance")),Object(p.e)(s.shape,o.shape,"Error in cosineDistance: ");const u=Object(Oe.a)(1),c=Object(se.a)(u,Object(Pe.a)(Object(ie.a)(s,o),n,!0));return Pt(c,i,a)}});Object(f.a)({hingeLoss_:function hingeLoss_(e,t,n,r=zt.a.SUM_BY_NONZERO_WEIGHTS){let a=Object(d.a)(e,"labels","hingeLoss");const s=Object(d.a)(t,"predictions","hingeLoss");let o=null;null!=n&&(o=Object(d.a)(n,"weights","hingeLoss")),Object(p.e)(a.shape,s.shape,"Error in hingeLoss: ");const i=Object(Oe.a)(1);a=Object(se.a)(Object(ie.a)(Object(Oe.a)(2),a),i);const u=Object(ke.a)(Object(se.a)(i,Object(ie.a)(a,s)));return Pt(u,o,r)}});Object(f.a)({huberLoss_:function huberLoss_(e,t,n,r=1,o=zt.a.SUM_BY_NONZERO_WEIGHTS){const i=Object(d.a)(e,"labels","huberLoss"),u=Object(d.a)(t,"predictions","huberLoss");let c=null;null!=n&&(c=Object(d.a)(n,"weights","huberLoss")),Object(p.e)(i.shape,u.shape,"Error in huberLoss: ");const l=Object(Oe.a)(r),h=Object(a.a)(Object(se.a)(u,i)),f=Object(ne.a)(h,l),m=Object(se.a)(h,f),g=Object(s.a)(Object(ie.a)(Object(Oe.a)(.5),Object(ae.a)(f)),Object(ie.a)(l,m));return Pt(g,c,o)}});Object(f.a)({logLoss_:function logLoss_(e,t,n,r=1e-7,a=zt.a.SUM_BY_NONZERO_WEIGHTS){const o=Object(d.a)(e,"labels","logLoss"),i=Object(d.a)(t,"predictions","logLoss");let u=null;null!=n&&(u=Object(d.a)(n,"weights","logLoss")),Object(p.e)(o.shape,i.shape,"Error in logLoss: ");const c=Object(Oe.a)(1),l=Object(Oe.a)(r),h=Object(ue.a)(Object(ie.a)(o,Object(K.a)(Object(s.a)(i,l)))),f=Object(ie.a)(Object(se.a)(c,o),Object(K.a)(Object(s.a)(Object(se.a)(c,i),l))),m=Object(se.a)(h,f);return Pt(m,u,a)}});var Lt=n("4184");Object(f.a)({meanSquaredError_:function meanSquaredError_(e,t,n,r=zt.a.SUM_BY_NONZERO_WEIGHTS){const a=Object(d.a)(e,"labels","meanSquaredError"),s=Object(d.a)(t,"predictions","meanSquaredError");let o=null;null!=n&&(o=Object(d.a)(n,"weights","meanSquaredError")),Object(p.e)(a.shape,s.shape,"Error in meanSquaredError: ");const i=Object(Lt.a)(a,s);return Pt(i,o,r)}});var Mt=n("46b1");Object(f.a)({sigmoidCrossEntropy_:function sigmoidCrossEntropy_(e,t,n,r=0,o=zt.a.SUM_BY_NONZERO_WEIGHTS){let i=Object(d.a)(e,"multiClassLabels","sigmoidCrossEntropy");const u=Object(d.a)(t,"logits","sigmoidCrossEntropy");let c=null;if(null!=n&&(c=Object(d.a)(n,"weights","sigmoidCrossEntropy")),Object(p.e)(i.shape,u.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=Object(Oe.a)(r),t=Object(Oe.a)(1),n=Object(Oe.a)(.5);i=Object(s.a)(Object(ie.a)(i,Object(se.a)(t,e)),Object(ie.a)(n,e))}const l=function sigmoidCrossEntropyWithLogits_(e,t){const n=Object(d.a)(e,"labels","sigmoidCrossEntropyWithLogits"),r=Object(d.a)(t,"logits","sigmoidCrossEntropyWithLogits");Object(p.e)(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const o=Object(ke.a)(r),i=Object(ie.a)(r,n),u=Object(Mt.a)(Object(D.a)(Object(ue.a)(Object(a.a)(r))));return Object(s.a)(Object(se.a)(o,i),u)}(i,u);return Pt(l,c,o)}});var Bt=n("afda");Object(f.a)({softmaxCrossEntropy_:function softmaxCrossEntropy_(e,t,n,r=0,a=zt.a.SUM_BY_NONZERO_WEIGHTS){let o=Object(d.a)(e,"onehotLabels","softmaxCrossEntropy");const i=Object(d.a)(t,"logits","softmaxCrossEntropy");let u=null;if(null!=n&&(u=Object(d.a)(n,"weights","softmaxCrossEntropy")),Object(p.e)(o.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=Object(Oe.a)(r),t=Object(Oe.a)(1),n=Object(Oe.a)(o.shape[1]);o=Object(s.a)(Object(ie.a)(o,Object(se.a)(t,e)),Object(j.a)(e,n))}const c=function softmaxCrossEntropyWithLogits_(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return Object(nt.a)(((e,t,r)=>{const a=Object(Bt.a)(t,[n],!0),s=Object(se.a)(Object(x.a)(t,"float32"),a);r([e,s]);const o=Object(ue.a)(Object(ie.a)(s,e));return{value:Object(Pe.a)(o,[n]),gradFunc:(e,t)=>{const[r,a]=t,s=Object(re.e)(e.shape,[n]);return[Object(ie.a)(Object(P.a)(e,s),Object(se.a)(Object(x.a)(r,"float32"),Object(D.a)(a))),Object(ie.a)(Object(P.a)(e,s),Object(se.a)(Object(D.a)(a),Object(x.a)(r,"float32")))]}}}))(e,t)}(o,i);return Pt(c,u,a)}}),Qe.a,et.a,Ze.a,tt.a;const Vt={flipLeftRight:xt,resizeNearestNeighbor:Tt.a,resizeBilinear:Ct.a,rotateWithOffset:vt,cropAndResize:yt,nonMaxSuppression:kt,nonMaxSuppressionAsync:Ot,nonMaxSuppressionWithScore:_t,nonMaxSuppressionWithScoreAsync:It,nonMaxSuppressionPadded:St,nonMaxSuppressionPaddedAsync:Nt,transform:At},Wt={bandPart:jt,gramSchmidt:$t,qr:Dt}},1359:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({log_:function log_(e){const t={x:Object(s.a)(e,"x","log")};return r.a.runKernel(a.Bb,t)}})},"14c3":function(e,t,n){var r=n("c6b6"),a=n("9263");e.exports=function(e,t){var n=e.exec;if("function"==typeof n){var s=n.call(e,t);if("object"!=typeof s)throw TypeError("RegExp exec method returned something other than an Object or null");return s}if("RegExp"!==r(e))throw TypeError("RegExp#exec called on incompatible receiver");return a.call(e,t)}},1590:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("b818"),u=n("54ef"),c=n("35c9");const l=Object(u.a)({conv3d_:function conv3d_(e,t,n,u,l="NDHWC",d=[1,1,1]){const p=Object(s.a)(e,"x","conv3d"),h=Object(s.a)(t,"filter","conv3d");let f=p,m=!1;4===p.rank&&(m=!0,f=Object(c.a)(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]])),o.b(5===f.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${f.rank}.`)),o.b(5===h.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${h.rank}.`)),o.b(f.shape[4]===h.shape[3],(()=>`Error in conv3d: depth of input (${f.shape[4]}) must match input depth for filter ${h.shape[3]}.`)),o.b(Object(i.h)(n,d),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${d}'`)),o.b("NDHWC"===l,(()=>`Error in conv3d: got dataFormat of ${l} but only NDHWC is currently supported.`));const g={x:f,filter:h},b={strides:n,pad:u,dataFormat:l,dilations:d},y=r.a.runKernel(a.F,g,b);return m?Object(c.a)(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}})},"163a":function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({sqrt_:function sqrt_(e){const t={x:Object(s.a)(e,"x","sqrt")};return r.a.runKernel(a.Jc,t)}})},"1ab7":function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("6ad5"),o=n("54ef");const i=Object(o.a)({fft_:function fft_(e){Object(s.b)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return r.a.runKernel(a.cb,t)}})},"1ba2":function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({expm1_:function expm1_(e){const t={x:Object(s.a)(e,"x","expm1")};return r.a.runKernel(a.bb,t)}})},"1be4":function(e,t,n){var r=n("d066");e.exports=r("document","documentElement")},"1c0b":function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(String(e)+" is not a function");return e}},"1c7e":function(e,t,n){var r=n("b622")("iterator"),a=!1;try{var s=0,o={next:function(){return{done:!!s++}},return:function(){a=!0}};o[r]=function(){return this},Array.from(o,(function(){throw 2}))}catch(i){}e.exports=function(e,t){if(!t&&!a)return!1;var n=!1;try{var s={};s[r]=function(){return{next:function(){return{done:n=!0}}}},e(s)}catch(i){}return n}},"1d80":function(e,t){e.exports=function(e){if(null==e)throw TypeError("Can't call method on "+e);return e}},"1dde":function(e,t,n){var r=n("d039"),a=n("b622"),s=n("2d00"),o=a("species");e.exports=function(e){return s>=51||!r((function(){var t=[];return(t.constructor={})[o]=function(){return{foo:1}},1!==t[e](Boolean).foo}))}},"1df6":function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({sign_:function sign_(e){const t={x:Object(s.a)(e,"x","sign")};return r.a.runKernel(a.Ac,t)}})},"1e68":function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({cumsum_:function cumsum_(e,t=0,n=!1,o=!1){const i={x:Object(s.a)(e,"x","cumsum")},u={axis:t,exclusive:n,reverse:o};return r.a.runKernel(a.L,i,u)}})},"1fb5":function(e,t,n){"use strict";t.byteLength=function byteLength(e){var t=getLens(e),n=t[0],r=t[1];return 3*(n+r)/4-r},t.toByteArray=function toByteArray(e){var t,n,r=getLens(e),o=r[0],i=r[1],u=new s(function _byteLength(e,t,n){return 3*(t+n)/4-n}(0,o,i)),c=0,l=i>0?o-4:o;for(n=0;n<l;n+=4)t=a[e.charCodeAt(n)]<<18|a[e.charCodeAt(n+1)]<<12|a[e.charCodeAt(n+2)]<<6|a[e.charCodeAt(n+3)],u[c++]=t>>16&255,u[c++]=t>>8&255,u[c++]=255&t;2===i&&(t=a[e.charCodeAt(n)]<<2|a[e.charCodeAt(n+1)]>>4,u[c++]=255&t);1===i&&(t=a[e.charCodeAt(n)]<<10|a[e.charCodeAt(n+1)]<<4|a[e.charCodeAt(n+2)]>>2,u[c++]=t>>8&255,u[c++]=255&t);return u},t.fromByteArray=function fromByteArray(e){for(var t,n=e.length,a=n%3,s=[],o=16383,i=0,u=n-a;i<u;i+=o)s.push(encodeChunk(e,i,i+o>u?u:i+o));1===a?(t=e[n-1],s.push(r[t>>2]+r[t<<4&63]+"==")):2===a&&(t=(e[n-2]<<8)+e[n-1],s.push(r[t>>10]+r[t>>4&63]+r[t<<2&63]+"="));return s.join("")};for(var r=[],a=[],s="undefined"!=typeof Uint8Array?Uint8Array:Array,o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",i=0,u=o.length;i<u;++i)r[i]=o[i],a[o.charCodeAt(i)]=i;function getLens(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=e.indexOf("=");return-1===n&&(n=t),[n,n===t?0:4-n%4]}function encodeChunk(e,t,n){for(var a,s,o=[],i=t;i<n;i+=3)a=(e[i]<<16&16711680)+(e[i+1]<<8&65280)+(255&e[i+2]),o.push(r[(s=a)>>18&63]+r[s>>12&63]+r[s>>6&63]+r[63&s]);return o.join("")}a["-".charCodeAt(0)]=62,a["_".charCodeAt(0)]=63},2:function(e,t){},"220f":function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({asin_:function asin_(e){const t={x:Object(s.a)(e,"x","asin")};return r.a.runKernel(a.j,t)}})},2335:function(e,t){var n={}.toString;e.exports=Array.isArray||function(e){return"[object Array]"==n.call(e)}},"23bf":function(e,t,n){"use strict";var r,a,s,o,i;n.d(t,"b",(function(){return upcastType})),n.d(t,"a",(function(){return sumOutType})),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(a||(a={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(s||(s={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(o||(o={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(i||(i={}));const u={float32:o,int32:a,bool:s,complex64:i};function upcastType(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return u[e][t]}function sumOutType(e){return upcastType(e,"int32")}},"23cb":function(e,t,n){var r=n("a691"),a=Math.max,s=Math.min;e.exports=function(e,t){var n=r(e);return n<0?a(n+t,0):s(n,t)}},"23e7":function(e,t,n){var r=n("da84"),a=n("06cf").f,s=n("9112"),o=n("6eeb"),i=n("ce4e"),u=n("e893"),c=n("94ca");e.exports=function(e,t){var n,l,d,p,h,f=e.target,m=e.global,g=e.stat;if(n=m?r:g?r[f]||i(f,{}):(r[f]||{}).prototype)for(l in t){if(p=t[l],d=e.noTargetGet?(h=a(n,l))&&h.value:n[l],!c(m?l:f+(g?".":"#")+l,e.forced)&&void 0!==d){if(typeof p==typeof d)continue;u(p,d)}(e.sham||d&&d.sham)&&s(p,"sham",!0),o(n,l,p,e)}}},"241c":function(e,t,n){var r=n("ca84"),a=n("7839").concat("length","prototype");t.f=Object.getOwnPropertyNames||function getOwnPropertyNames(e){return r(e,a)}},"24b0":function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({imag_:function imag_(e){const t={input:Object(s.a)(e,"input","imag")};return r.a.runKernel(a.rb,t)}})},"24d6":function(e,t,n){(function(e){var r;!function(e,a,s){function Alea(e){var t=this,n=function Mash(){var e=4022871197;return function(t){t=t.toString();for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)}}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function copy(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function impl(e,t){var n=new Alea(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&copy(r,n),a.state=function(){return copy(n,{})}),a}a&&a.exports?a.exports=impl:n("07d6")&&n("3c35")?void 0===(r=function(){return impl}.call(t,n,t,a))||(a.exports=r):this.alea=impl}(0,e,n("07d6"))}).call(this,n("62e4")(e))},"29a8":function(e,t,n){"use strict";(function(e){n("6ae2");var t=n("7ed6"),r=n("b333");const a=Object(r.b)();a.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),a.registerFlag("IS_BROWSER",(()=>t.isBrowser())),a.registerFlag("IS_NODE",(()=>void 0!==e&&void 0!==e.versions&&void 0!==e.versions.node)),a.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),a.registerFlag("PROD",(()=>!1)),a.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>a.getBool("DEBUG"))),a.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),a.registerFlag("IS_TEST",(()=>!1)),a.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),a.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1))}).call(this,n("4362"))},"29d8":function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}]},"29fc":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("a3f7"),a=n("6ad5"),s=n("487b"),o=n("54ef"),i=n("35c9");const u=Object(o.a)({dot_:function dot_(e,t){const n=Object(r.a)(e,"t1","dot"),o=Object(r.a)(t,"t2","dot");a.b(!(1!==n.rank&&2!==n.rank||1!==o.rank&&2!==o.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${o.rank}.`));const u=1===n.rank?n.size:n.shape[1],c=1===o.rank?o.size:o.shape[0];if(a.b(u===c,(()=>`Error in dot: inner dimensions of inputs must match, but got ${u} and ${c}.`)),1===n.rank&&1===o.rank){const e=Object(i.a)(n,[1,-1]),t=Object(i.a)(o,[-1,1]),r=Object(s.a)(e,t);return Object(i.a)(r,[])}if(1===n.rank&&2===o.rank){const e=Object(i.a)(n,[1,-1]),t=Object(i.a)(o,[o.shape[0],o.shape[1]]),r=Object(s.a)(e,t);return Object(i.a)(r,[r.size])}if(2===n.rank&&1===o.rank){const e=Object(i.a)(o,[-1,1]),t=Object(s.a)(n,e);return Object(i.a)(t,[t.size])}{const e=Object(i.a)(o,[o.shape[0],o.shape[1]]);return Object(s.a)(n,e)}}})},"2a62":function(e,t,n){var r=n("825a");e.exports=function(e){var t=e.return;if(void 0!==t)return r(t.call(e)).value}},"2c94":function(e,t,n){(function(e){var r;!function(e,a,s){function XorGen(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function copy(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function impl(e,t){var n=new XorGen(e),r=t&&t.state,prng=function(){return(n.next()>>>0)/4294967296};return prng.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},prng.int32=n.next,prng.quick=prng,r&&("object"==typeof r&&copy(r,n),prng.state=function(){return copy(n,{})}),prng}a&&a.exports?a.exports=impl:n("07d6")&&n("3c35")?void 0===(r=function(){return impl}.call(t,n,t,a))||(a.exports=r):this.xorwow=impl}(0,e,n("07d6"))}).call(this,n("62e4")(e))},"2d00":function(e,t,n){var r,a,s=n("da84"),o=n("342f"),i=s.process,u=i&&i.versions,c=u&&u.v8;c?a=(r=c.split("."))[0]+r[1]:o&&(!(r=o.match(/Edge\/(\d+)/))||r[1]>=74)&&(r=o.match(/Chrome\/(\d+)/))&&(a=r[1]),e.exports=a&&+a},"2f2c":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("54ef");const u=Object(i.a)({denseBincount_:function denseBincount_(e,t,n,i=!1){const u=Object(s.a)(e,"x","denseBincount"),c=Object(s.a)(t,"weights","denseBincount");o.b("int32"===u.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${u.dtype}`)),o.b(u.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${u.rank}.`)),o.b(n>=0,(()=>`size must be non-negative, but got ${n}.`)),o.b(c.size===u.size||0===c.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${u.shape}, weights shape: ${c.shape}.`));const l={x:u,weights:c},d={size:n,binaryOutput:i};return r.a.runKernel(a.M,l,d)}})},"2fb1":function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({step_:function step_(e,t=0){const n={x:Object(s.a)(e,"x","step")},o={alpha:t};return r.a.runKernel(a.Mc,n,o)}})},3:function(e,t){},"31bb":function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}]},"342f":function(e,t,n){var r=n("d066");e.exports=r("navigator","userAgent")||""},"34d7":function(e,t,n){"use strict";n.d(t,"b",(function(){return tensor_TensorBuffer})),n.d(t,"g",(function(){return setTensorTracker})),n.d(t,"f",(function(){return setOpHandler})),n.d(t,"e",(function(){return setDeprecationWarningFn})),n.d(t,"a",(function(){return tensor_Tensor})),n.d(t,"d",(function(){return getGlobalTensorClass})),n.d(t,"c",(function(){return tensor_Variable}));var r=n("f490"),a=n("6ad5");function tensorToString(e,t,n,r){const s=Object(a.j)(t),o=function computeMaxSizePerColumn(e,t,n,r){const s=Object(a.O)(t),o=r[r.length-1],i=new Array(o).fill(0),u=t.length,c="complex64"===n?createComplexTuples(e):e;if(u>1)for(let a=0;a<s/o;a++){const e=a*o;for(let t=0;t<o;t++)i[t]=Math.max(i[t],valToString(c[e+t],0,n).length)}return i}(e,t,n,s),i=t.length,u=subTensorToString(e,t,n,s,o),c=["Tensor"];return r&&(c.push(`  dtype: ${n}`),c.push(`  rank: ${i}`),c.push(`  shape: [${t}]`),c.push("  values:")),c.push(u.map((e=>"    "+e)).join("\n")),c.join("\n")}function valToString(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:Object(a.z)(e)?`'${e}'`:"bool"===n?boolNumToString(e):parseFloat(e.toFixed(7)).toString(),Object(a.L)(r,t)}function boolNumToString(e){return 0===e?"false":"true"}function subTensorToString(e,t,n,r,a,s=!0){const o="complex64"===n?2:1,i=t[0],u=t.length;if(0===u){if("complex64"===n){return[valToString(createComplexTuples(e)[0],0,n)]}return"bool"===n?[boolNumToString(e[0])]:[e[0].toString()]}if(1===u){if(i>20){const t=3*o;let r=Array.from(e.slice(0,t)),s=Array.from(e.slice((i-3)*o,i*o));return"complex64"===n&&(r=createComplexTuples(r),s=createComplexTuples(s)),["["+r.map(((e,t)=>valToString(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>valToString(e,a[i-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?createComplexTuples(e):Array.from(e)).map(((e,t)=>valToString(e,a[t],n))).join(", ")+"]"]}const c=t.slice(1),l=r.slice(1),d=r[0]*o,p=[];if(i>20){for(let t=0;t<3;t++){const r=t*d,s=r+d;p.push(...subTensorToString(e.slice(r,s),c,n,l,a,!1))}p.push("...");for(let t=i-3;t<i;t++){const r=t*d,s=r+d;p.push(...subTensorToString(e.slice(r,s),c,n,l,a,t===i-1))}}else for(let m=0;m<i;m++){const t=m*d,r=t+d;p.push(...subTensorToString(e.slice(t,r),c,n,l,a,m===i-1))}const h=2===u?",":"";p[0]="["+p[0]+h;for(let m=1;m<p.length-1;m++)p[m]=" "+p[m]+h;let f=",\n";for(let m=2;m<u;m++)f+="\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(s?"":f),p}function createComplexTuples(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var s=n("eb7e");class tensor_TensorBuffer{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=a.O(e),null!=n){const e=n.length;a.b(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||a.n(t,this.size),this.strides=Object(a.j)(e)}set(e,...t){0===t.length&&(t=[0]),a.b(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const r of e){if(r<0||r>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let r=0;r<e.length-1;++r)n+=this.strides[r]*e[r];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return o().makeTensor(this.values,this.shape,this.dtype)}}let o=null,i=null,u=null;function setTensorTracker(e){o=e}function setOpHandler(e){i=e}function setDeprecationWarningFn(e){u=e}class tensor_Tensor{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=a.O(e),this.strides=Object(a.j)(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return i.buffer(this.shape,this.dtype,e)}bufferSync(){return i.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Object(a.T)(this.shape,e)}arraySync(){return Object(a.T)(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const e=o().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map((e=>s.decodeString(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=o().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>s.decodeString(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await o().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(o().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return i.print(this,e)}clone(){return this.throwIfDisposed(),i.clone(this)}toString(e=!1){return tensorToString(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),i.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),o().makeVariable(this,e,t,n)}}function getGlobalTensorClass(){return Object(r.a)("Tensor",(()=>tensor_Tensor))}Object.defineProperty(tensor_Tensor,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),getGlobalTensorClass();class tensor_Variable extends tensor_Tensor{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!a.a(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);o().disposeTensor(this),this.dataId=e.dataId,o().incRef(this,null)}dispose(){o().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(tensor_Variable,Symbol.hasInstance,{value:e=>e instanceof tensor_Tensor&&null!=e.assign&&e.assign instanceof Function})},"350f":function(e,t,n){"use strict";(function(e){n.d(t,"f",(function(){return encodeWeights})),n.d(t,"e",(function(){return decodeWeights})),n.d(t,"a",(function(){return arrayBufferToBase64String})),n.d(t,"b",(function(){return base64StringToArrayBuffer})),n.d(t,"d",(function(){return concatenateArrayBuffers})),n.d(t,"c",(function(){return basename})),n.d(t,"g",(function(){return getModelArtifactsInfoForJSON}));var r=n("0777"),a=n("357d"),s=n("6ad5"),o=n("9847");async function encodeWeights(e,t){const n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<a.length;++s){const o=a[s],i=Array.isArray(e)?e[s].tensor:e[o];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error(`Unsupported dtype in weight '${o}': ${i.dtype}`);const u={name:o,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const e=new Promise((async e=>{const t=await i.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let a=0;for(let s=0;s<t.length;s++){const e=t[s],n=new Uint8Array(new Uint32Array([e.length]).buffer);r.set(n,a),a+=4,r.set(e,a),a+=e.length}e(r)}));r.push(e)}else r.push(i.data());null!=t&&(u.group=t),n.push(u)}return{data:concatenateTypedArrays(await Promise.all(r)),specs:n}}function decodeWeights(e,t){const n={};let i,u=0;for(const c of t){const t=c.name,l=c.dtype,d=c.shape,p=Object(s.O)(d);let h;if("quantization"in c){const n=c.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${c.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${c.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==l)throw new Error(`Weight ${c.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${l}.`)}const r=o.a[n.dtype],a=e.slice(u,u+p*r),s="uint8"===n.dtype?new Uint8Array(a):new Uint16Array(a);if("float32"===l)if("uint8"===n.dtype||"uint16"===n.dtype){h=new Float32Array(s.length);for(let e=0;e<s.length;e++){const t=s[e];h[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===i&&(i=getFloat16Decoder()),h=i(s)}else{if("int32"!==l)throw new Error(`Unsupported dtype in weight '${t}': ${l}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);h=new Int32Array(s.length);for(let e=0;e<s.length;e++){const t=s[e];h[e]=Math.round(t*n.scale+n.min)}}u+=p*r}else if("string"===l){const t=Object(s.O)(c.shape);h=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(u,u+4))[0];u+=4;const n=new Uint8Array(e.slice(u,u+t));h.push(n),u+=t}}else{const s=o.a[l],i=e.slice(u,u+p*s);if("float32"===l)h=new Float32Array(i);else if("int32"===l)h=new Int32Array(i);else if("bool"===l)h=new Uint8Array(i);else{if("complex64"!==l)throw new Error(`Unsupported dtype in weight '${t}': ${l}`);{h=new Float32Array(i);const e=new Float32Array(h.length/2),s=new Float32Array(h.length/2);for(let t=0;t<e.length;t++)e[t]=h[2*t],s[t]=h[2*t+1];const o=Object(a.a)(e,d,"float32"),u=Object(a.a)(s,d,"float32");n[t]=Object(r.a)(o,u),o.dispose(),u.dispose()}}u+=p*s}"complex64"!==l&&(n[t]=Object(a.a)(h,d,l))}return n}function concatenateTypedArrays(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}const i=void 0!==e&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function stringByteLength(t){return i?e.byteLength(t):new Blob([t]).size}function arrayBufferToBase64String(t){if(i)return e.from(t).toString("base64");const n=new Uint8Array(t);let r="";for(let e=0,a=n.length;e<a;e++)r+=String.fromCharCode(n[e]);return btoa(r)}function base64StringToArrayBuffer(t){if(i){const n=e.from(t,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}const n=atob(t),r=new Uint8Array(n.length);for(let e=0;e<n.length;++e)r.set([n.charCodeAt(e)],e);return r.buffer}function concatenateArrayBuffers(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function basename(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function getModelArtifactsInfoForJSON(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:stringByteLength(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:stringByteLength(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function getFloat16Decoder(){const e=function computeFloat16MantisaTable(){const convertMantissa=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=convertMantissa(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}(),t=function computeFloat16ExponentTable(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function computeFloat16OffsetTable(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let o=0;o<r.length;o++){const a=r[o],i=e[n[a>>10]+(1023&a)]+t[a>>10];s[o]=i}return new Float32Array(a)}}}).call(this,n("b639").Buffer)},"357d":function(e,t,n){"use strict";n.d(t,"a",(function(){return tensor}));var r=n("a3f7"),a=n("5959");function tensor(e,t,n){const s=Object(r.c)(e,n);return Object(a.a)(e,t,s,n)}},"35a1":function(e,t,n){var r=n("f5df"),a=n("3f8c"),s=n("b622")("iterator");e.exports=function(e){if(null!=e)return e[s]||e["@@iterator"]||a[r(e)]}},"35c9":function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({reshape_:function reshape_(e,t){const n={x:Object(s.a)(e,"x","reshape","string_or_numeric")},o={shape:t};return r.a.runKernel(a.nc,n,o)}})},"364e":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("54ef");const u=Object(i.a)({depthToSpace_:function depthToSpace_(e,t,n="NHWC"){const i=Object(s.a)(e,"x","depthToSpace"),u="NHWC"===n?i.shape[1]:i.shape[2],c="NHWC"===n?i.shape[2]:i.shape[3],l="NHWC"===n?i.shape[3]:i.shape[1];o.b(u*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${u} and ${t}  for depthToSpace with input shape\n    ${i.shape}`)),o.b(c*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${c} and ${t} for depthToSpace with input shape\n        ${i.shape}`)),o.b(l%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${l} for depthToSpace with input shape ${i.shape}`));const d={x:i},p={blockSize:t,dataFormat:n};return r.a.runKernel(a.N,d,p)}})},"36e5":function(e,t,n){"use strict";n.d(t,"b",(function(){return axesAreInnerMostDims})),n.d(t,"c",(function(){return combineLocations})),n.d(t,"d",(function(){return computeOutAndReduceShapes})),n.d(t,"e",(function(){return expandShapeToKeepDim})),n.d(t,"a",(function(){return assertAxesAreInnerMostDims})),n.d(t,"f",(function(){return getAxesPermutation})),n.d(t,"h",(function(){return getUndoAxesPermutation})),n.d(t,"g",(function(){return getInnerMostAxes}));var r=n("6ad5");function axesAreInnerMostDims(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function combineLocations(e,t,n){const r=e.length+t.length,a=[];let s=0,o=0;for(let i=0;i<r;i++)-1===n.indexOf(i)?a.push(e[s++]):a.push(t[o++]);return a}function computeOutAndReduceShapes(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function expandShapeToKeepDim(e,t){return combineLocations(e,t.map((e=>1)),t)}function assertAxesAreInnerMostDims(e,t,n){r.b(axesAreInnerMostDims(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function getAxesPermutation(e,t){if(axesAreInnerMostDims(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function getUndoAxesPermutation(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function getInnerMostAxes(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}},"37e8":function(e,t,n){var r=n("83ab"),a=n("9bf2"),s=n("825a"),o=n("df75");e.exports=r?Object.defineProperties:function defineProperties(e,t){s(e);for(var n,r=o(t),i=r.length,u=0;i>u;)a.f(e,n=r[u++],t[n]);return e}},"3a44":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("54ef");const u=Object(i.a)({unstack_:function unstack_(e,t=0){const n=Object(s.a)(e,"x","unstack","string_or_numeric");o.b(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const i={value:n},u={axis:t};return r.a.runKernel(a.Xc,i,u)}})},"3b28":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("54ef");const u=Object(i.a)({batchToSpaceND_:function batchToSpaceND_(e,t,n){const i=Object(s.a)(e,"x","batchToSpaceND"),u=t.reduce(((e,t)=>e*t));o.b(i.rank>=1+t.length,(()=>`input rank is ${i.rank} but should be > than blockShape.length ${t.length}`)),o.b(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),o.b(i.shape[0]%u==0,(()=>`input tensor batch is ${i.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${u}`));const c={x:i},l={blockShape:t,crops:n};return r.a.runKernel(a.t,c,l)}})},"3bb7":function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({neg_:function neg_(e){const t={x:Object(s.a)(e,"x","neg")};return r.a.runKernel(a.Vb,t)}})},"3bbe":function(e,t,n){var r=n("861d");e.exports=function(e){if(!r(e)&&null!==e)throw TypeError("Can't set "+String(e)+" as a prototype");return e}},"3bfc":function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}]},"3c35":function(e,t){(function(t){e.exports=t}).call(this,{})},"3ca3":function(e,t,n){"use strict";var r=n("6547").charAt,a=n("69f3"),s=n("7dd0"),o="String Iterator",i=a.set,u=a.getterFor(o);s(String,"String",(function(e){i(this,{type:o,string:String(e),index:0})}),(function next(){var e,t=u(this),n=t.string,a=t.index;return a>=n.length?{value:void 0,done:!0}:(e=r(n,a),t.index+=e.length,{value:e,done:!1})}))},"3d50":function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}]},"3e44":function(e,t,n){(function(e){var r;!function(e,a,s){function XorGen(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function init(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function copy(e,t){return t.x=e.x.slice(),t.i=e.i,t}function impl(e,t){null==e&&(e=+new Date);var n=new XorGen(e),r=t&&t.state,prng=function(){return(n.next()>>>0)/4294967296};return prng.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},prng.int32=n.next,prng.quick=prng,r&&(r.x&&copy(r,n),prng.state=function(){return copy(n,{})}),prng}a&&a.exports?a.exports=impl:n("07d6")&&n("3c35")?void 0===(r=function(){return impl}.call(t,n,t,a))||(a.exports=r):this.xorshift7=impl}(0,e,n("07d6"))}).call(this,n("62e4")(e))},"3efc":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef"),i=n("35c9");const u=Object(o.a)({multinomial_:function multinomial_(e,t,n,o=!1){const u=Object(s.a)(e,"logits","multinomial"),c=u.size,l=u.rank;if(c<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${c}.`);if(l>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${l}`);n=n||Math.random();const d={logits:1===l?Object(i.a)(u,[1,-1]):u},p={numSamples:t,seed:n,normalized:o},h=r.a.runKernel(a.Tb,d,p);return 1===l?Object(i.a)(h,[h.size]):h}})},"3f8c":function(e,t){e.exports={}},4:function(e,t){},4184:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),o=n("a3f7"),i=n("526f"),u=n("54ef");const c=Object(u.a)({squaredDifference_:function squaredDifference_(e,t){let n=Object(o.a)(e,"a","squaredDifference"),u=Object(o.a)(t,"b","squaredDifference");[n,u]=Object(s.makeTypesMatch)(n,u),Object(i.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernel(a.Lc,c,{})}})},"428f":function(e,t,n){var r=n("da84");e.exports=r},4362:function(e,t,n){t.nextTick=function nextTick(e){var t=Array.prototype.slice.call(arguments);t.shift(),setTimeout((function(){e.apply(null,t)}),0)},t.platform=t.arch=t.execPath=t.title="browser",t.pid=1,t.browser=!0,t.env={},t.argv=[],t.binding=function(e){throw new Error("No such module. (Possibly not yet loaded)")},function(){var e,r="/";t.cwd=function(){return r},t.chdir=function(t){e||(e=n("df7c")),r=e.resolve(t,r)}}(),t.exit=t.kill=t.umask=t.dlopen=t.uptime=t.memoryUsage=t.uvCounters=function(){},t.features={}},"44ad":function(e,t,n){var r=n("d039"),a=n("c6b6"),s="".split;e.exports=r((function(){return!Object("z").propertyIsEnumerable(0)}))?function(e){return"String"==a(e)?s.call(e,""):Object(e)}:Object},"44d2":function(e,t,n){var r=n("b622"),a=n("7c73"),s=n("9bf2"),o=r("unscopables"),i=Array.prototype;null==i[o]&&s.f(i,o,{configurable:!0,value:a(null)}),e.exports=function(e){i[o][e]=!0}},"44e7":function(e,t,n){var r=n("861d"),a=n("c6b6"),s=n("b622")("match");e.exports=function(e){var t;return r(e)&&(void 0!==(t=e[s])?!!t:"RegExp"==a(e))}},4516:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({any_:function any_(e,t=null,n=!1){const o={x:Object(s.a)(e,"x","any","bool")},i={axis:t,keepDims:n};return r.a.runKernel(a.g,o,i)}})},"45bb":function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({split_:function split_(e,t,n=0){const o={x:Object(s.a)(e,"x","split")},i={numOrSizeSplits:t,axis:n};return r.a.runKernel(a.Ic,o,i)}})},4611:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),o=n("a3f7"),i=n("54ef");const u=Object(i.a)({mod_:function mod_(e,t){let n=Object(o.a)(e,"a","mod"),i=Object(o.a)(t,"b","mod");[n,i]=Object(s.makeTypesMatch)(n,i);const u={a:n,b:i};return r.a.runKernel(a.Sb,u)}})},4615:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({acosh_:function acosh_(e){const t={x:Object(s.a)(e,"x","acosh")};return r.a.runKernel(a.c,t)}})},"46a8":function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({relu6_:function relu6_(e){const t={x:Object(s.a)(e,"x","relu6")};return r.a.runKernel(a.mc,t)}})},"46b1":function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({log1p_:function log1p_(e){const t={x:Object(s.a)(e,"x","log1p")};return r.a.runKernel(a.Cb,t)}})},"46b8":function(e,t,n){"use strict";n.d(t,"a",(function(){return fill}));var r=n("6ae2"),a=n("c05b");function fill(e,t,n){const s={shape:e,value:t,dtype:n};return r.a.runKernel(a.db,{},s)}},"46cc":function(e,t,n){"use strict";var r,a;n.d(t,"a",(function(){return r})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(r||(r={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(a||(a={}))},4749:function(e,t,n){"use strict";n.d(t,"c",(function(){return getFusedDyActivation})),n.d(t,"b",(function(){return getFusedBiasGradient})),n.d(t,"a",(function(){return applyActivation})),n.d(t,"d",(function(){return shouldFuse}));var r=n("526f"),a=n("9e38"),s=n("6f37"),o=n("a5aa"),i=n("520f"),u=n("917a"),c=n("46a8"),l=n("35c9"),d=n("2fb1"),p=n("e053");function getFusedDyActivation(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Object(o.a)(e,Object(d.a)(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function getFusedBiasGradient(e,t){let n=t;const a=r.c(e.shape,t.shape);return a.length>0&&(n=Object(p.a)(n,a)),Object(l.a)(n,e.shape)}function applyActivation(e,t,n,r){if("linear"===t)return e;if("relu"===t)return Object(u.a)(e);if("elu"===t)return Object(a.a)(e);if("relu6"===t)return Object(c.a)(e);if("prelu"===t)return Object(i.a)(e,n);if("leakyrelu"===t)return Object(s.a)(e,r);throw new Error(`Unknown fused activation ${t}.`)}const shouldFuse=(e,t)=>!(e>0)||"linear"===t},4840:function(e,t,n){var r=n("825a"),a=n("1c0b"),s=n("b622")("species");e.exports=function(e,t){var n,o=r(e).constructor;return void 0===o||null==(n=r(o)[s])?t:a(n)}},4850:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("54ef");const u=Object(i.a)({addN_:function addN_(e){o.b(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),o.b(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>Object(s.a)(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!o.a(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const i=t;return r.a.runKernel(a.e,i)}})},"487b":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),o=n("a3f7"),i=n("54ef");const u=Object(i.a)({matMul_:function matMul_(e,t,n=!1,i=!1){let u=Object(o.a)(e,"a","matMul"),c=Object(o.a)(t,"b","matMul");[u,c]=Object(s.makeTypesMatch)(u,c);const l={a:u,b:c},d={transposeA:n,transposeB:i};return r.a.runKernel(a.s,l,d)}})},"48db":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("f0a9"),i=n("54ef"),u=n("35c9");const c=Object(i.a)({broadcastTo_:function broadcastTo_(e,t){let n=Object(s.a)(e,"broadcastTo","x");const i=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Object(u.a)(n,e)}const c=n.shape,l=Array.from(t);for(let r=t.length-1;r>=0;r--)if(c[r]===t[r])l[r]=1;else if(1!==n.shape[r])throw new Error(`broadcastTo(): [${i}] cannot be broadcast to [${t}].`);if(0===l.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return Object(o.a)(n);const d={x:n},p={reps:l};return r.a.runKernel(a.Sc,d,p)}})},4930:function(e,t,n){var r=n("605d"),a=n("2d00"),s=n("d039");e.exports=!!Object.getOwnPropertySymbols&&!s((function(){return!Symbol.sham&&(r?38===a:a>37&&a<41)}))},"4b05":function(e,t,n){"use strict";(function(e){var t=n("b333");const getNodeFetch_importFetch=()=>n(0);let r;class PlatformNode{constructor(){this.util=n(1),this.textEncoder=new this.util.TextEncoder}fetch(e,n){return null!=Object(t.b)().global.fetch?Object(t.b)().global.fetch(e,n):(null==r&&(r=getNodeFetch_importFetch()),r(e,n))}now(){const t=e.hrtime();return 1e3*t[0]+t[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}}Object(t.b)().get("IS_NODE")&&Object(t.b)().setPlatform("node",new PlatformNode)}).call(this,n("4362"))},"4c7a":function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("6ad5"),o=n("54ef");const i=Object(o.a)({ifft_:function ifft_(e){Object(s.b)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return r.a.runKernel(a.pb,t)}})},"4cfc":function(e,t,n){"use strict";n.d(t,"a",(function(){return StringIterator}));var r=n("c388");class StringIterator extends r.a{split(e){return new SplitIterator(this,e)}}class SplitIterator extends StringIterator{constructor(e,t){super(),this.upstream=e,this.impl=new SplitIteratorImpl(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class SplitIteratorImpl extends r.b{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}}},"4d64":function(e,t,n){var r=n("fc6a"),a=n("50c4"),s=n("23cb"),createMethod=function(e){return function(t,n,o){var i,u=r(t),c=a(u.length),l=s(o,c);if(e&&n!=n){for(;c>l;)if((i=u[l++])!=i)return!0}else for(;c>l;l++)if((e||l in u)&&u[l]===n)return e||l||0;return!e&&-1}};e.exports={includes:createMethod(!0),indexOf:createMethod(!1)}},"4df4":function(e,t,n){"use strict";var r=n("0366"),a=n("7b0b"),s=n("9bdd"),o=n("e95a"),i=n("50c4"),u=n("8418"),c=n("35a1");e.exports=function from(e){var t,n,l,d,p,h,f=a(e),m="function"==typeof this?this:Array,g=arguments.length,b=g>1?arguments[1]:void 0,y=void 0!==b,x=c(f),v=0;if(y&&(b=r(b,g>2?arguments[2]:void 0,2)),null==x||m==Array&&o(x))for(n=new m(t=i(f.length));t>v;v++)h=y?b(f[v],v):f[v],u(n,v,h);else for(p=(d=x.call(f)).next,n=new m;!(l=p.call(d)).done;v++)h=y?s(d,b,[l.value,v],!0):l.value,u(n,v,h);return n.length=v,n}},"4f20":function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({exp_:function exp_(e){const t={x:Object(s.a)(e,"x","exp")};return r.a.runKernel(a.Z,t)}})},5:function(e,t){},"508f":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),o=n("a3f7"),i=n("54ef");const u=Object(i.a)({floorDiv_:function floorDiv_(e,t){let n=Object(o.a)(e,"a","floorDiv"),i=Object(o.a)(t,"b","floorDiv");[n,i]=Object(s.makeTypesMatch)(n,i);const u={a:n,b:i};return r.a.runKernel(a.gb,u)}})},"50c4":function(e,t,n){var r=n("a691"),a=Math.min;e.exports=function(e){return e>0?a(r(e),9007199254740991):0}},5135:function(e,t){var n={}.hasOwnProperty;e.exports=function(e,t){return n.call(e,t)}},"520f":function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({prelu_:function prelu_(e,t){const n={x:Object(s.a)(e,"x","prelu"),alpha:Object(s.a)(t,"alpha","prelu")};return r.a.runKernel(a.fc,n)}})},"526c":function(e,t,n){"use strict";n.d(t,"d",(function(){return getParamValue})),n.d(t,"e",(function(){return getTensor})),n.d(t,"f",(function(){return getTensorsForCurrentContenxt})),n.d(t,"b",(function(){return getNodeNameAndIndex})),n.d(t,"g",(function(){return parseNodeName})),n.d(t,"c",(function(){return getPadding})),n.d(t,"a",(function(){return cloneTensor}));var r=n("fa11");function getParamValue(e,t,n,a,s){const o=t.inputParams[e];if(o&&void 0!==o.inputIndexStart){const e=o.inputIndexStart,i=0===o.inputIndexEnd?void 0:void 0===o.inputIndexEnd?e+1:o.inputIndexEnd;if("tensor"===o.type)return getTensor(t.inputNames[o.inputIndexStart],n,a,s);if("tensors"===o.type){return t.inputNames.slice(e,i).map((e=>getTensor(e,n,a,s)))}const u=getTensor(t.inputNames.slice(e)[0],n,a,s),c=u.dataSync();return"number"===o.type?c[0]:r.of.toNestedArray(u.shape,c)}const i=t.attrParams[e];return i&&i.value}function getTensor(e,t,n,r){const[a,s]=parseNodeName(e);if(null!=r){const e=r.getHashTableHandleByName(a);if(null!=e)return e}const o=n.currentContextIds.find((e=>!!t[getNodeNameWithContextId(a,e)]));return void 0!==o?t[getNodeNameWithContextId(a,o)][s]:void 0}function getTensorsForCurrentContenxt(e,t,n){return t[getNodeNameWithContextId(e,n.currentContextId)]}function getNodeNameAndIndex(e,t){const[n,r]=parseNodeName(e);return[getNodeNameWithContextId(n,t&&t.currentContextId),r]}function getNodeNameWithContextId(e,t){return t?`${e}-${t}`:e}function parseNodeName(e){const t=e.split(":");if(1===t.length)return[e,0];return[t[0],Number(t[t.length-1])]}function getPadding(e,t,n){let r=getParamValue("pad",e,t,n);if("explicit"===r){r=getParamValue("explicitPaddings",e,t,n);const a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function cloneTensor(e){return e.kept?e:Object(r.ud)(e)}},"526f":function(e,t,n){"use strict";function getBroadcastDims(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,o=e[s]||1;(t[t.length-1-a]||1)>1&&1===o&&r.unshift(s)}return r}function getReductionAxes(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],s=t.length-r-1,o=t[s];(null==a||1===a&&o>1)&&n.unshift(s)}return n}function assertAndGetBroadcastShape(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}n.unshift(r)}}return n}n.d(t,"b",(function(){return getBroadcastDims})),n.d(t,"c",(function(){return getReductionAxes})),n.d(t,"a",(function(){return assertAndGetBroadcastShape}))},"538e":function(e,t,n){"use strict";n.d(t,"a",(function(){return customGrad})),n.d(t,"b",(function(){return variableGrads}));var r=n("6ae2"),a=n("34d7"),s=(n("a3f7"),n("6ad5"));function variableGrads(e,t){s.b(s.u(e),(()=>"The f passed in variableGrads(f) must be a function")),s.b(null==t||Array.isArray(t)&&t.every((e=>e instanceof a.c)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in r.a.registeredVariables)t.push(r.a.registeredVariables[e])}const o=n?t.filter((e=>!e.trainable)):null,i=t.length;t=t.filter((e=>e.trainable)),s.b(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${i} variables is trainable.`));const{value:u,grads:c}=r.a.gradients(e,t,null,!0);s.b(c.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),s.b(0===u.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${u.rank} tensor`));const l={};return t.forEach(((e,t)=>{null!=c[t]&&(l[e.name]=c[t])})),null!=o&&o.forEach((e=>l[e.name]=null)),{value:u,grads:l}}function customGrad(e){return r.a.customGrad(e)}},"53f2":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("54ef");const u=Object(i.a)({unsortedSegmentSum_:function unsortedSegmentSum_(e,t,n){const i=Object(s.a)(e,"x","unsortedSegmentSum"),u=Object(s.a)(t,"segmentIds","unsortedSegmentSum","int32");Object(o.b)(Object(o.v)(n),(()=>"numSegments must be of dtype int"));const c={x:i,segmentIds:u},l={numSegments:n};return r.a.runKernel(a.Yc,c,l)}})},"53fd":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("54ef"),u=n("35c9");const c=Object(i.a)({maxPool3d_:function maxPool3d_(e,t=[1,1,1],n,i,c,l="NDHWC"){const d=Object(s.a)(e,"x","maxPool3d");let p=d,h=!1;4===d.rank&&(h=!0,p=Object(u.a)(d,[1,d.shape[0],d.shape[1],d.shape[2],d.shape[3]])),o.b(5===p.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${p.rank}.`)),o.b("NDHWC"===l,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${l}`)),null!=c&&o.b(o.v(i),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${c} but got pad ${i}.`));const f={x:p},m={filterSize:t,strides:n,pad:i,dimRoundingMode:c,dataFormat:l},g=r.a.runKernel(a.Jb,f,m);return h?Object(u.a)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}})},"54ef":function(e,t,n){"use strict";n.d(t,"a",(function(){return op}));var r=n("6ae2"),a=n("6ad5");function op(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const s=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const f2=(...e)=>{r.a.startScope(n);try{const t=s(...e);return Object(a.x)(t)&&console.error("Cannot return a Promise inside of tidy."),r.a.endScope(t),t}catch(t){throw r.a.endScope(null),t}};return Object.defineProperty(f2,"name",{value:n,configurable:!0}),f2}},"55d6":function(e,t,n){(function(e){var r;!function(e,a,s){function XorGen(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function copy(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function impl(e,t){var n=new XorGen(e),r=t&&t.state,prng=function(){return(n.next()>>>0)/4294967296};return prng.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},prng.int32=n.next,prng.quick=prng,r&&("object"==typeof r&&copy(r,n),prng.state=function(){return copy(n,{})}),prng}a&&a.exports?a.exports=impl:n("07d6")&&n("3c35")?void 0===(r=function(){return impl}.call(t,n,t,a))||(a.exports=r):this.xor128=impl}(0,e,n("07d6"))}).call(this,n("62e4")(e))},5616:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({topk_:function topk_(e,t=1,n=!0){const o=Object(s.a)(e,"x","topk");if(0===o.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const i=o.shape[o.shape.length-1];if(t>i)throw new Error(`'k' passed to topk() must be <= the last dimension (${i}) but got ${t}`);const u={x:o},c={k:t,sorted:n},[l,d]=r.a.runKernel(a.Tc,u,c);return{values:l,indices:d}}})},5692:function(e,t,n){var r=n("c430"),a=n("c6cd");(e.exports=function(e,t){return a[e]||(a[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.10.1",mode:r?"pure":"global",copyright:"© 2021 Denis Pushkarev (zloirock.ru)"})},"56ef":function(e,t,n){var r=n("d066"),a=n("241c"),s=n("7418"),o=n("825a");e.exports=r("Reflect","ownKeys")||function ownKeys(e){var t=a.f(o(e)),n=s.f;return n?t.concat(n(e)):t}},"57e0":function(e,t,n){"use strict";var r;n.d(t,"a",(function(){return r})),function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(r||(r={}))},5874:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}]},5894:function(e,t,n){"use strict";n.d(t,"a",(function(){return linspace}));var r=n("6ae2"),a=n("c05b");function linspace(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const s={start:e,stop:t,num:n};return r.a.runKernel(a.Ab,{},s)}},5959:function(e,t,n){"use strict";n.d(t,"a",(function(){return makeTensor}));var r=n("6ae2"),a=n("6ad5"),s=n("eb7e");function makeTensor(e,t,n,o){if(null==o&&(o=Object(a.r)(e)),"complex64"===o)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Object(a.A)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Object(a.c)(t);const e=Object(a.O)(t),r=Object(a.O)(n);Object(a.b)(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let s=0;s<n.length;++s){const e=n[s],r=s!==n.length-1||e!==Object(a.O)(t.slice(s));Object(a.b)(n[s]===t[s]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return Object(a.A)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==o?Object(s.toTypedArray)(e,o):Object(a.m)(e,[],!0),r.a.makeTensor(e,t,o)}},5960:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({ceil_:function ceil_(e){const t={x:Object(s.a)(e,"x","ceil")};return r.a.runKernel(a.x,t)}})},5980:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({isInf_:function isInf_(e){const t={x:Object(s.a)(e,"x","isInf")};return r.a.runKernel(a.tb,t)}})},"5a2c":function(e,t,n){"use strict";n.d(t,"a",(function(){return zeros}));var r=n("6ae2"),a=n("6ad5"),s=n("0777");function zeros(e,t="float32"){if("complex64"===t){const t=zeros(e,"float32"),n=zeros(e,"float32");return Object(s.a)(t,n)}const n=Object(a.F)(Object(a.O)(e),t);return r.a.makeTensor(n,e,t)}},"5c6c":function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},"5dc4":function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({sinh_:function sinh_(e){const t={x:Object(s.a)(e,"x","sinh")};return r.a.runKernel(a.Cc,t)}})},"5ebd":function(e,t,n){"use strict";n.r(t),n.d(t,"assertParamsValid",(function(){return assertParamsValid})),n.d(t,"maskToAxes",(function(){return maskToAxes})),n.d(t,"computeOutShape",(function(){return computeOutShape})),n.d(t,"stridesWithElidedDims",(function(){return stridesWithElidedDims})),n.d(t,"getNormalizedAxes",(function(){return getNormalizedAxes})),n.d(t,"startIndicesWithElidedDims",(function(){return startIndicesWithElidedDims})),n.d(t,"stopIndicesWithElidedDims",(function(){return stopIndicesWithElidedDims})),n.d(t,"stridesForAxis",(function(){return stridesForAxis})),n.d(t,"startForAxis",(function(){return startForAxis})),n.d(t,"stopForAxis",(function(){return stopForAxis})),n.d(t,"isSliceContinous",(function(){return isSliceContinous})),n.d(t,"computeFlatOffset",(function(){return computeFlatOffset})),n.d(t,"parseSliceParams",(function(){return parseSliceParams})),n.d(t,"sliceInfo",(function(){return sliceInfo}));var r=n("6ad5");function assertParamsValid(e,t,n){const a=e.shape.length;r.b(a===t.length,(()=>`Error in slice${a}D: Length of begin ${t} must match the rank of the array (${a}).`)),r.b(a===n.length,(()=>`Error in slice${a}D: Length of size ${n} must match the rank of the array (${a}).`));for(let s=0;s<a;++s)r.b(t[s]+n[s]<=e.shape[s],(()=>`Error in slice${a}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`))}function maskToAxes(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function computeOutShape(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function stridesWithElidedDims(e,t,n,r){const a=[...e];for(let s=a.length;s<r.length;s++)a.push(1);for(let s=0;s<n;s++)0===s?a[t]=1:(a.splice(t,0,1),a.pop());return a}function unnormalizeAxis(e,t,n){return n<=e?n:n-(t-1)}function getElidedAxes(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function getNormalizedAxes(e,t,n,r,a,s,o,i,u){const c=e.length;let l=new Array(c),d=new Array(c),p=new Array(c);if(t.length&&n>0){const u=t[0],c=n+1;l=startIndicesWithElidedDims(o,u,c,r,e),d=stopIndicesWithElidedDims(i,u,c,a,e),p=stridesWithElidedDims(s,u,c,e)}else for(let h=0;h<c;h++)l[h]=startForAxis(o,r,s,e,h,u),d[h]=stopForAxis(i,a,s,e,h,u),p[h]=stridesForAxis(s,h,u);return{begin:l,end:d,strides:p}}function startIndicesWithElidedDims(e,t,n,r,a){const s=[...a],o=getElidedAxes(n,t);for(let i=0;i<s.length;i++)if(o.indexOf(i)>-1)s[i]=0;else{const a=unnormalizeAxis(t,n,i);let o=r[a];e&1<<a&&(o=0),s[i]=o}return s}function stopIndicesWithElidedDims(e,t,n,a,s){const o=[...s],i=getElidedAxes(n,t);for(let r=0;r<o.length;r++)if(i.indexOf(r)>-1)o[r]=Number.MAX_SAFE_INTEGER;else{const s=unnormalizeAxis(t,n,r);let i=a[s];e&1<<s&&(i=Number.MAX_SAFE_INTEGER),o[r]=i}for(let u=0;u<o.length;u++){const e=s[u];o[u]<0&&(o[u]+=e),o[u]=r.i(0,o[u],s[u])}return o}function stridesForAxis(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function startForAxis(e,t,n,a,s,o){let i=t[s];const u=n[s]||1;(e&1<<s||o&1<<s||null==i)&&(i=u>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const c=a[s];return i<0&&(i+=c),i=r.i(0,i,c-1),i}function stopForAxis(e,t,n,a,s,o){let i=t[s];const u=n[s]||1;(e&1<<s||o&1<<s||null==i)&&(i=u>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const c=a[s];return i<0&&(i+=c),i=u>0?r.i(0,i,c):r.i(-1,i,c-1),i}function isSliceContinous(e,t,n){let r=n.length;for(let a=0;a<n.length;a++)if(n[a]>1){r=a;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function computeFlatOffset(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function parseSliceParams(e,t,n){let a;const s=e.shape.length;let o;return a="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),a.forEach((e=>{r.b(-1!==e,(()=>"slice() does not support negative begin indexing."))})),o=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,o=o.map(((t,n)=>t>=0?t:(r.b(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-a[n]))),[a,o]}function sliceInfo(e,t,n,r,a,s,o,i,u){let c=t.slice(),l=n.slice(),d=r;null==r&&(d=new Array(c.length));const p=maskToAxes(o);if(p.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==o&&0!==i)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==o&&0!==u)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const h=e.length-c.length,f=maskToAxes(i),m=e.slice();f.forEach((e=>{c[e]=0,l[e]=1,m.splice(e,0,1)}));const{begin:g,end:b,strides:y}=getNormalizedAxes(m,p,h,c,l,d,a,s,o);c=g,l=b,d=y;const x=maskToAxes(u);x.forEach((e=>{l[e]=c[e]+1,d[e]=1}));const v=computeOutShape(c,l,d),k=v.filter(((e,t)=>-1===x.indexOf(t)));return{nonStrided:d.every((e=>1===e)),$begin:c,$end:l,$strides:d,size:v,newShape:m,outShape:k}}},"5f2a":function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({rsqrt_:function rsqrt_(e){const t={x:Object(s.a)(e,"x","rsqrt")};return r.a.runKernel(a.vc,t)}})},"5f87":function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({softmax_:function softmax_(e,t=-1){const n=Object(s.a)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const o={logits:n},i={dim:t};return r.a.runKernel(a.Ec,o,i)}})},6:function(e,t){},6002:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),o=n("a3f7"),i=n("54ef");const u=Object(i.a)({atan2_:function atan2_(e,t){let n=Object(o.a)(e,"a","atan2"),i=Object(o.a)(t,"b","atan2");[n,i]=Object(s.makeTypesMatch)(n,i);const u={a:n,b:i};return r.a.runKernel(a.m,u)}})},"605d":function(e,t,n){var r=n("c6b6"),a=n("da84");e.exports="process"==r(a.process)},6125:function(e,t,n){var r=n("1212"),a=n("b838"),s=n("a49e"),o=n("cae0"),i=n("7aec"),u=n("89ed"),c=n("a49d");c.alea=r,c.xor128=a,c.xorwow=s,c.xorshift7=o,c.xor4096=i,c.tychei=u,e.exports=c},6166:function(e,t,n){(function(e){var r;!function(e,a,s){function Alea(e){var t=this,n=function Mash(){var e=4022871197;return function(t){t=t.toString();for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)}}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function copy(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function impl(e,t){var n=new Alea(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&copy(r,n),a.state=function(){return copy(n,{})}),a}a&&a.exports?a.exports=impl:n("07d6")&&n("3c35")?void 0===(r=function(){return impl}.call(t,n,t,a))||(a.exports=r):this.alea=impl}(0,e,n("07d6"))}).call(this,n("62e4")(e))},"62e4":function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},"649e":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("f0a9"),u=n("54ef");const c=Object(u.a)({concat_:function concat_(e,t=0){Object(o.b)(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Object(s.b)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Object(i.a)(n[0]);const u=n,c={axis:t};return r.a.runKernel(a.B,u,c)}})},6547:function(e,t,n){var r=n("a691"),a=n("1d80"),createMethod=function(e){return function(t,n){var s,o,i=String(a(t)),u=r(n),c=i.length;return u<0||u>=c?e?"":void 0:(s=i.charCodeAt(u))<55296||s>56319||u+1===c||(o=i.charCodeAt(u+1))<56320||o>57343?e?i.charAt(u):s:e?i.slice(u,u+2):o-56320+(s-55296<<10)+65536}};e.exports={codeAt:createMethod(!1),charAt:createMethod(!0)}},"65f0":function(e,t,n){var r=n("861d"),a=n("e8b5"),s=n("b622")("species");e.exports=function(e,t){var n;return a(e)&&("function"!=typeof(n=e.constructor)||n!==Array&&!a(n.prototype)?r(n)&&null===(n=n[s])&&(n=void 0):n=void 0),new(void 0===n?Array:n)(0===t?0:t)}},"673d":function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},6791:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("48db"),u=n("526f"),c=n("54ef");const l=Object(c.a)({where_:function where_(e,t,n){const c=Object(s.a)(t,"a","where"),l=Object(s.a)(n,"b","where"),d=Object(s.a)(e,"condition","where","bool"),p=Object(u.a)(c.shape,l.shape),h=Object(i.a)(c,p),f=Object(i.a)(l,p);1===d.rank&&Object(o.b)(d.shape[0]===c.shape[0],(()=>"The first dimension of `a` must match the size of `condition`.")),1!==d.rank&&Object(o.e)(d.shape,f.shape,"Error in where: ");const m={condition:d,t:h,e:f};return r.a.runKernel(a.xc,m)}})},6926:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("54ef"),o=n("35c9");const i=Object(s.a)({depthwiseConv2dNativeBackpropFilter_:function depthwiseConv2dNativeBackpropFilter_(e,t,n,s,i,u=[1,1],c){let l=e;3===e.rank&&(l=Object(o.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let d=t;3===d.rank&&(d=Object(o.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const p={x:l,dy:d},h={strides:s,pad:i,dimRoundingMode:c,dilations:u,filterShape:n};return r.a.runKernel(a.P,p,h)}})},6932:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({sin_:function sin_(e){const t={x:Object(s.a)(e,"x","sin")};return r.a.runKernel(a.Bc,t)}})},"69dc":function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n("0777"),a=n("649e"),s=n("24b0"),o=n("a5aa"),i=n("54ef"),u=n("d7b0"),c=n("35c9"),l=n("d08e"),d=n("015f"),p=n("6d3c"),h=n("4c7a");const f=Object(i.a)({irfft_:function irfft_(e){const t=e.shape[e.shape.length-1],n=e.size/t;let i;if(t<=2){const r=Object(c.a)(e,[n,t]);i=Object(h.a)(r)}else{const f=[n,2*(t-1)],m=Object(c.a)(Object(u.a)(e),[n,t]),g=Object(c.a)(Object(s.a)(e),[n,t]),b=Object(l.a)(Object(p.a)(m,[0,1],[n,t-2]),1),y=Object(o.a)(Object(l.a)(Object(p.a)(g,[0,1],[n,t-2]),1),Object(d.a)(-1)),x=Object(a.a)([m,b],1),v=Object(a.a)([g,y],1),k=Object(c.a)(Object(r.a)(x,v),[f[0],f[1]]);i=Object(h.a)(k)}if(i=Object(u.a)(i),3===e.rank&&0!==e.shape[0]){const t=i,n=e.shape[0];i=Object(c.a)(i,[n,i.shape[0]/n,i.shape[1]]),t.dispose()}return i}})},"69f3":function(e,t,n){var r,a,s,o=n("7f9a"),i=n("da84"),u=n("861d"),c=n("9112"),l=n("5135"),d=n("c6cd"),p=n("f772"),h=n("d012"),f=i.WeakMap;if(o){var m=d.state||(d.state=new f),g=m.get,b=m.has,y=m.set;r=function(e,t){return t.facade=e,y.call(m,e,t),t},a=function(e){return g.call(m,e)||{}},s=function(e){return b.call(m,e)}}else{var x=p("state");h[x]=!0,r=function(e,t){return t.facade=e,c(e,x,t),t},a=function(e){return l(e,x)?e[x]:{}},s=function(e){return l(e,x)}}e.exports={set:r,get:a,has:s,enforce:function(e){return s(e)?a(e):r(e,{})},getterFor:function(e){return function(t){var n;if(!u(t)||(n=a(t)).type!==e)throw TypeError("Incompatible receiver, "+e+" required");return n}}}},"6ad5":function(e,t,n){"use strict";function shuffle(e){let t=e.length,n=0,r=0;for(;t>0;)r=Math.random()*t|0,t--,n=e[t],e[t]=e[r],e[r]=n}function shuffleCombo(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n,r,a=e.length,s=0;for(;a>0;)s=Math.random()*a|0,a--,n=e[a],r=t[a],e[a]=e[s],t[a]=t[s],e[s]=n,t[s]=r}function clamp(e,t,n){return Math.max(e,Math.min(t,n))}function nearestLargerEven(e){return e%2==0?e:e+1}function sum(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function randUniform(e,t){const n=Math.random();return t*n+(1-n)*e}function distSquared(e,t){let n=0;for(let r=0;r<e.length;r++){const a=Number(e[r])-Number(t[r]);n+=a*a}return n}function assert(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function assertShapesMatch(e,t,n=""){assert(arraysEqual(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function assertNonNull(e){assert(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function flatten(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||isTypedArray(e)&&!n)for(let r=0;r<e.length;++r)flatten(e[r],t,n);else t.push(e);return t}function sizeFromShape(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function isScalarShape(e){return 0===e.length}function arraysEqual(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function isInt(e){return e%1==0}function tanh(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function sizeToSquarishShape(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function createShuffledIndices(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return shuffle(t),t}function rightPad(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function repeatedTry(e,t=(e=>0),n){return new Promise(((r,a)=>{let s=0;const tryFn=()=>{if(e())return void r();s++;const o=t(s);null!=n&&s>=n?a():setTimeout(tryFn,o)};tryFn()}))}function inferFromImplicitShape(e,t){let n=1,r=-1;for(let s=0;s<e.length;++s)if(e[s]>=0)n*=e[s];else if(-1===e[s]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${s}`);r=s}else if(e[s]<0)throw Error(`Shapes can not be < 0. Found ${e[s]} at dim ${s}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}function parseAxisParam(e,t){const n=t.length;return assert((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),assert(e.every((e=>isInt(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function squeezeShape(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:parseAxisParam(t,e).sort();let o=0;for(let i=0;i<e.length;++i){if(null!=s){if(s[o]===i&&1!==e[i])throw new Error(`Can't squeeze axis ${i} since its dim '${e[i]}' is not 1`);(null==s[o]||s[o]>i)&&1===e[i]&&(n.push(e[i]),r.push(i)),s[o]<=i&&o++}1!==e[i]&&(n.push(e[i]),r.push(i))}return{newShape:n,keptDims:r}}function getTypedArrayFromDType(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function getArrayFromDType(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function checkConversionForErrors(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function isValidDtype(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function hasEncodingLoss(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function isTypedArray(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function bytesPerElement(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function bytesFromStringArray(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function isString(e){return"string"==typeof e||e instanceof String}function isBoolean(e){return"boolean"==typeof e}function isNumber(e){return"number"==typeof e}function inferDtype(e){return Array.isArray(e)?inferDtype(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":isNumber(e)?"float32":isString(e)?"string":isBoolean(e)?"bool":"float32"}function isFunction(e){return!!(e&&e.constructor&&e.call&&e.apply)}function nearestDivisor(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function computeStrides(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function createNestedArray(e,t,n){const r=new Array;if(1===t.length){const a=t[0];for(let t=0;t<a;t++)r[t]=n[e+t]}else{const a=t[0],s=t.slice(1),o=s.reduce(((e,t)=>e*t));for(let t=0;t<a;t++)r[t]=createNestedArray(e+t*o,s,n)}return r}function toNestedArray(e,t){if(0===e.length)return t[0];const n=e.reduce(((e,t)=>e*t));if(0===n)return[];if(n!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}.`);return createNestedArray(0,e,t)}function makeOnesTypedArray(e,t){const n=makeZerosTypedArray(e,t);for(let r=0;r<n.length;r++)n[r]=1;return n}function makeZerosTypedArray(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function makeZerosNestedTypedArray(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return toNestedArray(e,new Float32Array(n));if("int32"===t)return toNestedArray(e,new Int32Array(n));if("bool"===t)return toNestedArray(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function assertNonNegativeIntegerDimensions(e){e.forEach((t=>{assert(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function locToIndex(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let a=0;a<e.length-1;++a)r+=n[a]*e[a];return r}function indexToLoc(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let a=0;a<r.length-1;++a)r[a]=Math.floor(e/n[a]),e-=r[a]*n[a];return r[r.length-1]=e,r}function isPromise(e){return e&&e.then&&"function"==typeof e.then}n.d(t,"M",(function(){return shuffle})),n.d(t,"N",(function(){return shuffleCombo})),n.d(t,"i",(function(){return clamp})),n.d(t,"H",(function(){return nearestLargerEven})),n.d(t,"R",(function(){return sum})),n.d(t,"J",(function(){return randUniform})),n.d(t,"l",(function(){return distSquared})),n.d(t,"b",(function(){return assert})),n.d(t,"e",(function(){return assertShapesMatch})),n.d(t,"d",(function(){return assertNonNull})),n.d(t,"m",(function(){return flatten})),n.d(t,"O",(function(){return sizeFromShape})),n.d(t,"y",(function(){return isScalarShape})),n.d(t,"a",(function(){return arraysEqual})),n.d(t,"v",(function(){return isInt})),n.d(t,"S",(function(){return tanh})),n.d(t,"P",(function(){return sizeToSquarishShape})),n.d(t,"k",(function(){return createShuffledIndices})),n.d(t,"L",(function(){return rightPad})),n.d(t,"K",(function(){return repeatedTry})),n.d(t,"s",(function(){return inferFromImplicitShape})),n.d(t,"I",(function(){return parseAxisParam})),n.d(t,"Q",(function(){return squeezeShape})),n.d(t,"o",(function(){return getTypedArrayFromDType})),n.d(t,"n",(function(){return getArrayFromDType})),n.d(t,"h",(function(){return checkConversionForErrors})),n.d(t,"B",(function(){return isValidDtype})),n.d(t,"p",(function(){return hasEncodingLoss})),n.d(t,"A",(function(){return isTypedArray})),n.d(t,"g",(function(){return bytesPerElement})),n.d(t,"f",(function(){return bytesFromStringArray})),n.d(t,"z",(function(){return isString})),n.d(t,"t",(function(){return isBoolean})),n.d(t,"w",(function(){return isNumber})),n.d(t,"r",(function(){return inferDtype})),n.d(t,"u",(function(){return isFunction})),n.d(t,"G",(function(){return nearestDivisor})),n.d(t,"j",(function(){return computeStrides})),n.d(t,"T",(function(){return toNestedArray})),n.d(t,"D",(function(){return makeOnesTypedArray})),n.d(t,"F",(function(){return makeZerosTypedArray})),n.d(t,"E",(function(){return makeZerosNestedTypedArray})),n.d(t,"c",(function(){return assertNonNegativeIntegerDimensions})),n.d(t,"C",(function(){return locToIndex})),n.d(t,"q",(function(){return indexToLoc})),n.d(t,"x",(function(){return isPromise}))},"6ae2":function(e,t,n){"use strict";n.d(t,"b",(function(){return getOrMakeEngine})),n.d(t,"a",(function(){return p}));var r=n("8b87"),a=n("b333"),s=n("f490"),o=n("c05b"),i=n("73b8"),u=n("eb7e"),c=n("6ad5");class profiler_Profiler{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new profiler_Logger)}profileKernel(e,t,n){let r;const holdResultWrapperFn=()=>{r=n()};let s;const o=u.now();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(holdResultWrapperFn);else{holdResultWrapperFn();for(const e of r)e.dataSync();s=Promise.resolve({kernelMs:u.now()-o})}if(Object(a.b)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let a=0;a<r.length;a++){const t=r[a];t.data().then((n=>{checkComputationForErrors(n,t.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:s.then((e=>e.kernelMs)),extraInfo:s.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}function checkComputationForErrors(e,t,n){if("float32"!==t)return!1;for(let r=0;r<e.length;r++){const t=e[r];if(isNaN(t)||!isFinite(t))return console.warn(`Found ${t} in the result of '${n}'`),!0}return!1}class profiler_Logger{logKernelProfile(e,t,n,r,a,s){const o="number"==typeof r?c.L(`${r}ms`,9):r.error,i=c.L(e,25),u=t.rank,l=t.size,d=c.L(t.shape.toString(),14);let p="";for(const c in a){const e=a[c];if(null!=e){const n=e.shape||t.shape,r=n.length;p+=`${c}: ${r}D ${r>0?n:""} `}}console.log(`%c${i}\t%c${o}\t%c${u}D ${d}\t%c${l}\t%c${p}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var l=n("34d7"),d=n("76c2");function isRegisteredKernelInvocation(e){return null!=e.kernelName}class EngineState{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class engine_Engine{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new EngineState}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new profiler_Profiler(this.backendInstance),!0}setupRegisteredKernels(){Object(i.c)(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Object(i.c)(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof r.b||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(n){return console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(r){throw t(),r}}nextTensorId(){return engine_Engine.nextTensorId++}nextVariableId(){return engine_Engine.nextVariableId++}clone(e){const t=p.runKernel(o.qb,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return p.runKernel(o.w,t,n)}})),[],{}),t}runKernel(e,t,n){if(!(null!=Object(i.b)(e,this.backendName)))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=r-t-a-s;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,s=this.state.numTensors;let o,u;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=isRegisteredKernelInvocation(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(isRegisteredKernelInvocation(e)){const{kernelName:t,inputs:a,attrs:s}=e;null==this.backendName&&this.backend;const l=Object(i.b)(t,this.backendName);c.b(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),o=()=>{const e=this.backend.numDataIds();u=l.kernelFunc({inputs:a,attrs:s,backend:this.backend});const o=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,o);const i=o.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(r){const e=this.getTensorsForGradient(t,a,i);n=this.saveTensorsForBackwardMode(e)}return i}}else{const{forwardFunc:t}=e,saveFunc=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};o=()=>{const e=this.backend.numDataIds();u=this.tidy((()=>t(this.backend,saveFunc)));const n=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:d,attrs:p}=e,h=isRegisteredKernelInvocation(e)?null:e.backwardsFunc;let f;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(l,d,(()=>o())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs):t=o()})),r&&this.addTapeNode(l,d,t,h,n,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map((e=>null!=d[e]?d[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=Object(i.a)(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(c.b(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const o=n.filter(((e,t)=>a[t]));return s.concat(o)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&c.z(e[0])&&(a=e.map((e=>u.encodeString(e))));const s=r.write(a,t,n),o=new l.a(t,n,s,this.nextTensorId());if(this.trackTensor(o,r),"string"===n){const e=this.state.tensorInfo.get(s),t=Object(c.f)(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return o}makeTensorFromDataId(e,t,n,r){n=n||"float32";const a=new l.a(t,n,e,this.nextTensorId());return this.trackTensor(a,r),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new l.c(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*c.g(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof l.c||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*c.g(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},u=Object(i.a)(e);null!=u&&(r=u.gradFunc),null!=r&&(o.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=c.F(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Object(d.getTensorsInContainer)(e),n=new Set(t.map((e=>e.id)));for(let a=0;a<this.state.activeScope.track.length;a++){const e=this.state.activeScope.track[a];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(c.b(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));c.b(a instanceof l.a,(()=>"The result y returned by f() must be a tensor."));const s=function getFilteredNodesXToY(e,t,n){const r={},a={};for(let u=0;u<t.length;u++)r[t[u].id]=!0;for(let u=0;u<e.length;u++){const n=e[u],s=n.inputs;for(const e in s){const o=s[e];let i=!1;for(let e=0;e<t.length;e++)if(r[o.id]){n.outputs.forEach((e=>r[e.id]=!0)),i=!0,a[n.id]=!0;break}if(i)break}}const s={};s[n.id]=!0;const o={};for(let u=e.length-1;u>=0;u--){const t=e[u],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(s[t.outputs[e].id]){for(const e in n)s[n[e].id]=!0,o[t.id]=!0;break}}const i=[];for(let u=0;u<e.length;u++){const t=e[u];if(a[t.id]&&o[t.id]){const e={};for(const a in t.inputs){const n=t.inputs[a];r[n.id]&&(e[a]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,i.push(n)}}return i}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[a.id]=null==n?function ones(e){const t=Object(c.D)(Object(c.O)(e),"float32");return p.makeTensor(t,e,"float32")}(a.shape):n,function backpropagateGradients(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],o=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?o.push(n):o.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const i=s.gradient(o);for(const t in s.inputs){if(!(t in i))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(i)}.`);const a=n((()=>i[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const o=s.inputs[t];if(!c.a(a.shape,o.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${o.shape}'`);if(null==e[o.id])e[o.id]=a;else{const t=e[o.id];e[o.id]=r(t,a),t.dispose()}}}}(e,s,(e=>this.tidy(e)),engine_add);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){return c.b(c.u(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;c.b(t.every((e=>e instanceof l.a)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};t.forEach(((e,t)=>{r[t]=e}));return this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),c.b(n.value instanceof l.a,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),c.b(c.u(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];c.b(s.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),c.b(s.every((e=>e instanceof l.a)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const o={};return s.forEach(((e,t)=>{o[t]=()=>e})),o},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=Object(u.now)(),n=await this.backend.time(e);return n.wallMs=Object(u.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new EngineState;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function getOrMakeEngine(){const e=Object(s.b)();if(null==e._tfengine){const t=new a.a(e);e._tfengine=new engine_Engine(t)}return Object(a.c)(e._tfengine.ENV),Object(l.g)((()=>e._tfengine)),e._tfengine}engine_Engine.nextTensorId=0,engine_Engine.nextVariableId=0;const p=getOrMakeEngine();function engine_add(e,t){const n={a:e,b:t};return p.runKernel(o.d,n)}},"6d3c":function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({slice_:function slice_(e,t,n){const o=Object(s.a)(e,"x","slice","string_or_numeric");if(0===o.rank)throw new Error("Slicing scalar is not possible");const i={x:o},u={begin:t,size:n};return r.a.runKernel(a.Dc,i,u)}})},"6e83":function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}]},"6eeb":function(e,t,n){var r=n("da84"),a=n("9112"),s=n("5135"),o=n("ce4e"),i=n("8925"),u=n("69f3"),c=u.get,l=u.enforce,d=String(String).split("String");(e.exports=function(e,t,n,i){var u,c=!!i&&!!i.unsafe,p=!!i&&!!i.enumerable,h=!!i&&!!i.noTargetGet;"function"==typeof n&&("string"!=typeof t||s(n,"name")||a(n,"name",t),(u=l(n)).source||(u.source=d.join("string"==typeof t?t:""))),e!==r?(c?!h&&e[t]&&(p=!0):delete e[t],p?e[t]=n:a(e,t,n)):p?e[t]=n:o(t,n)})(Function.prototype,"toString",(function toString(){return"function"==typeof this&&c(this).source||i(this)}))},"6f37":function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({leakyRelu_:function leakyRelu_(e,t=.2){const n={x:Object(s.a)(e,"x","leakyRelu")},o={alpha:t};return r.a.runKernel(a.xb,n,o)}})},"6fef":function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({isNaN_:function isNaN_(e){const t={x:Object(s.a)(e,"x","isNaN")};return r.a.runKernel(a.ub,t)}})},"71db":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("35c9");var u=n("54ef");const c=Object(u.a)({batchNorm_:function batchNorm_(e,t,n,u,c,l){null==l&&(l=.001);const d=Object(s.a)(e,"x","batchNorm"),p=Object(s.a)(t,"mean","batchNorm"),h=Object(s.a)(n,"variance","batchNorm");let f,m;null!=c&&(f=Object(s.a)(c,"scale","batchNorm")),null!=u&&(m=Object(s.a)(u,"offset","batchNorm")),o.b(p.rank===h.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),o.b(null==m||p.rank===m.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),o.b(null==f||p.rank===f.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const g={x:function xAs4D(e){let t;return t=0===e.rank||1===e.rank?Object(i.a)(e,[1,1,1,e.size]):2===e.rank?Object(i.a)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Object(i.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(d),scale:f,offset:m,mean:p,variance:h},b={varianceEpsilon:l},y=r.a.runKernel(a.ib,g,b);return Object(i.a)(y,d.shape)}})},"73b8":function(e,t,n){"use strict";n.d(t,"b",(function(){return getKernel})),n.d(t,"a",(function(){return getGradient})),n.d(t,"c",(function(){return getKernelsForBackend})),n.d(t,"e",(function(){return registerKernel})),n.d(t,"d",(function(){return registerGradient}));var r=n("b333"),a=n("f490");const s=Object(a.a)("kernelRegistry",(()=>new Map)),o=Object(a.a)("gradRegistry",(()=>new Map));function getKernel(e,t){const n=makeKey(e,t);return s.get(n)}function getGradient(e){return o.get(e)}function getKernelsForBackend(e){const t=s.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,o]=a,[i]=s.split("_");i===e&&n.push(o)}return n}function registerKernel(e){const{kernelName:t,backendName:n}=e,r=makeKey(t,n);s.has(r)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),s.set(r,e)}function registerGradient(e){const{kernelName:t}=e;o.has(t)&&Object(r.b)().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),o.set(t,e)}function makeKey(e,t){return`${t}_${e}`}},"73d3":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("6ad5"),o=n("54ef"),i=n("35c9");const u=Object(o.a)({conv2DBackpropInput_:function conv2DBackpropInput_(e,t,n,o,u,c="NHWC",l){s.b(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let d=e,p=t,h=!1;3===t.rank&&(h=!0,p=Object(i.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),d=[1,e[0],e[1],e[2]]),s.b(4===d.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${d.length}.`)),s.b(4===p.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${p.rank}`)),s.b(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const f="NHWC"===c?d[3]:d[1],m="NHWC"===c?p.shape[3]:p.shape[1];s.b(f===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${f}) must match input depth for filter ${n.shape[2]}.`)),s.b(m===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${m}) must match output depth for filter ${n.shape[3]}.`)),null!=l&&s.b(s.v(u),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${l} but got pad ${u}.`));const g={dy:p,filter:n},b={strides:o,pad:u,dataFormat:c,dimRoundingMode:l,inputShape:d},y=r.a.runKernel(a.E,g,b);return h?Object(i.a)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},"73f8":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("54ef"),u=n("35c9");const c=Object(i.a)({resizeBilinear_:function resizeBilinear_(e,t,n=!1,i=!1){const c=Object(s.a)(e,"images","resizeBilinear");o.b(3===c.rank||4===c.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${c.rank}.`)),o.b(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),o.b(!1===i||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let l=c,d=!1;3===c.rank&&(d=!0,l=Object(u.a)(c,[1,c.shape[0],c.shape[1],c.shape[2]]));const[]=t,p={images:l},h={alignCorners:n,halfPixelCenters:i,size:t},f=r.a.runKernel(a.oc,p,h);return d?Object(u.a)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},7418:function(e,t){t.f=Object.getOwnPropertySymbols},"746f":function(e,t,n){var r=n("428f"),a=n("5135"),s=n("e538"),o=n("9bf2").f;e.exports=function(e){var t=r.Symbol||(r.Symbol={});a(t,e)||o(t,e,{value:s.f(e)})}},7568:function(e,t,n){"use strict";function print(e,t=!1){console.log(e.toString(t))}n.d(t,"a",(function(){return print}))},7580:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("54ef");const u=Object(i.a)({spaceToBatchND_:function spaceToBatchND_(e,t,n){const i=Object(s.a)(e,"x","spaceToBatchND");o.b(i.rank>=1+t.length,(()=>`input rank ${i.rank} should be > than [blockShape] ${t.length}`)),o.b(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),o.b(i.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e),!0),(()=>`input spatial dimensions ${i.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const u={x:i},c={blockShape:t,paddings:n};return r.a.runKernel(a.Gc,u,c)}})},7675:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("a3f7"),a=n("6ad5"),s=n("dd7e"),o=n("b818"),i=n("54ef"),u=n("35c9");const c=Object(i.a)({conv1d_:function conv1d_(e,t,n,i,c="NWC",l=1,d){const p=Object(r.a)(e,"x","conv1d"),h=Object(r.a)(t,"filter","conv1d");let f=p,m=!1;2===p.rank&&(m=!0,f=Object(u.a)(p,[1,p.shape[0],p.shape[1]])),a.b(3===f.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${f.rank}.`)),a.b(3===h.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${h.rank}.`)),null!=d&&a.b(a.v(i),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${d} but got pad ${i}.`)),a.b(f.shape[2]===h.shape[1],(()=>`Error in conv1d: depth of input (${f.shape[2]}) must match input depth for filter ${h.shape[1]}.`)),a.b(o.h(n,l),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${l}'`)),a.b("NWC"===c,(()=>`Error in conv1d: got dataFormat of ${c} but only NWC is currently supported.`));const g=Object(u.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]]),b=Object(u.a)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),y=[1,n],x=[1,l],v=Object(s.a)(b,g,y,i,"NHWC",x,d);return m?Object(u.a)(v,[v.shape[2],v.shape[3]]):Object(u.a)(v,[v.shape[0],v.shape[2],v.shape[3]])}})},"76c2":function(e,t,n){"use strict";n.r(t),n.d(t,"makeTypesMatch",(function(){return makeTypesMatch})),n.d(t,"assertTypesMatch",(function(){return assertTypesMatch})),n.d(t,"isTensorInList",(function(){return isTensorInList})),n.d(t,"getTensorsInContainer",(function(){return getTensorsInContainer}));var r=n("34d7"),a=n("23bf"),s=n("6ad5");function makeTypesMatch(e,t){if(e.dtype===t.dtype)return[e,t];const n=Object(a.b)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function assertTypesMatch(e,t){Object(s.b)(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function isTensorInList(e,t){return t.some((t=>t.id===e.id))}function getTensorsInContainer(e){const t=[];return walkTensorContainer(e,t,new Set),t}function walkTensorContainer(e,t,n){if(null==e)return;if(e instanceof r.a)return void t.push(e);if(!function isIterable(e){return Array.isArray(e)||"object"==typeof e}(e))return;const a=e;for(const r in a){const e=a[r];n.has(e)||(n.add(e),walkTensorContainer(e,t,n))}}},7839:function(e,t){e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},7941:function(e,t,n){(function(e){var r;!function(e,a,s){function XorGen(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function init(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function copy(e,t){return t.x=e.x.slice(),t.i=e.i,t}function impl(e,t){null==e&&(e=+new Date);var n=new XorGen(e),r=t&&t.state,prng=function(){return(n.next()>>>0)/4294967296};return prng.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},prng.int32=n.next,prng.quick=prng,r&&(r.x&&copy(r,n),prng.state=function(){return copy(n,{})}),prng}a&&a.exports?a.exports=impl:n("07d6")&&n("3c35")?void 0===(r=function(){return impl}.call(t,n,t,a))||(a.exports=r):this.xorshift7=impl}(0,e,n("07d6"))}).call(this,n("62e4")(e))},"7aec":function(e,t,n){(function(e){var r;!function(e,a,s){function XorGen(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function init(e,t){var n,r,a,s,o,i=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(o=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(o=o+1640531527|0,a=0==(n=i[127&s]^=r+o)?a+1:0);for(a>=128&&(i[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=i[a+34&127],n=i[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,i[a]=r^n;e.w=o,e.X=i,e.i=a}(t,e)}function copy(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function impl(e,t){null==e&&(e=+new Date);var n=new XorGen(e),r=t&&t.state,prng=function(){return(n.next()>>>0)/4294967296};return prng.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},prng.int32=n.next,prng.quick=prng,r&&(r.X&&copy(r,n),prng.state=function(){return copy(n,{})}),prng}a&&a.exports?a.exports=impl:n("07d6")&&n("3c35")?void 0===(r=function(){return impl}.call(t,n,t,a))||(a.exports=r):this.xor4096=impl}(0,e,n("07d6"))}).call(this,n("62e4")(e))},"7b0b":function(e,t,n){var r=n("1d80");e.exports=function(e){return Object(r(e))}},"7c73":function(e,t,n){var r,a=n("825a"),s=n("37e8"),o=n("7839"),i=n("d012"),u=n("1be4"),c=n("cc12"),l=n("f772"),d=l("IE_PROTO"),EmptyConstructor=function(){},scriptTag=function(e){return"<script>"+e+"</"+"script>"},NullProtoObject=function(){try{r=document.domain&&new ActiveXObject("htmlfile")}catch(t){}NullProtoObject=r?function(e){e.write(scriptTag("")),e.close();var t=e.parentWindow.Object;return e=null,t}(r):function(){var e,t=c("iframe");return t.style.display="none",u.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write(scriptTag("document.F=Object")),e.close(),e.F}();for(var e=o.length;e--;)delete NullProtoObject.prototype[o[e]];return NullProtoObject()};i[d]=!0,e.exports=Object.create||function create(e,t){var n;return null!==e?(EmptyConstructor.prototype=a(e),n=new EmptyConstructor,EmptyConstructor.prototype=null,n[d]=e):n=NullProtoObject(),void 0===t?n:s(n,t)}},"7cde":function(e,t,n){"use strict";n.d(t,"b",(function(){return r})),n.d(t,"a",(function(){return a}));const r=1.7580993408473768,a=1.0507009873554805},"7dd0":function(e,t,n){"use strict";var r=n("23e7"),a=n("9ed3"),s=n("e163"),o=n("d2bb"),i=n("d44e"),u=n("9112"),c=n("6eeb"),l=n("b622"),d=n("c430"),p=n("3f8c"),h=n("ae93"),f=h.IteratorPrototype,m=h.BUGGY_SAFARI_ITERATORS,g=l("iterator"),b="keys",y="values",x="entries",returnThis=function(){return this};e.exports=function(e,t,n,l,h,v,k){a(n,t,l);var w,O,_,getIterationMethod=function(e){if(e===h&&T)return T;if(!m&&e in N)return N[e];switch(e){case b:return function keys(){return new n(this,e)};case y:return function values(){return new n(this,e)};case x:return function entries(){return new n(this,e)}}return function(){return new n(this)}},I=t+" Iterator",S=!1,N=e.prototype,C=N[g]||N["@@iterator"]||h&&N[h],T=!m&&C||getIterationMethod(h),A="Array"==t&&N.entries||C;if(A&&(w=s(A.call(new e)),f!==Object.prototype&&w.next&&(d||s(w)===f||(o?o(w,f):"function"!=typeof w[g]&&u(w,g,returnThis)),i(w,I,!0,!0),d&&(p[I]=returnThis))),h==y&&C&&C.name!==y&&(S=!0,T=function values(){return C.call(this)}),d&&!k||N[g]===T||u(N,g,T),p[t]=T,h)if(O={values:getIterationMethod(y),keys:v?T:getIterationMethod(b),entries:getIterationMethod(x)},k)for(_ in O)(m||S||!(_ in N))&&c(N,_,O[_]);else r({target:t,proto:!0,forced:m||S},O);return O}},"7e36":function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({atan_:function atan_(e){const t={x:Object(s.a)(e,"x","atan")};return r.a.runKernel(a.l,t)}})},"7e6a":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("043e"),a=n("54ef"),s=n("d4e4");const o=Object(a.a)({truncatedNormal_:function truncatedNormal_(e,t=0,n=1,a,o){if(null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const i=new s.a(t,n,a,!0,o),u=Object(r.a)(e,a);for(let r=0;r<u.values.length;r++)u.values[r]=i.nextValue();return u.toTensor()}})},"7ed6":function(e,t,n){"use strict";function isMobile(){if(function _isNavigatorDefined(){return"undefined"!=typeof navigator&&null!=navigator}()){const e=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function isBrowser(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}n.r(t),n.d(t,"isMobile",(function(){return isMobile})),n.d(t,"isBrowser",(function(){return isBrowser}))},"7f9a":function(e,t,n){var r=n("da84"),a=n("8925"),s=r.WeakMap;e.exports="function"==typeof s&&/native code/.test(a(s))},"7feb":function(e,t,n){(function(e){var r;!function(e,a,s){function XorGen(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function copy(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function impl(e,t){var n=new XorGen(e),r=t&&t.state,prng=function(){return(n.next()>>>0)/4294967296};return prng.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},prng.int32=n.next,prng.quick=prng,r&&("object"==typeof r&&copy(r,n),prng.state=function(){return copy(n,{})}),prng}a&&a.exports?a.exports=impl:n("07d6")&&n("3c35")?void 0===(r=function(){return impl}.call(t,n,t,a))||(a.exports=r):this.xor128=impl}(0,e,n("07d6"))}).call(this,n("62e4")(e))},"804a":function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n("538e"),a=n("a3f7"),s=n("deb3"),o=n("4f20"),i=n("1359"),u=n("c021"),c=n("a5aa"),l=n("54ef"),d=n("a009"),p=n("e053");const h=Object(l.a)({logSoftmax_:function logSoftmax_(e,t=-1){const n=Object(a.a)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return Object(r.a)(((e,n)=>{const r=Object(u.a)(e,t,!0),a=Object(d.a)(e,r),l=Object(d.a)(Object(s.a)(a,"float32"),Object(i.a)(Object(p.a)(Object(o.a)(a),t,!0)));n([l]);return{value:l,gradFunc:(e,n)=>{const[r]=n,a=Object(o.a)(r);return Object(d.a)(e,Object(c.a)(Object(p.a)(e,t,!0),a))}}}))(n)}})},"825a":function(e,t,n){var r=n("861d");e.exports=function(e){if(!r(e))throw TypeError(String(e)+" is not an object");return e}},8389:function(e,t,n){"use strict";function binaryInsert(e,t,n){const r=function binarySearch(e,t,n){return function binarySearch_(e,t,n){let r=0,a=e.length,s=0,o=!1;for(;r<a;){s=r+(a-r>>>1);const i=n(t,e[s]);i>0?r=s+1:(a=s,o=!i)}return o?r:-r-1}(e,t,n||defaultComparator)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function defaultComparator(e,t){return e>t?1:e<t?-1:0}function nonMaxSuppressionV3Impl(e,t,n,r,a){return nonMaxSuppressionImpl_(e,t,n,r,a,0)}function nonMaxSuppressionV4Impl(e,t,n,r,a,s){return nonMaxSuppressionImpl_(e,t,n,r,a,0,!1,s,!0)}function nonMaxSuppressionV5Impl(e,t,n,r,a,s){return nonMaxSuppressionImpl_(e,t,n,r,a,s,!0)}function nonMaxSuppressionImpl_(e,t,n,r,a,s,o=!1,i=!1,u=!1){const c=[];for(let g=0;g<t.length;g++)t[g]>a&&c.push({score:t[g],boxIndex:g,suppressBeginIndex:0});c.sort(ascendingComparator);const l=s>0?-.5/s:0,d=[],p=[];for(;d.length<n&&c.length>0;){const t=c.pop(),{score:n,boxIndex:s,suppressBeginIndex:o}=t;if(n<a)break;let i=!1;for(let u=d.length-1;u>=o;--u){const n=intersectionOverUnion(e,s,d[u]);if(n>=r){i=!0;break}if(t.score=t.score*suppressWeight(r,l,n),t.score<=a)break}t.suppressBeginIndex=d.length,i||(t.score===n?(d.push(s),p.push(t.score)):t.score>a&&binaryInsert(c,t,ascendingComparator))}const h=d.length,f=n-h;i&&f>0&&(d.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));const m={selectedIndices:d};return o&&(m.selectedScores=p),u&&(m.validOutputs=h),m}function intersectionOverUnion(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),o=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),c=Math.min(a[0],a[2]),l=Math.min(a[1],a[3]),d=Math.max(a[0],a[2]),p=Math.max(a[1],a[3]),h=(i-s)*(u-o),f=(d-c)*(p-l);if(h<=0||f<=0)return 0;const m=Math.max(s,c),g=Math.max(o,l),b=Math.min(i,d),y=Math.min(u,p),x=Math.max(b-m,0)*Math.max(y-g,0);return x/(h+f-x)}function suppressWeight(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function ascendingComparator(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}n.d(t,"a",(function(){return nonMaxSuppressionV3Impl})),n.d(t,"b",(function(){return nonMaxSuppressionV4Impl})),n.d(t,"c",(function(){return nonMaxSuppressionV5Impl}))},"838f":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("54ef"),u=n("35c9");const c=Object(i.a)({depthwiseConv2d_:function depthwiseConv2d_(e,t,n,i,c="NHWC",l=[1,1],d){const p=Object(s.a)(e,"x","depthwiseConv2d"),h=Object(s.a)(t,"filter","depthwiseConv2d");let f=p,m=!1;3===p.rank&&(m=!0,f=Object(u.a)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),o.b(4===f.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`)),o.b(4===h.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`)),o.b(f.shape[3]===h.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`)),null!=d&&o.b(o.v(i),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${d} but got pad ${i}.`));const g={x:f,filter:h},b={strides:n,pad:i,dataFormat:c,dilations:l,dimRoundingMode:d},y=r.a.runKernel(a.O,g,b);return m?Object(u.a)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},"83ab":function(e,t,n){var r=n("d039");e.exports=!r((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},8418:function(e,t,n){"use strict";var r=n("c04ea"),a=n("9bf2"),s=n("5c6c");e.exports=function(e,t,n){var o=r(t);o in e?a.f(e,o,s(0,n)):e[o]=n}},"84d6":function(e,t,n){"use strict";n.d(t,"a",(function(){return range}));var r=n("6ae2"),a=n("c05b");function range(e,t,n=1,s="float32"){if(0===n)throw new Error("Cannot have a step of zero");const o={start:e,stop:t,step:n,dtype:s};return r.a.runKernel(a.hc,{},o)}},"853e":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("54ef");const u=Object(i.a)({unique_:function unique_(e,t=0){const n=Object(s.a)(e,"x","unique","string_or_numeric");Object(o.b)(n.rank>0,(()=>"The input tensor must be at least 1D"));const i={x:n},u={axis:t},[c,l]=r.a.runKernel(a.Wc,i,u);return{values:c,indices:l}}})},"861d":function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},8629:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("043e"),a=n("54ef"),s=n("d4e4");const o=Object(a.a)({randomUniform_:function randomUniform_(e,t=0,n=1,a="float32",o){const i=Object(r.a)(e,a),u=new s.b(t,n,null,o);for(let r=0;r<i.values.length;r++)i.values[r]=u.nextValue();return i.toTensor()}})},8888:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({tanh_:function tanh_(e){const t={x:Object(s.a)(e,"x","tanh")};return r.a.runKernel(a.Rc,t)}})},8925:function(e,t,n){var r=n("c6cd"),a=Function.toString;"function"!=typeof r.inspectSource&&(r.inspectSource=function(e){return a.call(e)}),e.exports=r.inspectSource},"89ed":function(e,t,n){(function(e){var r;!function(e,a,s){function XorGen(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function copy(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function impl(e,t){var n=new XorGen(e),r=t&&t.state,prng=function(){return(n.next()>>>0)/4294967296};return prng.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},prng.int32=n.next,prng.quick=prng,r&&("object"==typeof r&&copy(r,n),prng.state=function(){return copy(n,{})}),prng}a&&a.exports?a.exports=impl:n("07d6")&&n("3c35")?void 0===(r=function(){return impl}.call(t,n,t,a))||(a.exports=r):this.tychei=impl}(0,e,n("07d6"))}).call(this,n("62e4")(e))},"8aa5":function(e,t,n){"use strict";var r=n("6547").charAt;e.exports=function(e,t,n){return t+(n?r(e,t).length:1)}},"8ae0":function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({abs_:function abs_(e){const t=Object(s.a)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return r.a.runKernel(a.A,e)}{const e={x:t};return r.a.runKernel(a.a,e)}}})},"8b87":function(e,t,n){"use strict";n.d(t,"a",(function(){return DataStorage})),n.d(t,"b",(function(){return KernelBackend}));class DataStorage{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class KernelBackend{refCount(e){return notYetImplemented("refCount")}incRef(e){return notYetImplemented("incRef")}timerAvailable(){return!0}time(e){return notYetImplemented("time")}read(e){return notYetImplemented("read")}readSync(e){return notYetImplemented("readSync")}numDataIds(){return notYetImplemented("numDataIds")}disposeData(e,t){return notYetImplemented("disposeData")}write(e,t,n){return notYetImplemented("write")}move(e,t,n,r,a){return notYetImplemented("move")}memory(){return notYetImplemented("memory")}floatPrecision(){return notYetImplemented("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return notYetImplemented("dispose")}}function notYetImplemented(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},"8bc9":function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({maxPoolWithArgmax_:function maxPoolWithArgmax_(e,t,n,o,i=!1){const u={x:Object(s.a)(e,"x","maxPoolWithArgmax")},c={filterSize:t,strides:n,pad:o,includeBatchInIndex:i},l=r.a.runKernel(a.Mb,u,c);return{result:l[0],indexes:l[1]}}})},"8bfa":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef"),i=n("a34f");const u=Object(o.a)({scatterND_:function scatterND_(e,t,n){const o=Object(s.a)(e,"indices","scatterND","int32"),u=Object(s.a)(t,"updates","scatterND");i.b(u,o,n);const c={indices:o,updates:u},l={shape:n};return r.a.runKernel(a.wc,c,l)}})},"8cb0":function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("54ef"),o=n("35c9");const i=Object(s.a)({depthwiseConv2dNativeBackpropInput_:function depthwiseConv2dNativeBackpropInput_(e,t,n,s,i,u=[1,1],c){let l=t,d=!1;3===t.rank&&(d=!0,l=Object(o.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const p={dy:l,filter:n},h={strides:s,pad:i,dimRoundingMode:c,dilations:u,inputShape:e},f=r.a.runKernel(a.Q,p,h);return d?Object(o.a)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},"8d71":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("54ef");const u=Object(i.a)({tile_:function tile_(e,t){const n=Object(s.a)(e,"x","tile","string_or_numeric");o.b(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const i={x:n},u={reps:t};return r.a.runKernel(a.Sc,i,u)}})},"8e05":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("deb3"),u=n("54ef");const c=Object(u.a)({erf_:function erf_(e){let t=Object(s.a)(e,"x","erf");o.b("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Object(i.a)(t,"float32"));const n={x:t};return r.a.runKernel(a.Y,n)}})},"90e3":function(e,t){var n=0,r=Math.random();e.exports=function(e){return"Symbol("+String(void 0===e?"":e)+")_"+(++n+r).toString(36)}},9112:function(e,t,n){var r=n("83ab"),a=n("9bf2"),s=n("5c6c");e.exports=r?function(e,t,n){return a.f(e,t,s(1,n))}:function(e,t,n){return e[t]=n,e}},9117:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),o=n("a3f7"),i=n("54ef");const u=Object(i.a)({add_:function add_(e,t){let n=Object(o.a)(e,"a","add"),i=Object(o.a)(t,"b","add");[n,i]=Object(s.makeTypesMatch)(n,i);const u={a:n,b:i};return r.a.runKernel(a.d,u)}})},9152:function(e,t){t.read=function(e,t,n,r,a){var s,o,i=8*a-r-1,u=(1<<i)-1,c=u>>1,l=-7,d=n?a-1:0,p=n?-1:1,h=e[t+d];for(d+=p,s=h&(1<<-l)-1,h>>=-l,l+=i;l>0;s=256*s+e[t+d],d+=p,l-=8);for(o=s&(1<<-l)-1,s>>=-l,l+=r;l>0;o=256*o+e[t+d],d+=p,l-=8);if(0===s)s=1-c;else{if(s===u)return o?NaN:1/0*(h?-1:1);o+=Math.pow(2,r),s-=c}return(h?-1:1)*o*Math.pow(2,s-r)},t.write=function(e,t,n,r,a,s){var o,i,u,c=8*s-a-1,l=(1<<c)-1,d=l>>1,p=23===a?Math.pow(2,-24)-Math.pow(2,-77):0,h=r?0:s-1,f=r?1:-1,m=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(i=isNaN(t)?1:0,o=l):(o=Math.floor(Math.log(t)/Math.LN2),t*(u=Math.pow(2,-o))<1&&(o--,u*=2),(t+=o+d>=1?p/u:p*Math.pow(2,1-d))*u>=2&&(o++,u/=2),o+d>=l?(i=0,o=l):o+d>=1?(i=(t*u-1)*Math.pow(2,a),o+=d):(i=t*Math.pow(2,d-1)*Math.pow(2,a),o=0));a>=8;e[n+h]=255&i,h+=f,i/=256,a-=8);for(o=o<<a|i,c+=a;c>0;e[n+h]=255&o,h+=f,o/=256,c-=8);e[n+h-f]|=128*m}},"917a":function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({relu_:function relu_(e){const t={x:Object(s.a)(e,"x","relu")};return r.a.runKernel(a.lc,t)}})},"91a3":function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({gather_:function gather_(e,t,n=0,o=0){const i={x:Object(s.a)(e,"x","gather"),indices:Object(s.a)(t,"indices","gather","int32")},u={axis:n,batchDims:o};return r.a.runKernel(a.mb,i,u)}})},9263:function(e,t,n){"use strict";var r=n("ad6d"),a=n("9f7f"),s=n("5692"),o=RegExp.prototype.exec,i=s("native-string-replace",String.prototype.replace),u=o,c=function(){var e=/a/,t=/b*/g;return o.call(e,"a"),o.call(t,"a"),0!==e.lastIndex||0!==t.lastIndex}(),l=a.UNSUPPORTED_Y||a.BROKEN_CARET,d=void 0!==/()??/.exec("")[1];(c||d||l)&&(u=function exec(e){var t,n,a,s,u=this,p=l&&u.sticky,h=r.call(u),f=u.source,m=0,g=e;return p&&(-1===(h=h.replace("y","")).indexOf("g")&&(h+="g"),g=String(e).slice(u.lastIndex),u.lastIndex>0&&(!u.multiline||u.multiline&&"\n"!==e[u.lastIndex-1])&&(f="(?: "+f+")",g=" "+g,m++),n=new RegExp("^(?:"+f+")",h)),d&&(n=new RegExp("^"+f+"$(?!\\s)",h)),c&&(t=u.lastIndex),a=o.call(p?n:u,g),p?a?(a.input=a.input.slice(m),a[0]=a[0].slice(m),a.index=u.lastIndex,u.lastIndex+=a[0].length):u.lastIndex=0:c&&a&&(u.lastIndex=u.global?a.index+a[0].length:t),d&&a&&a.length>1&&i.call(a[0],n,(function(){for(s=1;s<arguments.length-2;s++)void 0===arguments[s]&&(a[s]=void 0)})),a}),e.exports=u},"93b2":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("6ae2"),a=n("a3f7"),s=n("54ef");const o=Object(s.a)({square_:function square_(e){const t=Object(a.a)(e,"x","square");return r.a.runKernel("Square",{x:t},{})}})},"93db":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("54ef");const u=Object(i.a)({mirrorPad_:function mirrorPad_(e,t,n){o.b("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const i=Object(s.a)(e,"x","mirrorPad");if(0===i.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");o.b(t.length===i.rank,(()=>`Padding doesn't match input. Must be ${i.rank}. Got ${t.length}.`));const u="reflect"===n?1:0;for(let r=0;r<i.rank;r++)o.b(2===t[r].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),o.b(t[r][0]>=0&&t[r][0]<=i.shape[r]-u&&t[r][1]>=0&&t[r][1]<=i.shape[r]-u,(()=>`Padding in dimension ${r} cannot be greater than or equal to ${i.shape[r]-u} or less than 0 for input of shape ${i.shape}`));const c={paddings:t,mode:n},l={x:i};return r.a.runKernel(a.Rb,l,c)}})},9489:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}]},"94ca":function(e,t,n){var r=n("d039"),a=/#|\.prototype\./,isForced=function(e,t){var n=o[s(e)];return n==u||n!=i&&("function"==typeof t?r(t):!!t)},s=isForced.normalize=function(e){return String(e).replace(a,".").toLowerCase()},o=isForced.data={},i=isForced.NATIVE="N",u=isForced.POLYFILL="P";e.exports=isForced},"960f":function(e,t,n){"use strict";n.d(t,"a",(function(){return tensor1d}));var r=n("a3f7"),a=n("6ad5"),s=n("5959");function tensor1d(e,t){Object(a.d)(e);const n=Object(r.c)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Object(s.a)(e,null,n,t)}},"96cf":function(e,t,n){var r=function(e){"use strict";var t,n=Object.prototype,r=n.hasOwnProperty,a="function"==typeof Symbol?Symbol:{},s=a.iterator||"@@iterator",o=a.asyncIterator||"@@asyncIterator",i=a.toStringTag||"@@toStringTag";function define(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{define({},"")}catch(b){define=function(e,t,n){return e[t]=n}}function wrap(e,t,n,r){var a=t&&t.prototype instanceof Generator?t:Generator,s=Object.create(a.prototype),o=new Context(r||[]);return s._invoke=function makeInvokeMethod(e,t,n){var r=u;return function invoke(a,s){if(r===l)throw new Error("Generator is already running");if(r===d){if("throw"===a)throw s;return doneResult()}for(n.method=a,n.arg=s;;){var o=n.delegate;if(o){var i=maybeInvokeDelegate(o,n);if(i){if(i===p)continue;return i}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(r===u)throw r=d,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r=l;var h=tryCatch(e,t,n);if("normal"===h.type){if(r=n.done?d:c,h.arg===p)continue;return{value:h.arg,done:n.done}}"throw"===h.type&&(r=d,n.method="throw",n.arg=h.arg)}}}(e,n,o),s}function tryCatch(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(b){return{type:"throw",arg:b}}}e.wrap=wrap;var u="suspendedStart",c="suspendedYield",l="executing",d="completed",p={};function Generator(){}function GeneratorFunction(){}function GeneratorFunctionPrototype(){}var h={};h[s]=function(){return this};var f=Object.getPrototypeOf,m=f&&f(f(values([])));m&&m!==n&&r.call(m,s)&&(h=m);var g=GeneratorFunctionPrototype.prototype=Generator.prototype=Object.create(h);function defineIteratorMethods(e){["next","throw","return"].forEach((function(t){define(e,t,(function(e){return this._invoke(t,e)}))}))}function AsyncIterator(e,t){function invoke(n,a,s,o){var i=tryCatch(e[n],e,a);if("throw"!==i.type){var u=i.arg,c=u.value;return c&&"object"==typeof c&&r.call(c,"__await")?t.resolve(c.__await).then((function(e){invoke("next",e,s,o)}),(function(e){invoke("throw",e,s,o)})):t.resolve(c).then((function(e){u.value=e,s(u)}),(function(e){return invoke("throw",e,s,o)}))}o(i.arg)}var n;this._invoke=function enqueue(e,r){function callInvokeWithMethodAndArg(){return new t((function(t,n){invoke(e,r,t,n)}))}return n=n?n.then(callInvokeWithMethodAndArg,callInvokeWithMethodAndArg):callInvokeWithMethodAndArg()}}function maybeInvokeDelegate(e,n){var r=e.iterator[n.method];if(r===t){if(n.delegate=null,"throw"===n.method){if(e.iterator.return&&(n.method="return",n.arg=t,maybeInvokeDelegate(e,n),"throw"===n.method))return p;n.method="throw",n.arg=new TypeError("The iterator does not provide a 'throw' method")}return p}var a=tryCatch(r,e.iterator,n.arg);if("throw"===a.type)return n.method="throw",n.arg=a.arg,n.delegate=null,p;var s=a.arg;return s?s.done?(n[e.resultName]=s.value,n.next=e.nextLoc,"return"!==n.method&&(n.method="next",n.arg=t),n.delegate=null,p):s:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,p)}function pushTryEntry(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function resetTryEntry(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function Context(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(pushTryEntry,this),this.reset(!0)}function values(e){if(e){var n=e[s];if(n)return n.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var a=-1,o=function next(){for(;++a<e.length;)if(r.call(e,a))return next.value=e[a],next.done=!1,next;return next.value=t,next.done=!0,next};return o.next=o}}return{next:doneResult}}function doneResult(){return{value:t,done:!0}}return GeneratorFunction.prototype=g.constructor=GeneratorFunctionPrototype,GeneratorFunctionPrototype.constructor=GeneratorFunction,GeneratorFunction.displayName=define(GeneratorFunctionPrototype,i,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===GeneratorFunction||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,GeneratorFunctionPrototype):(e.__proto__=GeneratorFunctionPrototype,define(e,i,"GeneratorFunction")),e.prototype=Object.create(g),e},e.awrap=function(e){return{__await:e}},defineIteratorMethods(AsyncIterator.prototype),AsyncIterator.prototype[o]=function(){return this},e.AsyncIterator=AsyncIterator,e.async=function(t,n,r,a,s){void 0===s&&(s=Promise);var o=new AsyncIterator(wrap(t,n,r,a),s);return e.isGeneratorFunction(n)?o:o.next().then((function(e){return e.done?e.value:o.next()}))},defineIteratorMethods(g),define(g,i,"Generator"),g[s]=function(){return this},g.toString=function(){return"[object Generator]"},e.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function next(){for(;t.length;){var n=t.pop();if(n in e)return next.value=n,next.done=!1,next}return next.done=!0,next}},e.values=values,Context.prototype={constructor:Context,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(resetTryEntry),!e)for(var n in this)"t"===n.charAt(0)&&r.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=t)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function handle(r,a){return o.type="throw",o.arg=e,n.next=r,a&&(n.method="next",n.arg=t),!!a}for(var a=this.tryEntries.length-1;a>=0;--a){var s=this.tryEntries[a],o=s.completion;if("root"===s.tryLoc)return handle("end");if(s.tryLoc<=this.prev){var i=r.call(s,"catchLoc"),u=r.call(s,"finallyLoc");if(i&&u){if(this.prev<s.catchLoc)return handle(s.catchLoc,!0);if(this.prev<s.finallyLoc)return handle(s.finallyLoc)}else if(i){if(this.prev<s.catchLoc)return handle(s.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<s.finallyLoc)return handle(s.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var a=this.tryEntries[n];if(a.tryLoc<=this.prev&&r.call(a,"finallyLoc")&&this.prev<a.finallyLoc){var s=a;break}}s&&("break"===e||"continue"===e)&&s.tryLoc<=t&&t<=s.finallyLoc&&(s=null);var o=s?s.completion:{};return o.type=e,o.arg=t,s?(this.method="next",this.next=s.finallyLoc,p):this.complete(o)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),p},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),resetTryEntry(n),p}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var a=r.arg;resetTryEntry(n)}return a}}throw new Error("illegal catch attempt")},delegateYield:function(e,n,r){return this.delegate={iterator:values(e),resultName:n,nextLoc:r},"next"===this.method&&(this.arg=t),p}},e}(e.exports);try{regeneratorRuntime=r}catch(a){Function("r","regeneratorRuntime = r")(r)}},9748:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("deb3"),u=n("b818"),c=n("54ef"),l=n("35c9");const d=Object(c.a)({avgPool_:function avgPool_(e,t,n,c,d){const p=Object(s.a)(e,"x","avgPool","float32");o.b(u.h(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let h=p,f=!1;3===p.rank&&(f=!0,h=Object(l.a)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),o.b(4===h.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${h.rank}.`)),null!=d&&o.b(o.v(c),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${d} but got pad ${c}.`));const m={x:h},g={filterSize:t,strides:n,pad:c,dimRoundingMode:d};let b=r.a.runKernel(a.o,m,g);return b=Object(i.a)(b,p.dtype),f?Object(l.a)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},9847:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));const r={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},"9bdd":function(e,t,n){var r=n("825a"),a=n("2a62");e.exports=function(e,t,n,s){try{return s?t(r(n)[0],n[1]):t(n)}catch(o){throw a(e),o}}},"9bf2":function(e,t,n){var r=n("83ab"),a=n("0cfb"),s=n("825a"),o=n("c04ea"),i=Object.defineProperty;t.f=r?i:function defineProperty(e,t,n){if(s(e),t=o(t,!0),s(n),a)try{return i(e,t,n)}catch(r){}if("get"in n||"set"in n)throw TypeError("Accessors not supported");return"value"in n&&(e[t]=n.value),e}},"9e38":function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({elu_:function elu_(e){const t={x:Object(s.a)(e,"x","elu")};return r.a.runKernel(a.V,t)}})},"9e7b":function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}]},"9ed3":function(e,t,n){"use strict";var r=n("ae93").IteratorPrototype,a=n("7c73"),s=n("5c6c"),o=n("d44e"),i=n("3f8c"),returnThis=function(){return this};e.exports=function(e,t,n){var u=t+" Iterator";return e.prototype=a(r,{next:s(1,n)}),o(e,u,!1,!0),i[u]=returnThis,e}},"9f7f":function(e,t,n){"use strict";var r=n("d039");function RE(e,t){return RegExp(e,t)}t.UNSUPPORTED_Y=r((function(){var e=RE("a","y");return e.lastIndex=2,null!=e.exec("abcd")})),t.BROKEN_CARET=r((function(){var e=RE("^r","gy");return e.lastIndex=2,null!=e.exec("str")}))},"9fe6":function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("b818"),u=n("54ef"),c=n("35c9");const l=Object(u.a)({maxPool_:function maxPool_(e,t,n,u,l){const d=Object(s.a)(e,"x","maxPool");let p=d,h=!1;3===d.rank&&(h=!0,p=Object(c.a)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),o.b(4===p.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${p.rank}.`)),o.b(i.h(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=l&&o.b(o.v(u),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${l} but got pad ${u}.`));const f={x:p},m={filterSize:t,strides:n,pad:u,dimRoundingMode:l},g=r.a.runKernel(a.Ib,f,m);return h?Object(c.a)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},"9ffd":function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({softplus_:function softplus_(e){const t={x:Object(s.a)(e,"x","softplus")};return r.a.runKernel(a.Fc,t)}})},a009:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),o=n("a3f7"),i=n("54ef");const u=Object(i.a)({sub_:function sub_(e,t){let n=Object(o.a)(e,"a","sub"),i=Object(o.a)(t,"b","sub");[n,i]=Object(s.makeTypesMatch)(n,i);const u={a:n,b:i};return r.a.runKernel(a.Oc,u)}})},a082:function(e,t,n){(function(e){var r;!function(e,a,s){function XorGen(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function copy(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function impl(e,t){var n=new XorGen(e),r=t&&t.state,prng=function(){return(n.next()>>>0)/4294967296};return prng.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},prng.int32=n.next,prng.quick=prng,r&&("object"==typeof r&&copy(r,n),prng.state=function(){return copy(n,{})}),prng}a&&a.exports?a.exports=impl:n("07d6")&&n("3c35")?void 0===(r=function(){return impl}.call(t,n,t,a))||(a.exports=r):this.tychei=impl}(0,e,n("07d6"))}).call(this,n("62e4")(e))},a09b:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({zerosLike_:function zerosLike_(e){const t={x:Object(s.a)(e,"x","zerosLike")};return r.a.runKernel(a.Zc,t)}})},a34f:function(e,t,n){"use strict";n.d(t,"c",(function(){return validateUpdateShape})),n.d(t,"b",(function(){return validateInput})),n.d(t,"a",(function(){return calculateShapes}));var r=n("6ad5");function validateUpdateShape(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let o=0;o<a;++o)if(n.shape[o]!==t.shape[o])throw new Error(s+` updates.shape[${o}] (${n.shape[o]}) != indices.shape[${o}] (${t.shape[o]}).`);for(let o=0;o<n.rank-a;++o)if(n.shape[o+a]!==e[o+r])throw new Error(s+` updates.shape[${o+a}] (${n.shape[o+a]}) != shape[${o+a}] (${e[o+a]})`)}function validateInput(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}validateUpdateShape(n,t,e)}function calculateShapes(e,t,n){const a=t.shape.length,s=a>1?t.shape[a-1]:1,o=n.length;let i=1;for(let r=s;r<o;++r)i*=n[r];const u=s<1?1:s;return{sliceRank:s,numUpdates:Object(r.O)(t.shape)/u,sliceSize:i,strides:[...Object(r.j)(n.slice(0,s)),1],outputSize:Object(r.O)(n)}}},a374:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({acos_:function acos_(e){const t={x:Object(s.a)(e,"x","acos")};return r.a.runKernel(a.b,t)}})},a3f7:function(e,t,n){"use strict";n.d(t,"c",(function(){return inferShape})),n.d(t,"a",(function(){return convertToTensor})),n.d(t,"b",(function(){return convertToTensorArray}));var r=n("6ae2"),a=n("b333"),s=n("34d7"),o=n("6ad5"),i=n("eb7e");function inferShape(e,t){let n=e;if(Object(o.A)(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||Object(o.A)(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Object(a.b)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&deepAssertShapeConsistency(e,r,[]),r}function deepAssertShapeConsistency(e,t,n){if(n=n||[],!Array.isArray(e)&&!Object(o.A)(e))return void Object(o.b)(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));Object(o.b)(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),Object(o.b)(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let a=0;a<e.length;++a)deepAssertShapeConsistency(e[a],r,n.concat(a))}function assertDtype(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function convertToTensor(e,t,n,a="numeric"){if(e instanceof s.a)return assertDtype(a,e.dtype,t,n),e;let u=Object(o.r)(e);if("string"!==u&&["bool","int32","float32"].indexOf(a)>=0&&(u=a),assertDtype(a,u,t,n),null==e||!Object(o.A)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const c=inferShape(e,u);Object(o.A)(e)||Array.isArray(e)||(e=[e]);const l="string"!==u?Object(i.toTypedArray)(e,u):Object(o.m)(e,[],!0);return r.a.makeTensor(l,c,u)}function convertToTensorArray(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>convertToTensor(e,`${t}[${a}]`,n,r)))}},a430:function(e,t,n){var r=n("6166"),a=n("7feb"),s=n("df8b"),o=n("3e44"),i=n("e6fc"),u=n("a082"),c=n("f7f1");c.alea=r,c.xor128=a,c.xorwow=s,c.xorshift7=o,c.xor4096=i,c.tychei=u,e.exports=c},a49d:function(e,t,n){var r;!function(a,s){var o,i=(0,eval)("this"),u=256,c=s.pow(u,6),l=s.pow(2,52),d=2*l,p=255;function seedrandom(e,t,n){var r=[],p=mixkey(flatten((t=1==t?{entropy:!0}:t||{}).entropy?[e,tostring(a)]:null==e?function autoseed(){try{var e;return o&&(e=o.randomBytes)?e=e(u):(e=new Uint8Array(u),(i.crypto||i.msCrypto).getRandomValues(e)),tostring(e)}catch(r){var t=i.navigator,n=t&&t.plugins;return[+new Date,i,n,i.screen,tostring(a)]}}():e,3),r),h=new ARC4(r),prng=function(){for(var e=h.g(6),t=c,n=0;e<l;)e=(e+n)*u,t*=u,n=h.g(1);for(;e>=d;)e/=2,t/=2,n>>>=1;return(e+n)/t};return prng.int32=function(){return 0|h.g(4)},prng.quick=function(){return h.g(4)/4294967296},prng.double=prng,mixkey(tostring(h.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&copy(r,h),e.state=function(){return copy(h,{})}),n?(s.random=e,t):e})(prng,p,"global"in t?t.global:this==s,t.state)}function ARC4(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<u;)o[a]=a++;for(a=0;a<u;a++)o[a]=o[s=p&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=p&a+1],n=n*u+o[p&(o[a]=o[s=p&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(u)}function copy(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function flatten(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(flatten(e[n],t-1))}catch(s){}return r.length?r:"string"==a?e:e+"\0"}function mixkey(e,t){for(var n,r=e+"",a=0;a<r.length;)t[p&a]=p&(n^=19*t[p&a])+r.charCodeAt(a++);return tostring(t)}function tostring(e){return String.fromCharCode.apply(0,e)}if(s.seedrandom=seedrandom,mixkey(s.random(),a),e.exports){e.exports=seedrandom;try{o=n(3)}catch(h){}}else void 0===(r=function(){return seedrandom}.call(t,n,t,e))||(e.exports=r)}([],Math)},a49e:function(e,t,n){(function(e){var r;!function(e,a,s){function XorGen(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function copy(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function impl(e,t){var n=new XorGen(e),r=t&&t.state,prng=function(){return(n.next()>>>0)/4294967296};return prng.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},prng.int32=n.next,prng.quick=prng,r&&("object"==typeof r&&copy(r,n),prng.state=function(){return copy(n,{})}),prng}a&&a.exports?a.exports=impl:n("07d6")&&n("3c35")?void 0===(r=function(){return impl}.call(t,n,t,a))||(a.exports=r):this.xorwow=impl}(0,e,n("07d6"))}).call(this,n("62e4")(e))},a4d3:function(e,t,n){"use strict";var r=n("23e7"),a=n("da84"),s=n("d066"),o=n("c430"),i=n("83ab"),u=n("4930"),c=n("fdbf"),l=n("d039"),d=n("5135"),p=n("e8b5"),h=n("861d"),f=n("825a"),m=n("7b0b"),g=n("fc6a"),b=n("c04ea"),y=n("5c6c"),x=n("7c73"),v=n("df75"),k=n("241c"),w=n("057f"),O=n("7418"),_=n("06cf"),I=n("9bf2"),S=n("d1e7"),N=n("9112"),C=n("6eeb"),T=n("5692"),A=n("f772"),E=n("d012"),j=n("90e3"),R=n("b622"),$=n("e538"),D=n("746f"),z=n("d44e"),P=n("69f3"),L=n("b727").forEach,M=A("hidden"),B="Symbol",V=R("toPrimitive"),W=P.set,U=P.getterFor(B),G=Object.prototype,H=a.Symbol,K=s("JSON","stringify"),q=_.f,X=I.f,J=w.f,Y=S.f,Z=T("symbols"),Q=T("op-symbols"),ee=T("string-to-symbol-registry"),te=T("symbol-to-string-registry"),ne=T("wks"),re=a.QObject,ae=!re||!re.prototype||!re.prototype.findChild,se=i&&l((function(){return 7!=x(X({},"a",{get:function(){return X(this,"a",{value:7}).a}})).a}))?function(e,t,n){var r=q(G,t);r&&delete G[t],X(e,t,n),r&&e!==G&&X(G,t,r)}:X,wrap=function(e,t){var n=Z[e]=x(H.prototype);return W(n,{type:B,tag:e,description:t}),i||(n.description=t),n},oe=c?function(e){return"symbol"==typeof e}:function(e){return Object(e)instanceof H},ie=function defineProperty(e,t,n){e===G&&ie(Q,t,n),f(e);var r=b(t,!0);return f(n),d(Z,r)?(n.enumerable?(d(e,M)&&e[M][r]&&(e[M][r]=!1),n=x(n,{enumerable:y(0,!1)})):(d(e,M)||X(e,M,y(1,{})),e[M][r]=!0),se(e,r,n)):X(e,r,n)},ue=function defineProperties(e,t){f(e);var n=g(t),r=v(n).concat(pe(n));return L(r,(function(t){i&&!ce.call(n,t)||ie(e,t,n[t])})),e},ce=function propertyIsEnumerable(e){var t=b(e,!0),n=Y.call(this,t);return!(this===G&&d(Z,t)&&!d(Q,t))&&(!(n||!d(this,t)||!d(Z,t)||d(this,M)&&this[M][t])||n)},le=function getOwnPropertyDescriptor(e,t){var n=g(e),r=b(t,!0);if(n!==G||!d(Z,r)||d(Q,r)){var a=q(n,r);return!a||!d(Z,r)||d(n,M)&&n[M][r]||(a.enumerable=!0),a}},de=function getOwnPropertyNames(e){var t=J(g(e)),n=[];return L(t,(function(e){d(Z,e)||d(E,e)||n.push(e)})),n},pe=function getOwnPropertySymbols(e){var t=e===G,n=J(t?Q:g(e)),r=[];return L(n,(function(e){!d(Z,e)||t&&!d(G,e)||r.push(Z[e])})),r};(u||(C((H=function Symbol(){if(this instanceof H)throw TypeError("Symbol is not a constructor");var e=arguments.length&&void 0!==arguments[0]?String(arguments[0]):void 0,t=j(e),setter=function(e){this===G&&setter.call(Q,e),d(this,M)&&d(this[M],t)&&(this[M][t]=!1),se(this,t,y(1,e))};return i&&ae&&se(G,t,{configurable:!0,set:setter}),wrap(t,e)}).prototype,"toString",(function toString(){return U(this).tag})),C(H,"withoutSetter",(function(e){return wrap(j(e),e)})),S.f=ce,I.f=ie,_.f=le,k.f=w.f=de,O.f=pe,$.f=function(e){return wrap(R(e),e)},i&&(X(H.prototype,"description",{configurable:!0,get:function description(){return U(this).description}}),o||C(G,"propertyIsEnumerable",ce,{unsafe:!0}))),r({global:!0,wrap:!0,forced:!u,sham:!u},{Symbol:H}),L(v(ne),(function(e){D(e)})),r({target:B,stat:!0,forced:!u},{for:function(e){var t=String(e);if(d(ee,t))return ee[t];var n=H(t);return ee[t]=n,te[n]=t,n},keyFor:function keyFor(e){if(!oe(e))throw TypeError(e+" is not a symbol");if(d(te,e))return te[e]},useSetter:function(){ae=!0},useSimple:function(){ae=!1}}),r({target:"Object",stat:!0,forced:!u,sham:!i},{create:function create(e,t){return void 0===t?x(e):ue(x(e),t)},defineProperty:ie,defineProperties:ue,getOwnPropertyDescriptor:le}),r({target:"Object",stat:!0,forced:!u},{getOwnPropertyNames:de,getOwnPropertySymbols:pe}),r({target:"Object",stat:!0,forced:l((function(){O.f(1)}))},{getOwnPropertySymbols:function getOwnPropertySymbols(e){return O.f(m(e))}}),K)&&r({target:"JSON",stat:!0,forced:!u||l((function(){var e=H();return"[null]"!=K([e])||"{}"!=K({a:e})||"{}"!=K(Object(e))}))},{stringify:function stringify(e,t,n){for(var r,a=[e],s=1;arguments.length>s;)a.push(arguments[s++]);if(r=t,(h(t)||void 0!==e)&&!oe(e))return p(t)||(t=function(e,t){if("function"==typeof r&&(t=r.call(this,e,t)),!oe(t))return t}),a[1]=t,K.apply(null,a)}});H.prototype[V]||N(H.prototype,V,H.prototype.valueOf),z(H,B),E[M]=!0},a5aa:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),o=n("a3f7"),i=n("54ef");const u=Object(i.a)({mul_:function mul_(e,t){let n=Object(o.a)(e,"a","mul"),i=Object(o.a)(t,"b","mul");[n,i]=Object(s.makeTypesMatch)(n,i);const u={a:n,b:i};return r.a.runKernel(a.Ub,u)}})},a630:function(e,t,n){var r=n("23e7"),a=n("4df4");r({target:"Array",stat:!0,forced:!n("1c7e")((function(e){Array.from(e)}))},{from:a})},a691:function(e,t){var n=Math.ceil,r=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?r:n)(e)}},a780:function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n("0280"),a=n("a3f7");const s=async function whereAsync_(e){const t=Object(a.a)(e,"condition","whereAsync","bool"),n=await t.data(),s=Object(r.a)(t.shape,n);return e!==t&&t.dispose(),s}},a80f:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},aa69:function(e,t,n){"use strict";n.r(t);var r={};n.r(r),n.d(r,"inputLayer",(function(){return exports_layers_inputLayer})),n.d(r,"elu",(function(){return exports_layers_elu})),n.d(r,"reLU",(function(){return reLU})),n.d(r,"leakyReLU",(function(){return leakyReLU})),n.d(r,"prelu",(function(){return exports_layers_prelu})),n.d(r,"softmax",(function(){return exports_layers_softmax})),n.d(r,"thresholdedReLU",(function(){return thresholdedReLU})),n.d(r,"conv1d",(function(){return exports_layers_conv1d})),n.d(r,"conv2d",(function(){return exports_layers_conv2d})),n.d(r,"conv2dTranspose",(function(){return conv2dTranspose})),n.d(r,"conv3d",(function(){return exports_layers_conv3d})),n.d(r,"separableConv2d",(function(){return separableConv2d})),n.d(r,"cropping2D",(function(){return cropping2D})),n.d(r,"upSampling2d",(function(){return upSampling2d})),n.d(r,"depthwiseConv2d",(function(){return exports_layers_depthwiseConv2d})),n.d(r,"activation",(function(){return exports_layers_activation})),n.d(r,"dense",(function(){return dense})),n.d(r,"dropout",(function(){return exports_layers_dropout})),n.d(r,"spatialDropout1d",(function(){return spatialDropout1d})),n.d(r,"flatten",(function(){return exports_layers_flatten})),n.d(r,"repeatVector",(function(){return repeatVector})),n.d(r,"reshape",(function(){return exports_layers_reshape})),n.d(r,"permute",(function(){return permute})),n.d(r,"embedding",(function(){return embedding})),n.d(r,"add",(function(){return exports_layers_add})),n.d(r,"average",(function(){return exports_layers_average})),n.d(r,"concatenate",(function(){return exports_layers_concatenate})),n.d(r,"maximum",(function(){return exports_layers_maximum})),n.d(r,"minimum",(function(){return exports_layers_minimum})),n.d(r,"multiply",(function(){return exports_layers_multiply})),n.d(r,"dot",(function(){return exports_layers_dot})),n.d(r,"batchNormalization",(function(){return exports_layers_batchNormalization})),n.d(r,"layerNormalization",(function(){return layerNormalization})),n.d(r,"zeroPadding2d",(function(){return zeroPadding2d})),n.d(r,"averagePooling1d",(function(){return averagePooling1d})),n.d(r,"avgPool1d",(function(){return avgPool1d})),n.d(r,"avgPooling1d",(function(){return avgPooling1d})),n.d(r,"averagePooling2d",(function(){return averagePooling2d})),n.d(r,"avgPool2d",(function(){return avgPool2d})),n.d(r,"avgPooling2d",(function(){return avgPooling2d})),n.d(r,"averagePooling3d",(function(){return averagePooling3d})),n.d(r,"avgPool3d",(function(){return avgPool3d})),n.d(r,"avgPooling3d",(function(){return avgPooling3d})),n.d(r,"globalAveragePooling1d",(function(){return globalAveragePooling1d})),n.d(r,"globalAveragePooling2d",(function(){return globalAveragePooling2d})),n.d(r,"globalMaxPooling1d",(function(){return globalMaxPooling1d})),n.d(r,"globalMaxPooling2d",(function(){return globalMaxPooling2d})),n.d(r,"maxPooling1d",(function(){return maxPooling1d})),n.d(r,"maxPooling2d",(function(){return maxPooling2d})),n.d(r,"maxPooling3d",(function(){return maxPooling3d})),n.d(r,"gru",(function(){return gru})),n.d(r,"gruCell",(function(){return gruCell})),n.d(r,"lstm",(function(){return lstm})),n.d(r,"lstmCell",(function(){return lstmCell})),n.d(r,"simpleRNN",(function(){return simpleRNN})),n.d(r,"simpleRNNCell",(function(){return simpleRNNCell})),n.d(r,"convLstm2d",(function(){return convLstm2d})),n.d(r,"convLstm2dCell",(function(){return convLstm2dCell})),n.d(r,"rnn",(function(){return exports_layers_rnn})),n.d(r,"stackedRNNCells",(function(){return stackedRNNCells})),n.d(r,"bidirectional",(function(){return bidirectional})),n.d(r,"timeDistributed",(function(){return timeDistributed})),n.d(r,"globalMaxPool1d",(function(){return ba})),n.d(r,"globalMaxPool2d",(function(){return ya})),n.d(r,"maxPool1d",(function(){return xa})),n.d(r,"maxPool2d",(function(){return va})),n.d(r,"Layer",(function(){return topology_Layer})),n.d(r,"RNN",(function(){return recurrent_RNN})),n.d(r,"RNNCell",(function(){return recurrent_RNNCell})),n.d(r,"input",(function(){return exports_input})),n.d(r,"gaussianNoise",(function(){return gaussianNoise})),n.d(r,"gaussianDropout",(function(){return gaussianDropout})),n.d(r,"alphaDropout",(function(){return alphaDropout})),n.d(r,"masking",(function(){return masking}));var a={};n.r(a),n.d(a,"simpleAbsImpl",(function(){return simpleAbsImpl})),n.d(a,"addImpl",(function(){return La})),n.d(a,"bincountImpl",(function(){return bincountImpl})),n.d(a,"bincountReduceImpl",(function(){return bincountReduceImpl})),n.d(a,"ceilImpl",(function(){return ws})),n.d(a,"concatImpl",(function(){return concatImpl})),n.d(a,"expImpl",(function(){return co})),n.d(a,"expm1Impl",(function(){return fo})),n.d(a,"floorImpl",(function(){return Eo})),n.d(a,"gatherV2Impl",(function(){return gatherV2Impl})),n.d(a,"greaterImpl",(function(){return Bo})),n.d(a,"lessImpl",(function(){return ei})),n.d(a,"linSpaceImpl",(function(){return linSpaceImpl})),n.d(a,"logImpl",(function(){return ii})),n.d(a,"maxImpl",(function(){return maxImpl})),n.d(a,"maximumImpl",(function(){return Oi})),n.d(a,"minimumImpl",(function(){return $i})),n.d(a,"multiplyImpl",(function(){return bo})),n.d(a,"negImpl",(function(){return negImpl})),n.d(a,"notEqualImpl",(function(){return Yi})),n.d(a,"prodImpl",(function(){return prodImpl})),n.d(a,"rangeImpl",(function(){return rangeImpl})),n.d(a,"rsqrtImpl",(function(){return vu})),n.d(a,"sliceImpl",(function(){return sliceImpl})),n.d(a,"squaredDifferenceImpl",(function(){return Hu})),n.d(a,"stridedSliceImpl",(function(){return stridedSliceImpl})),n.d(a,"subImpl",(function(){return _o})),n.d(a,"tileImpl",(function(){return tileImpl})),n.d(a,"topKImpl",(function(){return topKImpl})),n.d(a,"transposeImpl",(function(){return transposeImpl})),n.d(a,"uniqueImpl",(function(){return uniqueImpl}));n("a4d3"),n("e01a"),n("d3b7"),n("d28b"),n("3ca3"),n("ddb0");n("fb6a"),n("b0c0"),n("a630");function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function _slicedToArray(e,t){return function _arrayWithHoles(e){if(Array.isArray(e))return e}(e)||function _iterableToArrayLimit(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,a=!1,s=void 0;try{for(var o,i=e[Symbol.iterator]();!(r=(o=i.next()).done)&&(n.push(o.value),!t||n.length!==t);r=!0);}catch(u){a=!0,s=u}finally{try{r||null==i.return||i.return()}finally{if(a)throw s}}return n}}(e,t)||function _unsupportedIterableToArray(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(e,t):void 0}}(e,t)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function asyncGeneratorStep(e,t,n,r,a,s,o){try{var i=e[s](o),u=i.value}catch(c){return void n(c)}i.done?t(u):Promise.resolve(u).then(r,a)}function _asyncToGenerator(e){return function(){var t=this,n=arguments;return new Promise((function(r,a){var s=e.apply(t,n);function _next(e){asyncGeneratorStep(s,r,a,_next,_throw,"next",e)}function _throw(e){asyncGeneratorStep(s,r,a,_next,_throw,"throw",e)}_next(void 0)}))}}n("ac1f"),n("1276"),n("96cf");var s=n("fa11"),o=n("c05b"),i=n("deb3"),u=n("a5aa"),c=n("2fb1");const l={kernelName:o.a,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(u.a)(e,Object(c.a)(Object(i.a)(n,"float32"),-1))}}};var d=n("c77c"),p=n("3bb7"),h=n("015f"),f=n("163a"),m=n("93b2"),g=n("a009");const b={kernelName:o.b,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Object(m.a)(Object(i.a)(n,"float32")),r=Object(f.a)(Object(g.a)(Object(h.a)(1),t));return Object(p.a)(Object(d.a)(e,r))}}}},y={kernelName:o.c,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Object(f.a)(Object(g.a)(Object(m.a)(Object(i.a)(n,"float32")),1));return Object(d.a)(e,t)}}}};var x=n("526f"),v=n("35c9"),k=n("e053");const w={kernelName:o.d,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=x.a(n.shape,r.shape);return{a:()=>{let t=e;const r=x.c(n.shape,a);return r.length>0&&(t=Object(k.a)(t,r)),Object(v.a)(t,n.shape)},b:()=>{let t=e;const n=x.c(r.shape,a);return n.length>0&&(t=Object(k.a)(t,n)),Object(v.a)(t,r.shape)}}}},O={kernelName:o.e,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}};var _=n("a09b");const I={kernelName:o.h,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(_.a)(n)}}},S={kernelName:o.i,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(_.a)(n)}}},N={kernelName:o.j,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(d.a)(e,Object(f.a)(Object(g.a)(Object(h.a)(1),Object(m.a)(Object(i.a)(n,"float32")))))}}};var C=n("9117");const T={kernelName:o.k,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Object(f.a)(Object(C.a)(Object(h.a)(1),Object(m.a)(Object(i.a)(n,"float32"))));return Object(d.a)(e,t)}}}},A={kernelName:o.m,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Object(x.a)(n.shape,r.shape);return{a:()=>{const t=Object(C.a)(Object(m.a)(n),Object(m.a)(r));let s=Object(u.a)(e,Object(d.a)(r,t));const o=Object(x.c)(n.shape,a);return o.length>0&&(s=Object(k.a)(s,o)),Object(v.a)(s,n.shape)},b:()=>{const t=Object(C.a)(Object(m.a)(n),Object(m.a)(r));let s=Object(p.a)(Object(u.a)(e,Object(d.a)(n,t)));const o=Object(x.c)(r.shape,a);return o.length>0&&(s=Object(k.a)(s,o)),Object(v.a)(s,r.shape)}}}},E={kernelName:o.l,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(d.a)(e,Object(C.a)(Object(m.a)(Object(i.a)(n,"float32")),1))}}},j={kernelName:o.n,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(d.a)(e,Object(g.a)(Object(h.a)(1),Object(m.a)(Object(i.a)(n,"float32"))))}}};var R=n("6ae2"),$=n("a3f7"),D=n("6ad5"),z=n("54ef");const P=Object(z.a)({avgPool3dGrad_:function avgPool3dGrad_(e,t,n,r,a,s){const i=Object($.a)(e,"dy","avgPool3dGrad"),u=Object($.a)(t,"input","avgPool3dGrad");let c=i,l=u,d=!1;4===u.rank&&(d=!0,c=Object(v.a)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),l=Object(v.a)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),D.b(5===c.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),D.b(5===l.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`)),null!=s&&D.b(D.v(a),(()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${s} but got pad ${a}.`));const p={dy:c,input:l},h={filterSize:n,strides:r,pad:a,dimRoundingMode:s},f=R.a.runKernel(o.q,p,h);return d?Object(v.a)(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),L={kernelName:o.p,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:o,dimRoundingMode:i}=n;return{x:()=>P(e,r,a,s,o,i)}}};const M=Object(z.a)({avgPoolGrad_:function avgPoolGrad_(e,t,n,r,a){const s=Object($.a)(e,"dy","avgPoolGrad"),i=Object($.a)(t,"input","avgPoolGrad");D.b(i.rank===s.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`));let u=i,c=s,l=!1;3===i.rank&&(l=!0,u=Object(v.a)(i,[1,i.shape[0],i.shape[1],i.shape[2]]),c=Object(v.a)(s,[1,s.shape[0],s.shape[1],s.shape[2]])),D.b(4===c.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${c.rank}.`)),D.b(4===u.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${u.rank}.`));const d={dy:c,input:u},p={filterSize:n,strides:r,pad:a},h=R.a.runKernel(o.r,d,p);return l?Object(v.a)(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),B={kernelName:o.o,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:o}=n;return{x:()=>M(e,r,a,s,o)}}};var V=n("487b");const W={kernelName:o.s,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,a]=t,{transposeA:s,transposeB:o}=n;return s||o?!s&&o?{a:()=>Object(V.a)(e,a,!1,!1),b:()=>Object(V.a)(e,r,!0,!1)}:s&&!o?{a:()=>Object(V.a)(a,e,!1,!0),b:()=>Object(V.a)(r,e,!1,!1)}:{a:()=>Object(V.a)(a,e,!0,!0),b:()=>Object(V.a)(e,r,!0,!0)}:{a:()=>Object(V.a)(e,a,!1,!0),b:()=>Object(V.a)(r,e,!0,!1)}}};var U=n("7580");const G={kernelName:o.t,gradFunc:(e,t,n)=>{const{blockShape:r,crops:a}=n;return{x:()=>Object(U.a)(e,r,a)}}},H={kernelName:o.v,gradFunc:(e,t,n)=>{const r=n,a=r.inputShape,s=r.shape,o=Array.from(s);for(let u=a.length-1;u>=0;u--)if(a[u]===s[u])o[u]=1;else if(1!==a[u])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);const i=[];for(let u=0;u<o.length;u++)o[u]>1&&i.push(u);return{x:()=>Object(k.a)(e,i,!0)}}},K={kernelName:o.w,gradFunc:e=>({x:()=>e.clone()})},q={kernelName:o.x,gradFunc:e=>({x:()=>Object(_.a)(e)})};var X=n("bb2d"),J=n("b21c"),Y=n("e333"),Z=n("6791");const Q={kernelName:o.y,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>Object(Z.a)(Object(Y.a)(Object(X.a)(r,a),Object(J.a)(r,s)),e,Object(_.a)(e))}}},ee={kernelName:o.A,inputsToSave:["x"],gradFunc:l.gradFunc};var te=n("45bb");const ne={kernelName:o.B,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:a}=n,s=Object(D.I)(a,t[0].shape)[0],o=r.map((e=>e[s]));return Object(te.a)(e,o,s).map((e=>()=>e))}};var re=n("0f6f"),ae=n("73d3"),se=n("b818");const oe={kernelName:o.C,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{dilations:s,strides:o,pad:i,dataFormat:u}=n;return D.b(se.i(s),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`)),{x:()=>Object(ae.a)(r.shape,e,a,o,i,u),filter:()=>Object(re.a)(r,e,a.shape,o,i,u)}}};var ie=n("dd7e");const ue={kernelName:o.E,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{strides:s,pad:o,dataFormat:i,dimRoundingMode:u}=n;return{dy:()=>Object(ie.a)(e,a,s,o,i,1,u),filter:()=>Object(re.a)(e,r,a.shape,s,o,i,u)}}};const ce=Object(z.a)({conv3DBackpropFilter_:function conv3DBackpropFilter_(e,t,n,r,a){let s=e;4===e.rank&&(s=Object(v.a)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=Object(v.a)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),D.b(5===s.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`)),D.b(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),D.b(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),D.b(s.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`)),D.b(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const u={x:s,dy:i},c={strides:r,pad:a,filterShape:n};return R.a.runKernel(o.G,u,c)}});const le=Object(z.a)({conv3DBackpropInput_:function conv3DBackpropInput_(e,t,n,r,a){D.b(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let s=e,i=t,u=!1;4===t.rank&&(u=!0,i=Object(v.a)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);const c=s[4],l=i.shape[4];D.b(5===s.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`)),D.b(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),D.b(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),D.b(c===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[3]}.`)),D.b(l===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`));const d={dy:i,filter:n},p={pad:a,strides:r,inputShape:s},h=R.a.runKernel(o.H,d,p);return u?Object(v.a)(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),de={kernelName:o.F,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s}=n;D.b(Object(se.i)(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[o,i]=t;return{x:()=>le(o.shape,e,i,a,s),filter:()=>ce(o,e,i.shape,a,s)}}};var pe=n("6932");const he={kernelName:o.I,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(u.a)(Object(p.a)(Object(pe.a)(Object(i.a)(n,"float32"))),e)}}};var fe=n("5dc4");const ge={kernelName:o.J,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(u.a)(Object(fe.a)(Object(i.a)(n,"float32")),e)}}};var be=n("36e5"),ye=n("1e68"),xe=n("c912");const ve={kernelName:o.L,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a,exclusive:s,reverse:o}=n;return{x:()=>{const t=Object(be.f)([a],r.rank);let n=Object(ye.a)(e,a,s,!o);return null!=t&&(n=Object(xe.a)(n,t)),n}}}};var ke=n("6926"),we=n("8cb0");const Oe={kernelName:o.O,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s,dimRoundingMode:o}=n,i=null==r?[1,1]:r;D.b(se.i(i),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`));const[u,c]=t;return D.b(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),D.b(4===c.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`)),D.b(u.shape[3]===c.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`)),D.b(se.h(a,i),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${i}'.`)),null!=o&&D.b(D.v(s),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${s}.`)),{x:()=>Object(we.a)(u.shape,e,c,a,s,r,o),filter:()=>Object(ke.a)(u,e,c.shape,a,s,r,o)}}},_e={kernelName:o.S,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,s={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>R.a.runKernel(o.U,s,n),filter:()=>R.a.runKernel(o.T,i,n)}}},Ie={kernelName:o.V,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>R.a.runKernel(o.W,r)}}};var Se=n("4f20");const Ne={kernelName:o.Y,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Object(u.a)(Object(Se.a)(Object(p.a)(Object(m.a)(n))),2/Math.sqrt(Math.PI));return{x:()=>Object(u.a)(e,r)}}},Ce={kernelName:o.Z,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(u.a)(e,n)}}},Te={kernelName:o.ab,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>Object(v.a)(e,n.shape)}}},Ae={kernelName:o.bb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(u.a)(e,Object(Se.a)(n))}}},Ee={kernelName:o.fb,gradFunc:e=>({x:()=>Object(_.a)(e)})},je={kernelName:o.gb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Object(x.a)(n.shape,r.shape);return{a:()=>{const t=Object(d.a)(e,Object(i.a)(r,"float32")),s=Object(x.c)(n.shape,a);return s.length>0?Object(v.a)(Object(k.a)(t,s),n.shape):t},b:()=>{let t=Object(u.a)(e,Object(i.a)(n,"float32"));const s=Object(x.c)(r.shape,a);s.length>0&&(t=Object(v.a)(Object(k.a)(t,s),r.shape));const o=Object(m.a)(r);return Object(p.a)(Object(d.a)(t,Object(i.a)(o,"float32")))}}}};var Re=n("5f2a"),$e=n("8d71");const Fe={kernelName:o.ib,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[a,s,o,i]=t,c=null==i?Object(h.a)(1):i,l=Object(x.c)(s.shape,a.shape),d=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)d.push(a.shape[e]);d.push(1)}const p=Object(g.a)(a,s),f=Object(u.a)(e,c),m=Object(Re.a)(Object(C.a)(o,Object(h.a)(r))),b=Object(u.a)(Object(u.a)(Object(u.a)(m,m),m),Object(h.a)(-.5));return{x:()=>1===s.rank?Object(v.a)(Object(u.a)(Object(u.a)(e,Object($e.a)(Object(v.a)(m,[1,1,1,s.shape[0]]),d)),c),a.shape):Object(v.a)(Object(u.a)(Object(u.a)(e,m),c),a.shape),mean:()=>{let e=Object(u.a)(Object(u.a)(m,Object(h.a)(-1)),f);return 1===s.rank&&(e=Object(k.a)(e,l)),Object(v.a)(e,s.shape)},variance:()=>{let e=Object(u.a)(Object(u.a)(b,p),f);return 1===s.rank&&(e=Object(k.a)(e,l)),Object(v.a)(e,s.shape)},scale:()=>{const t=Object(u.a)(p,m);let n=Object(u.a)(e,t);return 1===s.rank&&(n=Object(k.a)(n,l)),Object(v.a)(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=Object(k.a)(t,l)),Object(v.a)(t,s.shape)}}}};var De=n("53f2");const ze={kernelName:o.mb,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,a]=t,{axis:s}=n,o=Object(D.I)(s,r.shape)[0];return{x:()=>{const t=r.shape,n=a.size,i=t.slice(0,o),u=i.length,c=t.slice(s,t.length).slice(1),l=c.length,d=arrayRange(0,u),p=arrayRange(u+1,u+1+l),h=arrayConcat([i,[n],c]),f=Object(v.a)(e,h),m=Object(v.a)(a,[n]),g=arrayConcat([[u],d,p]),b=Object(xe.a)(f,g);let y=Object(De.a)(b,m,r.shape[o]);const x=Object(be.h)(g);return y=Object(xe.a)(y,x),y},indices:()=>a}}};function arrayRange(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function arrayConcat(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const Pe={kernelName:o.ob,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Object(_.a)(n),b:()=>Object(_.a)(r)}}},Le={kernelName:o.qb,gradFunc:e=>({x:()=>Object(i.a)(e,"float32")})},Me={kernelName:o.sb,gradFunc:e=>({x:()=>Object(_.a)(e)})},Be={kernelName:o.tb,gradFunc:e=>({x:()=>Object(_.a)(e)})},Ve={kernelName:o.ub,gradFunc:e=>({x:()=>Object(_.a)(e)})};var We=n("cef0");const Ue={kernelName:o.xb,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:a}=n,s=Object(We.a)(r,0);return{x:()=>Object(Z.a)(s,e,Object(u.a)(e,a))}}},Ge={kernelName:o.Cb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(d.a)(e,Object(C.a)(n,1))}}},He={kernelName:o.Bb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(d.a)(e,Object(i.a)(n,"float32"))}}},Ke={kernelName:o.Db,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n;return{logits:()=>{const t=Object(Se.a)(r);return Object(g.a)(e,Object(u.a)(Object(k.a)(e,a,!0),t))}}}};const qe=Object(z.a)({localResponseNormalizationBackprop_:function localResponseNormalizationBackprop_(e,t,n,r=5,a=1,s=1,i=.5){const u={x:e,y:t,dy:n},c={depthRadius:r,bias:a,alpha:s,beta:i};return R.a.runKernel(o.wb,u,c)}}),Xe={kernelName:o.vb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{depthRadius:s,bias:o,alpha:i,beta:u}=n;return{x:()=>qe(r,a,e,s,o,i,u)}}};var Je=n("b9b9");function gradForMinAndMax(e,t,n,r){return t.rank<n.rank&&(t=Object(v.a)(t,be.e(t.shape,r))),e.rank<n.rank&&(e=Object(v.a)(e,be.e(e.shape,r))),{x:()=>Object(u.a)(e,Object(i.a)(Object(Je.a)(n,t),e.dtype))}}const Ye={kernelName:o.Hb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:a}=r,s=t[0],o=gradForMinAndMax(e,t[1],s,D.I(a,s.shape));return{x:()=>o.x()}}};var Ze=n("e1fd");const Qe={kernelName:o.Nb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Object(u.a)(e,Object(i.a)(Object(X.a)(n,r),"float32")),b:()=>Object(u.a)(e,Object(i.a)(Object(Ze.a)(n,r),"float32"))}}};const et=Object(z.a)({maxPool3dGrad_:function maxPool3dGrad_(e,t,n,r,a,s,i){const u=Object($.a)(e,"dy","maxPool3dGrad"),c=Object($.a)(t,"input","maxPool3dGrad"),l=Object($.a)(n,"output","maxPool3dGrad");let d=u,p=c,h=l,f=!1;4===c.rank&&(f=!0,d=Object(v.a)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),p=Object(v.a)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),h=Object(v.a)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),D.b(5===d.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${d.rank}.`)),D.b(5===p.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${p.rank}.`)),D.b(5===h.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${h.rank}.`)),null!=i&&D.b(D.v(s),(()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const m={dy:d,input:p,output:h},g={filterSize:r,strides:a,pad:s,dimRoundingMode:i},b=R.a.runKernel(o.Kb,m,g);return f?Object(v.a)(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}}),tt={kernelName:o.Jb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:o,pad:i,dimRoundingMode:u}=n;return{x:()=>et(e,r,a,s,o,i,u)}}};const nt=Object(z.a)({maxPoolGrad_:function maxPoolGrad_(e,t,n,r,a,s,i){const u=Object($.a)(e,"dy","maxPoolGrad"),c=Object($.a)(t,"input","maxPoolGrad"),l=Object($.a)(n,"output","maxPoolGrad");D.b(c.rank===u.rank,(()=>`Rank of input (${c.rank}) does not match rank of dy (${u.rank})`)),D.b(4===u.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${u.rank}.`)),D.b(4===c.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${c.rank}.`)),null!=i&&D.b(D.v(s),(()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const d={dy:u,input:c,output:l},p={filterSize:r,strides:a,pad:s,dimRoundingMode:i};return R.a.runKernel(o.Lb,d,p)}}),rt={kernelName:o.Ib,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:o,pad:i}=n;return{x:()=>nt(e,r,a,s,o,i)}}};var at=n("c22a");const st={kernelName:o.Ob,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n,s=D.I(a,r.shape),o=Object(be.d)(r.shape,s)[1],i=D.O(o);return{x:()=>{const t=r.shape.slice();s.forEach((e=>{t[e]=1}));const n=Object(v.a)(e,t);return Object(d.a)(Object(u.a)(n,Object(at.a)(r.shape,"float32")),i)}}}},ot={kernelName:o.Pb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:a}=r,[s,o]=t,i=gradForMinAndMax(e,o,s,D.I(a,s.shape));return{x:()=>i.x()}}},it={kernelName:o.Qb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Object(u.a)(e,Object(i.a)(Object(J.a)(n,r),"float32")),b:()=>Object(u.a)(e,Object(i.a)(Object(We.a)(n,r),"float32"))}}};var ut=n("6d3c");const ct={kernelName:o.Rb,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>Object(ut.a)(e,s,r.shape)}}};var lt=n("d369");const dt={kernelName:o.Sb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Object(x.a)(n.shape,r.shape);return{a:()=>{const t=Object(x.c)(n.shape,a);return t.length>0?Object(v.a)(Object(k.a)(e,t),n.shape):e},b:()=>{const t=Object(u.a)(e,Object(p.a)(Object(lt.a)(Object(d.a)(n,r)))),s=Object(x.c)(r.shape,a);return s.length>0?Object(v.a)(Object(k.a)(t,s),r.shape):t}}}},pt={kernelName:o.Ub,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Object(x.a)(n.shape,r.shape);return{a:()=>{const t=Object(u.a)(e,Object(i.a)(r,"float32")),s=Object(x.c)(n.shape,a);return s.length>0?Object(v.a)(Object(k.a)(t,s),n.shape):t},b:()=>{const t=Object(u.a)(e,Object(i.a)(n,"float32")),s=Object(x.c)(r.shape,a);return s.length>0?Object(v.a)(Object(k.a)(t,s),r.shape):t}}}},ht={kernelName:o.Vb,gradFunc:e=>({x:()=>Object(p.a)(e)})};var ft=n("5a2c");const mt={kernelName:o.ac,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Object(ft.a)(n.shape,"float32")}}},gt={kernelName:o.bc,gradFunc:e=>({x:()=>Object(_.a)(e)})};var bt=n("3a44");const yt={kernelName:o.cc,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return Object(bt.a)(e,r).map((e=>()=>e))}},xt={kernelName:o.dc,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>Object(ut.a)(e,s,r.shape)}}};var vt=n("1359"),kt=n("c9f1");const wt={kernelName:o.ec,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,a]=t,s=n,o=r,c=x.a(s.shape,o.shape);return{a:()=>{const t=Object(i.a)(o,"float32");let n=Object(u.a)(e,Object(u.a)(t,Object(kt.a)(s,Object(g.a)(t,Object(h.a)(1)))));const r=x.c(s.shape,c);return r.length>0&&(n=Object(k.a)(n,r)),Object(v.a)(n,s.shape)},b:()=>{const t=Object(We.a)(s,0),n=Object(Z.a)(t,Object(vt.a)(s),Object(_.a)(s));let r=Object(u.a)(e,Object(u.a)(a,n));const i=x.c(o.shape,c);return i.length>0&&(r=Object(k.a)(r,i)),Object(v.a)(r,o.shape)}}}},Ot={kernelName:o.fc,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,a=Object(We.a)(n,0);return{x:()=>Object(Z.a)(a,e,Object(u.a)(e,r)),alpha:()=>{let t=Object(Z.a)(a,Object(_.a)(e),Object(u.a)(e,n));const s=Object(x.c)(r.shape,e.shape);return s.length>0&&(t=Object(k.a)(t,s)),Object(v.a)(t,r.shape)}}}},_t={kernelName:o.jc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=x.a(n.shape,r.shape);return{a:()=>{const t=Object(d.a)(e,Object(i.a)(r,"float32")),s=x.c(n.shape,a);return s.length>0?Object(v.a)(Object(k.a)(t,s),n.shape):t},b:()=>{let t=Object(u.a)(e,Object(i.a)(n,"float32"));const s=x.c(r.shape,a);s.length>0&&(t=Object(v.a)(Object(k.a)(t,s),r.shape));const o=Object(m.a)(r);return Object(p.a)(Object(d.a)(t,Object(i.a)(o,"float32")))}}}},It={kernelName:o.kc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(d.a)(e,Object(p.a)(Object(m.a)(n)))}}},St={kernelName:o.mc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Object(u.a)(Object(J.a)(n,6),Object(c.a)(n));return{x:()=>Object(u.a)(e,Object(i.a)(r,"float32"))}}},Nt={kernelName:o.lc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(u.a)(e,Object(i.a)(Object(c.a)(n),"float32"))}}},Ct={kernelName:o.nc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(v.a)(e,n.shape)}}},Tt={kernelName:o.oc,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>R.a.runKernel(o.pc,a,n)}}},At={kernelName:o.qc,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>R.a.runKernel(o.rc,a,n)}}};var Et=n("d08e");const jt={kernelName:o.sc,gradFunc:(e,t,n)=>{const{dims:r}=n,a=Object(D.I)(r,e.shape);return{x:()=>Object(Et.a)(e,a)}}},Rt={kernelName:o.uc,gradFunc:e=>({x:()=>Object(_.a)(e)})},$t={kernelName:o.vc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(p.a)(Object(d.a)(e,Object(u.a)(Object(kt.a)(n,1.5),2)))}}};var Ft=n("ef00");const Dt={kernelName:o.xc,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>Object(i.a)(Object(_.a)(n),"float32"),t:()=>Object(u.a)(e,Object(i.a)(n,e.dtype)),e:()=>Object(u.a)(e,Object(i.a)(Object(Ft.a)(n),e.dtype))}}};var zt=n("7cde");const Pt={kernelName:o.yc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Object(We.a)(n,Object(h.a)(0)),r=Object(h.a)(zt.b),a=Object(h.a)(zt.a),s=Object(u.a)(e,a),o=Object(u.a)(Object(u.a)(e,r),Object(Se.a)(Object(i.a)(n,"float32")));return Object(Z.a)(t,s,o)}}}},Lt={kernelName:o.zc,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(u.a)(e,Object(u.a)(n,Object(g.a)(Object(h.a)(1),n)))}}},Mt={kernelName:o.Ac,gradFunc:e=>({x:()=>Object(_.a)(e)})};var Bt=n("eff7");const Vt={kernelName:o.Bc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(u.a)(Object(Bt.a)(Object(i.a)(n,"float32")),e)}}};var Wt=n("c1a2");const Ut={kernelName:o.Cc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(u.a)(Object(Wt.a)(Object(i.a)(n,"float32")),e)}}};var Gt=n("0eb5"),Ht=n("5ebd");const Kt={kernelName:o.Dc,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:a,size:s}=n,o=r.shape,[i,u]=Object(Ht.parseSliceParams)(r,a,s),c=[];for(let l=0;l<e.rank;l++)c.push([i[l],o[l]-i[l]-u[l]]);return{x:()=>Object(Gt.a)(e,c)}}},qt={kernelName:o.Ec,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:a}=n,s=Object(u.a)(e,r);return{logits:()=>Object(g.a)(s,Object(u.a)(Object(k.a)(s,[a],true),r))}}};var Xt=n("ffb3");const Jt={kernelName:o.Fc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(u.a)(e,Object(Xt.a)(n))}}};var Yt=n("3b28");const Zt={kernelName:o.Gc,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:a}=n;return{x:()=>Object(Yt.a)(e,r,a)}}};var Qt=n("649e");const en={kernelName:o.Ic,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>Object(Qt.a)(e,r)}}},tn={kernelName:o.Jc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(d.a)(e,Object(u.a)(Object(f.a)(Object(i.a)(n,"float32")),2))}}},nn={kernelName:o.Kc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(u.a)(e,Object(u.a)(Object(i.a)(n,"float32"),2))}}},rn={kernelName:o.Lc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Object(h.a)(2);return{a:()=>Object(u.a)(e,Object(u.a)(a,Object(g.a)(n,r))),b:()=>Object(u.a)(e,Object(u.a)(a,Object(g.a)(r,n)))}}},an={kernelName:o.Mc,gradFunc:e=>({x:()=>Object(_.a)(e)})},sn={kernelName:o.Oc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=x.a(n.shape,r.shape);return{a:()=>{let t=e;const r=x.c(n.shape,a);return r.length>0&&(t=Object(k.a)(t,r)),Object(v.a)(t,n.shape)},b:()=>{let t=e;const n=x.c(r.shape,a);return n.length>0&&(t=Object(k.a)(t,n)),Object(v.a)(Object(p.a)(t),r.shape)}}}},on={kernelName:o.Pc,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,a=r.shape.slice(),{axis:s}=n;Object(D.I)(s,r.shape).forEach((e=>{a[e]=1}));const o=Object(v.a)(e,a),i=Object(u.a)(o,Object(at.a)(r.shape,"float32"));return{x:()=>i}}},un={kernelName:o.Qc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(d.a)(e,Object(m.a)(Object(Bt.a)(n)))}}},cn={kernelName:o.Rc,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(u.a)(Object(g.a)(Object(h.a)(1),Object(m.a)(n)),e)}}},ln={kernelName:o.Sc,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:a}=n;return{x:()=>{let t=Object(_.a)(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=Object(C.a)(t,Object(ut.a)(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=Object(C.a)(t,Object(ut.a)(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let o=0;o<a[2];++o)t=Object(C.a)(t,Object(ut.a)(e,[n*r.shape[0],s*r.shape[1],o*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let o=0;o<a[2];++o)for(let i=0;i<a[3];++i)t=Object(C.a)(t,Object(ut.a)(e,[n*r.shape[0],s*r.shape[1],o*r.shape[2],i*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},dn={kernelName:o.Vc,gradFunc:(e,t,n)=>{const r=n,{perm:a}=r,s=be.h(a);return{x:()=>Object(xe.a)(e,s)}}};var pn=n("d54d");const hn={kernelName:o.Xc,gradFunc:(e,t,n)=>{const r=n,{axis:a}=r;return{value:()=>Object(pn.a)(e,a)}}};var fn=n("dae8"),mn=n("91a3"),gn=n("09f4");const bn={kernelName:o.Yc,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function gatherDropNegatives(e,t){const n=Object(gn.a)(t,Object(_.a)(t)),r=Object(mn.a)(e,n);let a=Object(X.a)(t,Object(h.a)(0,"int32"));const s=r.rank-a.rank;for(let i=0;i<s;++i)a=Object(fn.a)(a,i+1);a=Object(Y.a)(a,Object(at.a)(r.shape,"bool"));const o=Object(_.a)(r);return Object(Z.a)(a,r,o)}(e,n)}}};const yn={kernelName:o.Zc,gradFunc:e=>({x:()=>Object(_.a)(e)})};var xn=n("73b8");const vn=[l,b,y,w,O,I,S,N,T,A,E,j,L,B,W,G,H,K,q,Q,ee,ne,ue,oe,de,he,ge,ve,Oe,_e,_t,Ie,Ne,Ce,Te,Ae,je,Ee,Fe,ze,Pe,Le,Me,Be,Ve,Ue,Ge,He,Ke,Xe,Ye,Ye,Qe,tt,rt,st,ot,it,ct,dt,pt,ht,mt,gt,yt,xt,xt,wt,Ot,It,St,Nt,Ct,Tt,At,jt,Rt,$t,Dt,Pt,Lt,Mt,Vt,Ut,Kt,qt,Jt,Zt,Zt,en,en,tn,rn,nn,an,sn,on,un,cn,ln,dn,hn,bn,yn];for(const Jf of vn)Object(xn.d)(Jf);var kn=n("8ae0"),wn=n("34d7");Object(wn.d)().prototype.abs=function(){return this.throwIfDisposed(),Object(kn.a)(this)};var On=n("a374");Object(wn.d)().prototype.acos=function(){return this.throwIfDisposed(),Object(On.a)(this)};var _n=n("4615");Object(wn.d)().prototype.acosh=function(){return this.throwIfDisposed(),Object(_n.a)(this)},Object(wn.d)().prototype.add=function(e){return this.throwIfDisposed(),Object(C.a)(this,e)};var In=n("df81");Object(wn.d)().prototype.all=function(e,t){return this.throwIfDisposed(),Object(In.a)(this,e,t)};var Sn=n("4516");Object(wn.d)().prototype.any=function(e,t){return this.throwIfDisposed(),Object(Sn.a)(this,e,t)};var Nn=n("e89f");Object(wn.d)().prototype.argMax=function(e){return this.throwIfDisposed(),Object(Nn.a)(this,e)};var Cn=n("db49");Object(wn.d)().prototype.argMin=function(e){return this.throwIfDisposed(),Object(Cn.a)(this,e)},Object(wn.d)().prototype.asScalar=function(){return this.throwIfDisposed(),Object(D.b)(1===this.size,(()=>"The array must have only 1 element.")),Object(v.a)(this,[])},Object(wn.d)().prototype.asType=function(e){return this.throwIfDisposed(),Object(i.a)(this,e)},Object(wn.d)().prototype.as1D=function(){return this.throwIfDisposed(),Object(v.a)(this,[this.size])},Object(wn.d)().prototype.as2D=function(e,t){return this.throwIfDisposed(),Object(v.a)(this,[e,t])},Object(wn.d)().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Object(v.a)(this,[e,t,n])},Object(wn.d)().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),Object(v.a)(this,[e,t,n,r])},Object(wn.d)().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),Object(v.a)(this,[e,t,n,r,a])};var Tn=n("220f");Object(wn.d)().prototype.asin=function(){return this.throwIfDisposed(),Object(Tn.a)(this)};var An=n("dc59");Object(wn.d)().prototype.asinh=function(){return this.throwIfDisposed(),Object(An.a)(this)};var En=n("7e36");Object(wn.d)().prototype.atan=function(){return this.throwIfDisposed(),Object(En.a)(this)};var jn=n("6002");Object(wn.d)().prototype.atan2=function(e){return this.throwIfDisposed(),Object(jn.a)(this,e)};var Rn=n("d1a8");Object(wn.d)().prototype.atanh=function(){return this.throwIfDisposed(),Object(Rn.a)(this)};var $n=n("9748");Object(wn.d)().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),Object($n.a)(this,e,t,n,r)},Object(wn.d)().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Object(Yt.a)(this,e,t)};var Fn=n("71db");Object(wn.d)().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),Object(Fn.a)(this,e,t,n,r,a)};var Dn=n("48db");Object(wn.d)().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Object(Dn.a)(this,e)},Object(wn.d)().prototype.cast=function(e){return this.throwIfDisposed(),Object(i.a)(this,e)};var zn=n("5960");Object(wn.d)().prototype.ceil=function(){return this.throwIfDisposed(),Object(zn.a)(this)};var Pn=n("c08f");Object(wn.d)().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Object(Pn.a)(this,e,t)},Object(wn.d)().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof wn.a&&(e=[e]),Object(Qt.a)([this,...e],t)};var Ln=n("7675");Object(wn.d)().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Object(Ln.a)(this,e,t,n,r,a,s)};var Mn=n("cd1f");Object(wn.d)().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),Object(Mn.a)(this,e,t,n,r,a)},Object(wn.d)().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Object(ie.a)(this,e,t,n,r,a,s)},Object(wn.d)().prototype.cos=function(){return this.throwIfDisposed(),Object(Bt.a)(this)},Object(wn.d)().prototype.cosh=function(){return this.throwIfDisposed(),Object(Wt.a)(this)},Object(wn.d)().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Object(ye.a)(this,e,t,n)};var Bn=n("364e");Object(wn.d)().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Object(Bn.a)(this,e,t)};var Vn=n("838f");Object(wn.d)().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Object(Vn.a)(this,e,t,n,r,a,s)};var Wn=n("c170");Object(wn.d)().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),Object(Wn.a)(this,e,t,n,r,a)};var Un=n("011b");Object(wn.d)().prototype.divNoNan=function(e){return this.throwIfDisposed(),Object(Un.a)(this,e)},Object(wn.d)().prototype.div=function(e){return this.throwIfDisposed(),Object(d.a)(this,e)};var Gn=n("29fc");Object(wn.d)().prototype.dot=function(e){return this.throwIfDisposed(),Object(Gn.a)(this,e)};var Hn=n("9e38");Object(wn.d)().prototype.elu=function(){return this.throwIfDisposed(),Object(Hn.a)(this)},Object(wn.d)().prototype.equal=function(e){return this.throwIfDisposed(),Object(Je.a)(this,e)};var Kn=n("8e05");Object(wn.d)().prototype.erf=function(){return this.throwIfDisposed(),Object(Kn.a)(this)},Object(wn.d)().prototype.exp=function(){return this.throwIfDisposed(),Object(Se.a)(this)},Object(wn.d)().prototype.expandDims=function(e){return this.throwIfDisposed(),Object(fn.a)(this,e)};var qn=n("1ba2");Object(wn.d)().prototype.expm1=function(){return this.throwIfDisposed(),Object(qn.a)(this)};var Xn=n("1ab7");Object(wn.d)().prototype.fft=function(){return this.throwIfDisposed(),Object(Xn.a)(this)},Object(wn.d)().prototype.flatten=function(){return this.throwIfDisposed(),Object(v.a)(this,[this.size])},Object(wn.d)().prototype.floor=function(){return this.throwIfDisposed(),Object(lt.a)(this)};var Jn=n("508f");Object(wn.d)().prototype.floorDiv=function(e){return this.throwIfDisposed(),Object(Jn.a)(this,e)},Object(wn.d)().prototype.gather=function(e,t){return this.throwIfDisposed(),Object(mn.a)(this,e,t)},Object(wn.d)().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Object(X.a)(this,e)},Object(wn.d)().prototype.greater=function(e){return this.throwIfDisposed(),Object(We.a)(this,e)};var Yn=n("4c7a");Object(wn.d)().prototype.ifft=function(){return this.throwIfDisposed(),Object(Yn.a)(this)};var Zn=n("69dc");Object(wn.d)().prototype.irfft=function(){return this.throwIfDisposed(),Object(Zn.a)(this)};var Qn=n("fc0b");Object(wn.d)().prototype.isFinite=function(){return this.throwIfDisposed(),Object(Qn.a)(this)};var er=n("5980");Object(wn.d)().prototype.isInf=function(){return this.throwIfDisposed(),Object(er.a)(this)};var tr=n("6fef");Object(wn.d)().prototype.isNaN=function(){return this.throwIfDisposed(),Object(tr.a)(this)};var nr=n("6f37");Object(wn.d)().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Object(nr.a)(this,e)},Object(wn.d)().prototype.lessEqual=function(e){return this.throwIfDisposed(),Object(J.a)(this,e)},Object(wn.d)().prototype.less=function(e){return this.throwIfDisposed(),Object(Ze.a)(this,e)};var rr=n("e101");Object(wn.d)().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Object(rr.a)(this,e,t,n,r)};var ar=n("c314");Object(wn.d)().prototype.logSigmoid=function(){return this.throwIfDisposed(),Object(ar.a)(this)};var sr=n("804a");Object(wn.d)().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Object(sr.a)(this,e)};var or=n("afda");Object(wn.d)().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Object(or.a)(this,e,t)},Object(wn.d)().prototype.log=function(){return this.throwIfDisposed(),Object(vt.a)(this)};var ir=n("46b1");Object(wn.d)().prototype.log1p=function(){return this.throwIfDisposed(),Object(ir.a)(this)},Object(wn.d)().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Object(Y.a)(this,e)},Object(wn.d)().prototype.logicalNot=function(){return this.throwIfDisposed(),Object(Ft.a)(this)};var ur=n("f183");Object(wn.d)().prototype.logicalOr=function(e){return this.throwIfDisposed(),Object(ur.a)(this,e)};var cr=n("d25f");Object(wn.d)().prototype.logicalXor=function(e){return this.throwIfDisposed(),Object(cr.a)(this,e)},Object(wn.d)().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Object(V.a)(this,e,t,n)};var lr=n("9fe6");Object(wn.d)().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Object(lr.a)(this,e,t,n,r)};var dr=n("c021");Object(wn.d)().prototype.max=function(e,t){return this.throwIfDisposed(),Object(dr.a)(this,e,t)},Object(wn.d)().prototype.maximum=function(e){return this.throwIfDisposed(),Object(gn.a)(this,e)};var pr=n("122e");Object(wn.d)().prototype.mean=function(e,t){return this.throwIfDisposed(),Object(pr.a)(this,e,t)};var hr=n("ae6d");Object(wn.d)().prototype.min=function(e,t){return this.throwIfDisposed(),Object(hr.a)(this,e,t)};var fr=n("f0e5");Object(wn.d)().prototype.minimum=function(e){return this.throwIfDisposed(),Object(fr.a)(this,e)};var mr=n("93db");Object(wn.d)().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Object(mr.a)(this,e,t)};var gr=n("4611");Object(wn.d)().prototype.mod=function(e){return this.throwIfDisposed(),Object(gr.a)(this,e)},Object(wn.d)().prototype.mul=function(e){return this.throwIfDisposed(),Object(u.a)(this,e)},Object(wn.d)().prototype.neg=function(){return this.throwIfDisposed(),Object(p.a)(this)};var br=n("f757");Object(wn.d)().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Object(br.a)(this,e,t,n)};var yr=n("d4de");Object(wn.d)().prototype.notEqual=function(e){return this.throwIfDisposed(),Object(yr.a)(this,e)};var xr=n("e22c");Object(wn.d)().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Object(xr.a)(this,e,t,n)};var vr=n("0db5");Object(wn.d)().prototype.onesLike=function(){return this.throwIfDisposed(),Object(vr.a)(this)},Object(wn.d)().prototype.pad=function(e,t){return this.throwIfDisposed(),Object(Gt.a)(this,e,t)};var kr=n("eaf4");Object(wn.d)().prototype.pool=function(e,t,n,r,a){return this.throwIfDisposed(),Object(kr.a)(this,e,t,n,r,a)},Object(wn.d)().prototype.pow=function(e){return this.throwIfDisposed(),Object(kt.a)(this,e)};var wr=n("520f");Object(wn.d)().prototype.prelu=function(e){return this.throwIfDisposed(),Object(wr.a)(this,e)};var Or=n("f3ae");Object(wn.d)().prototype.prod=function(e,t){return this.throwIfDisposed(),Object(Or.a)(this,e,t)};var _r=n("b500");Object(wn.d)().prototype.reciprocal=function(){return this.throwIfDisposed(),Object(_r.a)(this)};var Ir=n("917a");Object(wn.d)().prototype.relu=function(){return this.throwIfDisposed(),Object(Ir.a)(this)};var Sr=n("46a8");Object(wn.d)().prototype.relu6=function(){return this.throwIfDisposed(),Object(Sr.a)(this)},Object(wn.d)().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Object(v.a)(this,e.shape)},Object(wn.d)().prototype.reshape=function(e){return this.throwIfDisposed(),Object(v.a)(this,e)};var Nr=n("73f8");Object(wn.d)().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Object(Nr.a)(this,e,t,n)};var Cr=n("0f86");Object(wn.d)().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Object(Cr.a)(this,e,t,n)},Object(wn.d)().prototype.reverse=function(e){return this.throwIfDisposed(),Object(Et.a)(this,e)};var Tr=n("b61d");Object(wn.d)().prototype.rfft=function(){return this.throwIfDisposed(),Object(Tr.a)(this)};var Ar=n("08a9");Object(wn.d)().prototype.round=function(){return this.throwIfDisposed(),Object(Ar.a)(this)},Object(wn.d)().prototype.rsqrt=function(){return this.throwIfDisposed(),Object(Re.a)(this)};var Er=n("b39e");Object(wn.d)().prototype.selu=function(){return this.throwIfDisposed(),Object(Er.a)(this)};var jr=n("116b");Object(wn.d)().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Object(jr.a)(this,e,t,n,r,a,s)},Object(wn.d)().prototype.sigmoid=function(){return this.throwIfDisposed(),Object(Xt.a)(this)};var Rr=n("1df6");Object(wn.d)().prototype.sign=function(){return this.throwIfDisposed(),Object(Rr.a)(this)},Object(wn.d)().prototype.sin=function(){return this.throwIfDisposed(),Object(pe.a)(this)},Object(wn.d)().prototype.sinh=function(){return this.throwIfDisposed(),Object(fe.a)(this)},Object(wn.d)().prototype.slice=function(e,t){return this.throwIfDisposed(),Object(ut.a)(this,e,t)};var $r=n("5f87");Object(wn.d)().prototype.softmax=function(e){return this.throwIfDisposed(),Object($r.a)(this,e)};var Fr=n("9ffd");Object(wn.d)().prototype.softplus=function(){return this.throwIfDisposed(),Object(Fr.a)(this)},Object(wn.d)().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Object(U.a)(this,e,t)},Object(wn.d)().prototype.split=function(e,t){return this.throwIfDisposed(),Object(te.a)(this,e,t)},Object(wn.d)().prototype.sqrt=function(){return this.throwIfDisposed(),Object(f.a)(this)},Object(wn.d)().prototype.square=function(){return this.throwIfDisposed(),Object(m.a)(this)};var Dr=n("4184");Object(wn.d)().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Object(Dr.a)(this,e)};var zr=n("d1f4");Object(wn.d)().prototype.squeeze=function(e){return this.throwIfDisposed(),Object(zr.a)(this,e)},Object(wn.d)().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof wn.a?[this,e]:[this,...e];return Object(pn.a)(n,t)},Object(wn.d)().prototype.step=function(e){return this.throwIfDisposed(),Object(c.a)(this,e)};var Pr=n("de1a");Object(wn.d)().prototype.stridedSlice=function(e,t,n,r,a,s,o,i){return this.throwIfDisposed(),Object(Pr.a)(this,e,t,n,r,a,s,o,i)},Object(wn.d)().prototype.sub=function(e){return this.throwIfDisposed(),Object(g.a)(this,e)},Object(wn.d)().prototype.sum=function(e,t){return this.throwIfDisposed(),Object(k.a)(this,e,t)};var Lr=n("d30a");Object(wn.d)().prototype.tan=function(){return this.throwIfDisposed(),Object(Lr.a)(this)};var Mr=n("8888");Object(wn.d)().prototype.tanh=function(){return this.throwIfDisposed(),Object(Mr.a)(this)},Object(wn.d)().prototype.tile=function(e){return this.throwIfDisposed(),Object($e.a)(this,e)},Object(wn.d)().prototype.toBool=function(){return this.throwIfDisposed(),Object(i.a)(this,"bool")},Object(wn.d)().prototype.toFloat=function(){return this.throwIfDisposed(),Object(i.a)(this,"float32")},Object(wn.d)().prototype.toInt=function(){return this.throwIfDisposed(),Object(i.a)(this,"int32")};var Br=n("5616");Object(wn.d)().prototype.topk=function(e,t){return this.throwIfDisposed(),Object(Br.a)(this,e,t)},Object(wn.d)().prototype.transpose=function(e){return this.throwIfDisposed(),Object(xe.a)(this,e)};var Vr=n("853e");let Wr;function common_epsilon(){return null==Wr&&(Wr=Object(s.ld)().epsilon()),Wr}Object(wn.d)().prototype.unique=function(e){return this.throwIfDisposed(),Object(Vr.a)(this,e)},Object(wn.d)().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Object(De.a)(this,e,t)},Object(wn.d)().prototype.unstack=function(e){return this.throwIfDisposed(),Object(bt.a)(this,e)},Object(wn.d)().prototype.where=function(e,t){return this.throwIfDisposed(),Object(Z.a)(e,this,t)},Object(wn.d)().prototype.zerosLike=function(){return this.throwIfDisposed(),Object(_.a)(this)};class AttributeError extends Error{constructor(e){super(e),Object.setPrototypeOf(this,AttributeError.prototype)}}class RuntimeError extends Error{constructor(e){super(e),Object.setPrototypeOf(this,RuntimeError.prototype)}}class ValueError extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ValueError.prototype)}}class NotImplementedError extends Error{constructor(e){super(e),Object.setPrototypeOf(this,NotImplementedError.prototype)}}class AssertionError extends Error{constructor(e){super(e),Object.setPrototypeOf(this,AssertionError.prototype)}}Error;function pyListRepeat(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function assert(e,t){if(!e)throw new AssertionError(t)}function generic_utils_count(e,t){let n=0;for(const r of e)r===t&&n++;return n}function singletonOrArray(e){return 1===e.length?e[0]:e}function toList(e){return Array.isArray(e)?e:[e]}function toSnakeCase(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function toCamelCase(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let Ur={};function serializeKerasObject(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function convertNDArrayScalarsInConfig(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>convertNDArrayScalarsInConfig(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?convertNDArrayScalarsInConfig(t):e[n]=t.value)}}}function deserializeKerasObject(e,t={},n={},r="object",a=!1){if("string"==typeof e){const a=e;let s;if(a in n)s=n[a];else if(a in Ur)s=Ur[a];else if(s=t[a],null==s)throw new ValueError(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return s}{const s=e;if(null==s.className||null==s.config)throw new ValueError(`${r}: Improper config format: ${JSON.stringify(s)}.\n'className' and 'config' must set.`);const o=s.className;let i,u;if(o in n?[i,u]=n[o]:o in Ur?[i,u]=Ur.className:o in t&&([i,u]=t[o]),null==i)throw new ValueError(`Unknown ${r}: ${o}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const e={};for(const n of Object.keys(Ur))e[n]=Ur[n];for(const a of Object.keys(n))e[a]=n[a];s.config.customObjects=e;const t=Object.assign({},Ur);for(const a of Object.keys(n))Ur[a]=n[a];convertNDArrayScalarsInConfig(s.config);const r=u(i,s.config,n,a);return Ur=Object.assign({},t),r}{const e=Object.assign({},Ur);for(const r of Object.keys(n))Ur[r]=n[r];const t=new i(s.config);return Ur=Object.assign({},e),t}}}function reverseNumberCompare(e,t){return-1*function numberCompare(e,t){return e<t?-1:e>t?1:0}(e,t)}function generic_utils_unique(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function isObjectEmpty(e){if(null==e)throw new ValueError(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function checkStringTypeUnionValue(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new ValueError(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function checkArrayTypeAndLength(e,t,n=0,r=1/0){return assert(n>=0),assert(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function assertPositiveInteger(e,t){Array.isArray(e)?(s.of.assert(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>assertPositiveInteger(e,`element ${n+1} of ${t}`)))):s.of.assert(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${formatAsFriendlyString(e)}.`))}function formatAsFriendlyString(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>formatAsFriendlyString(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function mapActivationToFusedKernel(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function calcL2Norms(e,t){return Object(s.hf)((()=>s.Ve(s.af(s.oe(e,e),t,!0))))}class constraints_Constraint extends s.Je.Serializable{getConfig(){return{}}}class constraints_MaxNorm extends constraints_Constraint{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Object(s.hf)((()=>{const t=calcL2Norms(e,this.axis),n=s.td(t,0,this.maxValue);return s.oe(e,s.Hd(n,s.fd(common_epsilon(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}constraints_MaxNorm.className="MaxNorm",s.Je.registerClass(constraints_MaxNorm);class constraints_UnitNorm extends constraints_Constraint{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Object(s.hf)((()=>s.Hd(e,s.fd(common_epsilon(),calcL2Norms(e,this.axis)))))}getConfig(){return{axis:this.axis}}}constraints_UnitNorm.className="UnitNorm",s.Je.registerClass(constraints_UnitNorm);class constraints_NonNeg extends constraints_Constraint{apply(e){return s.De(e)}}constraints_NonNeg.className="NonNeg",s.Je.registerClass(constraints_NonNeg);class constraints_MinMaxNorm extends constraints_Constraint{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Object(s.hf)((()=>{const t=calcL2Norms(e,this.axis),n=s.fd(s.oe(this.rate,s.td(t,this.minValue,this.maxValue)),s.oe(1-this.rate,t));return s.oe(e,s.Hd(n,s.fd(common_epsilon(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}constraints_MinMaxNorm.className="MinMaxNorm",s.Je.registerClass(constraints_MinMaxNorm);const Gr={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function serializeConstraint(e){return serializeKerasObject(e)}function deserializeConstraint(e,t={}){return deserializeKerasObject(e,s.Je.SerializationMap.getMap().classNameMap,t,"constraint")}function getConstraint(e){if(null==e)return null;if("string"==typeof e){return deserializeConstraint({className:e in Gr?Gr[e]:e,config:{}})}return e instanceof constraints_Constraint?e:deserializeConstraint(e)}const Hr=["channelsFirst","channelsLast"],Kr=["nearest","bilinear"],qr=["valid","same","causal"],Xr=["max","avg"],Jr=["sum","mul","concat","ave"],Yr=new Map;function checkDataFormat(e){checkStringTypeUnionValue(Hr,"DataFormat",e)}function checkPaddingMode(e){checkStringTypeUnionValue(qr,"PaddingMode",e)}function checkPoolMode(e){checkStringTypeUnionValue(Xr,"PoolMode",e)}const Zr=[];function nameScope(e,t){Zr.push(e);try{const e=t();return Zr.pop(),e}catch(n){throw Zr.pop(),n}}function getScopedTensorName(e){if(!isValidTensorName(e))throw new Error("Not a valid tensor name: '"+e+"'");return function currentNameScopePrefix(){return 0===Zr.length?"":Zr.join("/")+"/"}()+e}function getUniqueTensorName(e){if(!isValidTensorName(e))throw new Error("Not a valid tensor name: '"+e+"'");Yr.has(e)||Yr.set(e,0);const t=Yr.get(e);if(Yr.set(e,Yr.get(e)+1),t>0){const n=`${e}_${t}`;return Yr.set(n,1),n}return e}const Qr=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function isValidTensorName(e){return!!e.match(Qr)}function arrayProd(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function toArray1D(e){return e=Array.isArray(e)?new Float32Array(e):e,Object(s.ef)(e)}function math_utils_min(e){return s.le(toArray1D(e)).dataSync()[0]}function math_utils_max(e){return s.fe(toArray1D(e)).dataSync()[0]}function range(e,t){if(t<e)throw new ValueError(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}function tfjs_backend_cast(e,t){return e.asType(t)}function expandDims(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),e.reshape(n)}function sliceAlongFirstAxis(e,t,n){return Object(s.hf)((()=>{switch(e.rank){case 1:return s.Ne(e,t,n);case 2:return s.Oe(e,[t,0],[n,e.shape[1]]);case 3:return s.Pe(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return s.Qe(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return s.Me(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return s.Me(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new ValueError(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function sliceAlongLastAxis(e,t,n){return Object(s.hf)((()=>{switch(e.rank){case 1:return s.Ne(e,t,n);case 2:return s.Oe(e,[0,t],[e.shape[0],n]);case 3:return s.Pe(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return s.Qe(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new ValueError(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function sliceAlongAxis(e,t,n,r){return Object(s.hf)((()=>{switch(e.rank){case 1:return s.Ne(e,t,n);case 2:switch(r){case 1:return sliceAlongFirstAxis(e,t,n);case 2:return sliceAlongLastAxis(e,t,n);default:throw new ValueError(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return sliceAlongFirstAxis(e,t,n);case 2:return s.Pe(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return sliceAlongLastAxis(e,t,n);default:throw new ValueError(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return sliceAlongFirstAxis(e,t,n);case 2:return s.Qe(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return s.Qe(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return sliceAlongLastAxis(e,t,n);default:throw new ValueError(`The axis is not within the rank of the tensor ${r}`)}default:throw new ValueError(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function concatenate(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),s.vd(e,t)}function concatAlongFirstAxis(e,t){switch(e.rank){case 1:return s.wd([e,t]);case 2:return s.xd([e,t],0);case 3:return s.yd([e,t],0);case 4:return s.zd([e,t],0);default:throw new ValueError(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function tfjs_backend_tile(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new ValueError(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return s.if(e,t)}function randomNormal(e,t=0,n=1,r,a){return s.ye(e,t,n,r,a)}function tfjs_backend_dot(e,t,n,r){if(e.rank<2||t.rank<2)throw new NotImplementedError(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new NotImplementedError(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(2===e.rank&&2===t.rank){const a=!1,o=!1;return s.Sd.matMul({a:e,b:t,transposeA:a,transposeB:o,bias:r?reshapeBias(e.rank,r,"channelsLast"):null,activation:n})}{const a=e.shape.slice(),o=a.pop();e=e.reshape([-1,o]);const i=t.shape.slice(),u=i.pop(),c=i.pop(),l=[...i,u],d=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=t.transpose(d).reshape([c,-1]);const p=[...a,...l],h=!1,f=!1;return s.Sd.matMul({a:e,b:t,transposeA:h,transposeB:f,bias:r?reshapeBias(e.rank,r,"channelsLast"):null,activation:n}).reshape(p)}}function tfjs_backend_gather(e,t,n){return Object(s.hf)((()=>(t=Array.isArray(t)?Object(s.ef)(t,"int32"):t.toInt(),s.Td(e,t,n))))}function tfjs_backend_square(e){return s.oe(e,e)}function reshapeBias(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new ValueError(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1,1,1]):t.reshape([1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,1,1,r[0]]):t.reshape([1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1,1]):t.reshape([1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,1,r[0]]):t.reshape([1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1]):t.reshape([1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,r[0]]):t.reshape([1].concat(r))}else if(e<3)return t;throw new ValueError(`Unsupported input rank by biasAdd: ${t.rank}`)}function biasAdd(e,t,n){return Object(s.hf)((()=>(null==n&&(n="channelsLast"),checkDataFormat(n),e.add(reshapeBias(e.rank,t,n)))))}function dropout(e,t,n,r){return Object(s.hf)((()=>s.Id(e,t,n,r)))}function inTrainPhase(e,t,n=!1){return n?e():t()}const ea=["fanIn","fanOut","fanAvg"],ta=["normal","uniform","truncatedNormal"];class initializers_Initializer extends s.Je.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class initializers_Zeros extends initializers_Initializer{apply(e,t){return Object(s.tf)(e,t)}}initializers_Zeros.className="Zeros",s.Je.registerClass(initializers_Zeros);class initializers_Ones extends initializers_Initializer{apply(e,t){return Object(s.te)(e,t)}}initializers_Ones.className="Ones",s.Je.registerClass(initializers_Ones);class initializers_Constant extends initializers_Initializer{constructor(e){if(super(),"object"!=typeof e)throw new ValueError(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new ValueError(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Object(s.hf)((()=>Object(s.oe)(Object(s.Ge)(this.value),Object(s.te)(e,t))))}getConfig(){return{value:this.value}}}initializers_Constant.className="Constant",s.Je.registerClass(initializers_Constant);class initializers_RandomUniform extends initializers_Initializer{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Object(s.ze)(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}initializers_RandomUniform.className="RandomUniform",s.Je.registerClass(initializers_RandomUniform);class initializers_RandomNormal extends initializers_Initializer{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new NotImplementedError(`randomNormal does not support dType ${t}.`);return randomNormal(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}initializers_RandomNormal.className="RandomNormal",s.Je.registerClass(initializers_RandomNormal);class initializers_TruncatedNormal extends initializers_Initializer{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new NotImplementedError(`truncatedNormal does not support dType ${t}.`);return Object(s.lf)(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}initializers_TruncatedNormal.className="TruncatedNormal",s.Je.registerClass(initializers_TruncatedNormal);class initializers_Identity extends initializers_Initializer{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Object(s.hf)((()=>{if(2!==e.length||e[0]!==e[1])throw new ValueError("Identity matrix initializer can only be used for 2D square matrices.");return Object(s.oe)(this.gain,Object(s.Pd)(e[0]))}))}getConfig(){return{gain:this.gain}}}initializers_Identity.className="Identity",s.Je.registerClass(initializers_Identity);class initializers_VarianceScaling extends initializers_Initializer{constructor(e){if(super(),e.scale<0)throw new ValueError(`scale must be a positive float. Got: ${e.scale}`);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,function checkFanMode(e){checkStringTypeUnionValue(ea,"FanMode",e)}(this.mode),this.distribution=null==e.distribution?"normal":e.distribution,function checkDistribution(e){checkStringTypeUnionValue(ta,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function computeFans(e,t="channelsLast"){let n,r;if(checkDataFormat(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=arrayProd(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=arrayProd(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=arrayProd(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],a=n[1];let o=this.scale;if("fanIn"===this.mode?o/=Math.max(1,r):"fanOut"===this.mode?o/=Math.max(1,a):o/=Math.max(1,(r+a)/2),"normal"===this.distribution){const n=Math.sqrt(o);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new NotImplementedError(`${this.getClassName()} does not support dType ${t}.`);return Object(s.lf)(e,0,n,t,this.seed)}{const n=Math.sqrt(3*o);return Object(s.ze)(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}initializers_VarianceScaling.className="VarianceScaling",s.Je.registerClass(initializers_VarianceScaling);class GlorotUniform extends initializers_VarianceScaling{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return initializers_VarianceScaling.className}}GlorotUniform.className="GlorotUniform",s.Je.registerClass(GlorotUniform);class GlorotNormal extends initializers_VarianceScaling{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return initializers_VarianceScaling.className}}GlorotNormal.className="GlorotNormal",s.Je.registerClass(GlorotNormal);class HeNormal extends initializers_VarianceScaling{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return initializers_VarianceScaling.className}}HeNormal.className="HeNormal",s.Je.registerClass(HeNormal);class HeUniform extends initializers_VarianceScaling{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return initializers_VarianceScaling.className}}HeUniform.className="HeUniform",s.Je.registerClass(HeUniform);class LeCunNormal extends initializers_VarianceScaling{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return initializers_VarianceScaling.className}}LeCunNormal.className="LeCunNormal",s.Je.registerClass(LeCunNormal);class LeCunUniform extends initializers_VarianceScaling{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return initializers_VarianceScaling.className}}LeCunUniform.className="LeCunNormal",s.Je.registerClass(LeCunUniform);class initializers_Orthogonal extends initializers_Initializer{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new NotImplementedError("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return Object(s.hf)((()=>{if(e.length<2)throw new NotImplementedError("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=randomNormal(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=s.be.gramSchmidt(t);return e[0]>e[1]&&(n=n.transpose()),Object(s.oe)(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}initializers_Orthogonal.className="Orthogonal",s.Je.registerClass(initializers_Orthogonal);const na={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function deserializeInitializer(e,t={}){return deserializeKerasObject(e,s.Je.SerializationMap.getMap().classNameMap,t,"initializer")}function serializeInitializer(e){return serializeKerasObject(e)}function getInitializer(e){if("string"==typeof e){const t=e in na?na[e]:e;if("GlorotNormal"===t)return new GlorotNormal;if("GlorotUniform"===t)return new GlorotUniform;if("HeNormal"===t)return new HeNormal;if("HeUniform"===t)return new HeUniform;if("LeCunNormal"===t)return new LeCunNormal;if("LeCunUniform"===t)return new LeCunUniform;{const e={};return e.className=t,e.config={},deserializeInitializer(e)}}return e instanceof initializers_Initializer?e:deserializeInitializer(e)}let ra=0;function getNextUniqueTensorId(){return ra++}const aa={};function getUid(e=""){return e in aa||(aa[e]=0),aa[e]+=1,e+aa[e].toString()}function isArrayOfShapes(e){return Array.isArray(e)&&Array.isArray(e[0])}function normalizeShapeList(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function getExactlyOneTensor(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new ValueError(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function getExactlyOneShape(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new ValueError(`Expected exactly 1 Shape; got ${e.length}`)}return e}function countParamsInWeights(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}const sa="Variable";class variables_LayerVariable{constructor(e,t="float32",n="Variable",r=!0,a=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=getNextUniqueTensorId(),n=null==n?sa:n,this.originalName=getScopedTensorName(n),this.name=getUniqueTensorName(this.originalName),this.trainable_=r,this.constraint=a,this.val=s.pf(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function checkShapesMatch(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function batchGetValue(e){return e.map((e=>e.read()))}function batchSetValue(e){e.forEach((e=>{e[0].write(e[1])}))}class InputSpec{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class topology_SymbolicTensor{constructor(e,t,n,r,a,s,o){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=o,this.id=getNextUniqueTensorId(),null!=s&&(this.originalName=getScopedTensorName(s),this.name=getUniqueTensorName(this.originalName)),this.rank=t.length}}let oa=0;class Node{constructor(e,t){this.callArgs=t,this.id=oa++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let ia=0;class topology_Layer extends s.Je.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=ia++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=toSnakeCase(e)+"_"+getUid(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new RuntimeError(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new ValueError(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return singletonOrArray(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return singletonOrArray(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new AttributeError(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new AttributeError(`Layer ${this.name} is not connected, no input to return.`);return singletonOrArray(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new AttributeError(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new AttributeError(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return singletonOrArray(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=toList(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=toList(this.inputSpec);if(e.length!==t.length)throw new ValueError(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],a=t[n];if(null==a)continue;const s=r.rank;if(null!=a.ndim&&s!==a.ndim)throw new ValueError(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new ValueError(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new ValueError(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new ValueError(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){const e=r.shape;for(const t in a.axes){const r=Number(t),s=a.axes[t],o=r>=0?e[r]:e[e.length+r];if(null!=s&&-1===[s,null].indexOf(o))throw new ValueError(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${e}.`)}}if(null!=a.shape)for(let e=0;e<a.shape.length;++e){const t=a.shape[e],s=r.shape[e];if(null!=t&&null!=s&&t!==s)throw new ValueError(`Input ${n} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=toList(e);let r=!0;for(const s of n)if(!(s instanceof topology_SymbolicTensor)){r=!1;break}let a=!0;for(const s of n)if(s instanceof topology_SymbolicTensor){a=!1;break}if(r===a)throw new ValueError("Arguments to apply() must be all SymbolicTensors or all Tensors");return nameScope(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of toList(e))t.push(n.shape);this.build(singletonOrArray(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t);const a=toList(r),s=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(r=singletonOrArray(s),null!=this.activityRegularizer)throw new NotImplementedError("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function collectInputShape(e){e=toList(e);const t=[];for(const n of e)t.push(n.shape);return singletonOrArray(t)}(e),r=this.computeOutputShape(n);let a;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),a=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new topology_SymbolicTensor(s,n,this,toList(e),t,this.name,r))):new topology_SymbolicTensor(s,r,this,toList(e),t,this.name),this.addInboundNode(e,a,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new NotImplementedError("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new AttributeError(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new AttributeError(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new RuntimeError(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return countParamsInWeights(this.weights)}build(e){this.built=!0}getWeights(e=!1){return batchGetValue(e?this.trainableWeights:this.weights)}setWeights(e){Object(s.hf)((()=>{const t=this.weights;if(t.length!==e.length)throw new ValueError(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=batchGetValue(t);for(let a=0;a<r.length;++a){const o=r[a],i=t[a],u=e[a];if(!s.of.arraysEqual(o.shape,u.shape))throw new ValueError(`Layer weight shape ${o.shape} not compatible with provided weight shape ${u.shape}`);n.push([i,u])}batchSetValue(n)}))}addWeight(e,t,n,r,a,s,o){if(-1!==this._addedWeightNames.indexOf(e))throw new ValueError(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=getInitializer("zeros"));const i=r.apply(t,n),u=new variables_LayerVariable(i,n,e,s,o);return i.dispose(),null!=a&&this.addLoss((()=>a.apply(u.read()))),null==s&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=toList(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,a,s,o=null){const i=toList(e);t=toList(t),n=toList(n),r=toList(r),a=normalizeShapeList(a),s=normalizeShapeList(s);const u=[],c=[],l=[];for(const d of i)u.push(d.sourceLayer),c.push(d.nodeIndex),l.push(d.tensorIndex);new Node({outboundLayer:this,inboundLayers:u,nodeIndices:c,tensorIndices:l,inputTensors:i,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},o);for(let d=0;d<t.length;d++)t[d].sourceLayer=this,t[d].nodeIndex=this.inboundNodes.length-1,t[d].tensorIndex=d}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function getSourceInputs(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=getSourceInputs(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class input_layer_InputLayer extends topology_Layer{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:getUid("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new ValueError("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new ValueError("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new ValueError("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new topology_SymbolicTensor(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Node({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new ValueError(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function Input(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new ValueError("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;null==n&&(n="float32");return new input_layer_InputLayer({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function resolveScalarsInLogs(e){if(null==e)return;const t=[],n=[],r=[];for(const a in e){const s=e[a];if("number"!=typeof s){const e=s;t.push(e.data()),n.push(a),r.push(e)}}if(t.length>0){const a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];Object(s.Gd)(r)}}function disposeTensorsInLogs(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var ua;input_layer_InputLayer.className="InputLayer",s.Je.registerClass(input_layer_InputLayer),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(ua||(ua={}));class BaseCallback{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class CallbackList{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class base_callbacks_BaseLogger extends BaseCallback{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const r in t){const e=t[r];if("number"==typeof e)this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+e*n;else{let t;r in this.totals?t=this.totals[r]:this.totals[r]=0;const a=Object(s.hf)((()=>Object(s.fd)(this.totals[r],Object(s.oe)(e,n))));this.totals[r]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const n of this.params.metrics)null!=this.totals[n]&&("number"==typeof this.totals[n]?t[n]=this.totals[n]/this.seen:Object(s.hf)((()=>{const e=Object(s.oe)(Object(s.Hd)(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),Object(s.Yd)(t[n])})))}}class History extends BaseCallback{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){const e=[],t=[],n=[];for(const a in this.history){const r=this.history[a];for(let s=0;s<r.length;++s)if("number"!=typeof r[s]){const o=r[s];e.push(o.data()),t.push(a),n.push(s)}}const r=await Promise.all(e);for(let a=0;a<r.length;++a){this.history[t[a]][n[a]].dispose(),this.history[t[a]][n[a]]=r[a][0]}}}class base_callbacks_CustomCallback extends BaseCallback{constructor(e,t){if(super(),this.currentEpoch=0,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");s.of.isNumber(this.yieldEvery)&&(this.maybeWait=function debounce(e,t){let n,r=s.of.now();return(...a)=>{const o=s.of.now();return o-r<t||(r=o,n=e(...a)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await resolveScalarsInLogs(n),r.push(this.yield(e,t,n))),r.push(Object(s.qe)()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await resolveScalarsInLogs(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await resolveScalarsInLogs(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(Object(s.qe)()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await resolveScalarsInLogs(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await resolveScalarsInLogs(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(Object(s.qe)()):s.of.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await resolveScalarsInLogs(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await resolveScalarsInLogs(e),await this.trainEnd(e))}}function standardizeCallbacks(e,t){if(null==e&&(e={}),e instanceof BaseCallback)return[e];if(Array.isArray(e)&&e[0]instanceof BaseCallback)return e;return toList(e).map((e=>new base_callbacks_CustomCallback(e,t)))}class base_callbacks_CallbackConstructorRegistry{constructor(){}static registerCallbackConstructor(e,t){s.of.assert(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),base_callbacks_CallbackConstructorRegistry.checkForDuplicate(t),null==base_callbacks_CallbackConstructorRegistry.constructors[e]&&(base_callbacks_CallbackConstructorRegistry.constructors[e]=[]),base_callbacks_CallbackConstructorRegistry.constructors[e].push(t)}static checkForDuplicate(e){for(const t in base_callbacks_CallbackConstructorRegistry.constructors){base_callbacks_CallbackConstructorRegistry.constructors[+t].forEach((t=>{if(t===e)throw new ValueError("Duplicate callback constructor.")}))}}static clear(){base_callbacks_CallbackConstructorRegistry.constructors={}}static createCallbacks(e){const t=[];for(const n in base_callbacks_CallbackConstructorRegistry.constructors){const r=+n;e>=r&&t.push(...base_callbacks_CallbackConstructorRegistry.constructors[r])}return t.map((e=>new e))}}function configureCallbacks(e,t,n,r,a,s,o,i,u){const c=new History,l=[new base_callbacks_BaseLogger,...base_callbacks_CallbackConstructorRegistry.createCallbacks(t)];null!=e&&l.push(...e),l.push(c);const d=new CallbackList(l);return d.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:o,verbose:t,doValidation:i,metrics:u}),{callbackList:d,history:c}}function deserialize(e,t={},n=!1){return deserializeKerasObject(e,s.Je.SerializationMap.getMap().classNameMap,t,"layer",n)}function l2Normalize(e,t){return Object(s.hf)((()=>{"float32"!==e.dtype&&(e=e.asType("float32"));const n=s.af(tfjs_backend_square(e),t,!0),r=s.Qd(n.shape,common_epsilon()),a=s.Ve(s.ie(n,r));return s.Hd(e,a)}))}function meanSquaredError(e,t){return Object(s.hf)((()=>s.je(tfjs_backend_square(s.Ze(t,e)),-1)))}function meanAbsoluteError(e,t){return Object(s.hf)((()=>s.je(s.ed(s.Ze(t,e)),-1)))}function meanAbsolutePercentageError(e,t){return Object(s.hf)((()=>{const n=s.Ze(e,t),r=s.td(s.ed(e),common_epsilon(),Number.MAX_VALUE),a=s.ed(s.Hd(n,r));return s.oe(100,s.je(a,-1))}))}function meanSquaredLogarithmicError(e,t){return Object(s.hf)((()=>{const n=s.td(t,common_epsilon(),Number.MAX_VALUE),r=s.ce(s.fd(1,n)),a=s.td(e,common_epsilon(),Number.MAX_VALUE),o=s.ce(s.fd(1,a));return s.je(tfjs_backend_square(s.Ze(r,o)),-1)}))}function categoricalCrossentropy(e,t,n=!1){return Object(s.hf)((()=>{if(n)t=s.Se(t);else{const e=s.af(t,t.shape.length-1,!0);t=s.Hd(t,e)}return t=s.td(t,common_epsilon(),1-common_epsilon()),s.pe(s.af(s.oe(e.toFloat(),s.ce(t)),t.shape.length-1))}))}function sparseCategoricalCrossentropy(e,t,n=!1){return Object(s.hf)((()=>{const r=s.Rd(function flatten(e){const t=[arrayProd(e.shape)];return e.reshape(t)}(e)).toInt(),a=(t=s.td(t,common_epsilon(),1-common_epsilon())).shape;return categoricalCrossentropy(s.se(r,a[a.length-1]).reshape(a),t,n)}))}function binaryCrossentropy(e,t){return Object(s.hf)((()=>{let n;return n=s.td(t,common_epsilon(),1-common_epsilon()),n=s.ce(s.Hd(n,s.Ze(1,n))),s.je(function sigmoidCrossEntropyWithLogits(e,t){if(!s.of.arraysEqual(e.shape,t.shape))throw new ValueError(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Object(s.hf)((()=>{const n=t.relu(),r=t.abs().neg();return n.sub(t.mul(e)).add(r.exp().log1p())}))}(e,n),-1)}))}function kullbackLeiblerDivergence(e,t){return Object(s.hf)((()=>{const n=s.td(e,common_epsilon(),1),r=s.td(t,common_epsilon(),1);return s.af(s.oe(e,s.ce(s.Hd(n,r))),-1)}))}function cosineProximity(e,t){return Object(s.hf)((()=>{const n=l2Normalize(e,-1),r=l2Normalize(t,-1),a=s.oe(n,r);return s.pe(s.af(a,-1))}))}base_callbacks_CallbackConstructorRegistry.constructors={};const ca={meanSquaredError:meanSquaredError,meanAbsoluteError:meanAbsoluteError,meanAbsolutePercentageError:meanAbsolutePercentageError,meanSquaredLogarithmicError:meanSquaredLogarithmicError,squaredHinge:function squaredHinge(e,t){return Object(s.hf)((()=>{const n=s.ie(0,s.Ze(1,s.oe(e,t)));return s.je(tfjs_backend_square(n),-1)}))},hinge:function hinge(e,t){return Object(s.hf)((()=>{const n=s.ie(0,s.Ze(1,s.oe(e,t)));return s.je(n,-1)}))},categoricalHinge:function categoricalHinge(e,t){return Object(s.hf)((()=>{const n=s.af(s.oe(e,t),-1),r=s.fe(s.oe(s.Ze(1,e),t),-1);return s.ie(0,s.fd(1,s.Ze(r,n)))}))},logcosh:function logcosh(e,t){return Object(s.hf)((()=>{const n=Math.log(2),r=s.Ze(t,e),a=s.Ze(s.fd(r,s.Te(s.oe(-2,r))),n);return s.je(a,-1)}))},categoricalCrossentropy:categoricalCrossentropy,sparseCategoricalCrossentropy:sparseCategoricalCrossentropy,binaryCrossentropy:binaryCrossentropy,kullbackLeiblerDivergence:kullbackLeiblerDivergence,poisson:function poisson(e,t){return Object(s.hf)((()=>{const n=s.ce(s.fd(common_epsilon(),t));return s.je(s.Ze(t,s.oe(e,n)),-1)}))},cosineProximity:cosineProximity};function get(e){if("string"==typeof e){if(e in ca)return ca[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new ValueError(t)}return e}function binaryAccuracy(e,t){return Object(s.hf)((()=>{const n=s.oe(.5,s.ue(t)),r=tfjs_backend_cast(s.Ud(t,n),e.dtype);return s.je(s.Md(e,r),-1)}))}function categoricalAccuracy(e,t){return Object(s.hf)((()=>tfjs_backend_cast(s.Md(s.id(e,-1),s.id(t,-1)),"float32")))}function truePositives(e,t){return Object(s.hf)((()=>s.ee(e.equal(1),t.equal(1)).sum().cast("float32")))}function precision(e,t){return Object(s.hf)((()=>{const n=truePositives(e,t),r=function falsePositives(e,t){return Object(s.hf)((()=>s.ee(e.equal(0),t.equal(1)).sum().cast("float32")))}(e,t),a=n.add(r);return s.sf(s.Ud(a,0),n.div(a),0).cast("float32")}))}function metrics_binaryCrossentropy(e,t){return binaryCrossentropy(e,t)}function sparseCategoricalAccuracy(e,t){return e.rank===t.rank&&(e=e.squeeze([e.rank-1])),(t=t.argMax(-1)).dtype!==e.dtype&&(t=t.asType(e.dtype)),s.Md(e,t).asType("float32")}const la=categoricalCrossentropy,da=sparseCategoricalCrossentropy,pa={binaryAccuracy:binaryAccuracy,categoricalAccuracy:categoricalAccuracy,precision:precision,categoricalCrossentropy:la,sparseCategoricalCrossentropy:da,mse:meanSquaredError,MSE:meanSquaredError,mae:meanAbsoluteError,MAE:meanAbsoluteError,mape:meanAbsolutePercentageError,MAPE:meanAbsolutePercentageError,cosine:cosineProximity};function metrics_get(e){if("string"==typeof e&&e in pa)return pa[e];if("string"!=typeof e&&null!=e)return e;throw new ValueError(`Unknown metric ${e}`)}function getLossOrMetricName(e){if(assert(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(ca))if(ca[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(pa))if(pa[n]===e){t=n;break}return void 0!==t?t:e.name}}const ha=1048576;function checkUserDefinedMetadata(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!plainObjectCheck(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>ha&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function plainObjectCheck(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!plainObjectCheck(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!plainObjectCheck(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function printSummary(e,t,n,r=console.log){const a=function isModelSequentialLike(e){let t=!0;const n=[],r=[];for(const a in e.nodesByDepth)n.push(e.nodesByDepth[a]);for(const a of n){if(a.length>1||1===a.length&&a[0].inboundLayers.length>1){t=!1;break}r.push(...a)}if(t)for(const a of e.layers){let e=!1;for(const n of a.inboundNodes)if(-1!==r.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),s=["Layer (type)","Output shape","Param #"];let o;if(a?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!a){s.push("Receives inputs"),o=[];for(const t in e.nodesByDepth)o.push(...e.nodesByDepth[t])}r("_".repeat(t)),printRow(s,n,r),r("=".repeat(t));const i=e.layers;for(let l=0;l<i.length;++l)a?printLayerSummary(i[l],n,r):printLayerSummaryWithConnections(i[l],n,o,r),r((l===i.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=function countTrainableParams(e){let t;t=null!=e.collectedTrainableWeights?countParamsInWeights(e.collectedTrainableWeights):countParamsInWeights(e.trainableWeights);return t}(e),c=countParamsInWeights(e.nonTrainableWeights);r(`Total params: ${u+c}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${c}`),r("_".repeat(t))}function printRow(e,t,n=console.log){let r="";for(let a=0;a<e.length;++a)a>0&&(r=r.slice(0,r.length-1)+" "),r+=e[a],r=r.slice(0,t[a]),r+=" ".repeat(t[a]-r.length);n(r)}function printLayerSummary(e,t,n){let r;try{r=JSON.stringify(e.outputShape)}catch(a){r="multiple"}printRow([`${e.name} (${e.getClassName()})`,r,e.countParams().toString()],t,n)}function printLayerSummaryWithConnections(e,t,n,r){let a;try{a=JSON.stringify(e.outputShape)}catch(c){a="multiple"}const s=[];for(const l of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(l)))for(let e=0;e<l.inboundLayers.length;++e){const t=l.inboundLayers[e].name,n=l.nodeIndices[e],r=l.tensorIndices[e];s.push(`${t}[${n}][${r}]`)}const o=e.name,i=e.getClassName(),u=0===s.length?"":s[0];printRow([`${o} (${i})`,a,e.countParams().toString(),u],t,r);for(let l=1;l<s.length;++l)printRow(["","","",s[l]],t,r)}function isArrayItemInputOrOutputName(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function convertPythonicToTs(e,t){if(null===e)return null;if("string"==typeof e)return toCamelCase(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];isArrayItemInputOrOutputName(t,a,r)?n.push(r):n.push(convertPythonicToTs(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=toCamelCase(n);t[e]=convertPythonicToTs(r,e)}}return t}}function convertTsToPythonic(e,t){if(null==e)return null;if("string"==typeof e)return toSnakeCase(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];isArrayItemInputOrOutputName(t,a,r)?n.push(r):n.push(convertTsToPythonic(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n],a=toSnakeCase(n);t[a]="name"!==n&&"className"!==n||"string"!=typeof r?convertTsToPythonic(r,n):r}return t}}class executor_FeedDict{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof executor_FeedDict)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new ValueError(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function assertFeedCompatibility(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Object(s.sd)(t,e.dtype)}catch(n){throw new ValueError(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof topology_SymbolicTensor){if(null==this.id2Value[e.id])throw new ValueError(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new ValueError(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof topology_SymbolicTensor){if(null==this.id2Value[e.id])throw new ValueError(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new ValueError(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&Object(s.Gd)(this.id2Mask)}}const fa={},ma={};function execute(e,t,n,r){const a=null!=n&&n.training,o=Array.isArray(e),i=o?e:[e],u=i.map((e=>e.name)),c=[],l=t.names();for(const s of u)-1!==l.indexOf(s)?c.push(t.getValue(s)):c.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const d=u.join(",")+"|"+t.names().join(",");let p,h;if(null==fa[d]){const e=function getTopologicalSortAndRecipientCounts(e,t){s.of.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const a=getTopologicalSortAndRecipientCountsForOneFetch(e[0],t);n=a.sorted,r=a.recipientMap}else{const a=new Set;for(const s of e){const{sorted:e,recipientMap:o}=getTopologicalSortAndRecipientCountsForOneFetch(s,t);for(const t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(const t in o)null==r[t]&&(r[t]=new Set),o[t].forEach((e=>r[t].add(e)))}}return{sorted:n,recipientCounts:recipientMap2Counts(r)}}(i,t);p=e.sorted,h=e.recipientCounts,fa[d]=p,ma[d]=h}p=fa[d],h={},a||Object.assign(h,ma[d]);const f=new executor_FeedDict(t);for(let m=0;m<p.length;++m){if(null!=r){const e=Object(s.ke)().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const e=p[m],o=e.sourceLayer;if(o instanceof input_layer_InputLayer)continue;const i=[],l=[],d=[];let g=!1;for(const n of e.inputs){const e=f.getValue(n),r=f.getMask(n);i.push(e),l.push(r),null!=r&&(g=!0),a||(h[n.name]--,0!==h[n.name]||t.hasKey(n)||-1!==u.indexOf(n.name)||e.isDisposed||!0===n.sourceLayer.stateful||d.push(e))}g&&((n=n||{}).mask=l[0]);const b=toList(o.apply(i,n));let y=null;o.supportsMasking&&(y=o.computeMask(i,l));const x=getNodeOutputs(e),v=Array.isArray(x)?x:[x];for(let t=0;t<v.length;++t){f.hasKey(v[t])||f.add(v[t],b[t],Array.isArray(y)?y[0]:y);const e=u.indexOf(v[t].name);-1!==e&&(c[e]=b[t])}a||Object(s.Gd)(d)}return f.disposeMasks(),o?c:c[0]}function recipientMap2Counts(e){const t={};for(const n in e)t[n]=e[n].size;return t}function getTopologicalSortAndRecipientCountsForOneFetch(e,t){const n=new Set,r=[],a={};for(const i of t.names())n.add(i);const s=[],o=[];for(s.push(e);s.length>0;){const e=s[s.length-1];if(n.has(e.name)){s.pop();continue}const t=o[o.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),r.push(e),n.add(e.name),t&&o.pop();else{o.push(s.length-1);for(const t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),n.has(t.name)||s.push(t)}}return{sorted:r,recipientMap:a}}function getNodeOutputs(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}class container_Container extends topology_Layer{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=getUid(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],generic_utils_unique(this.inputs).length!==this.inputs.length)throw new ValueError(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);generic_utils_unique(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const g of this.outputs){const e=g.sourceLayer,t=g.nodeIndex,n=g.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(t),this.outputLayersTensorIndices.push(n)}for(const g of this.inputs){const e=g.sourceLayer,t=g.nodeIndex,n=g.tensorIndex;assert(0===t,"input layer has >1 nodes"),assert(0===n,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(t),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let g=0;g<this.inputLayers.length;g++){const t=this.inputLayers[g];if(!(t instanceof input_layer_InputLayer))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${g} (0-based) originates from layer type ${t.getClassName()}.`);this.inputNames.push(t.name),this.feedInputShapes.push(t.batchInputShape),this.feedInputNames.push(t.name)}for(const g of this.outputLayers)this.outputNames.push(g.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},a={},s={},o=[],buildMapOfGraph=(e,t,n,r,a,i)=>{null!=r&&null!=a&&null!=i||(r=e.sourceLayer,a=e.nodeIndex,i=e.tensorIndex);const u=r.inboundNodes[a];if(-1!==n.indexOf(u))throw new RuntimeError(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(container_Container.nodeKey(r,a)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let s=0;s<c;s++){const e=u.inputTensors[s],r=u.inboundLayers[s],a=u.nodeIndices[s],o=u.tensorIndices[s];buildMapOfGraph(e,t,n,r,a,o)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);o.push(u)},i=[],u=[];for(const g of this.outputs)buildMapOfGraph(g,i,u);const c=o.slice().reverse();for(const g of c){n[g.id]=g,g.id in t||(t[g.id]=0);let e=t[g.id];const s=null==r[g.outboundLayer.id]?0:r[g.outboundLayer.id];e=Math.max(e,s),r[g.outboundLayer.id]=e,a[g.outboundLayer.id]=g.outboundLayer,t[g.id]=e;for(let r=0;r<g.inboundLayers.length;r++){const a=g.inboundLayers[r],s=g.nodeIndices[r],o=a.inboundNodes[s],i=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(e+1,i),n[o.id]=o}}const l={};for(const g in t){const e=t[g];e in l||(l[e]=[]),l[e].push(n[g])}const d={};for(const g in r){const e=r[g];e in d||(d[e]=[]),d[e].push(a[g])}let p=Object.keys(d).map((e=>parseInt(e,10))).sort(reverseNumberCompare);this.layers=[];for(const g of p){const e=d[g];e.sort(((e,t)=>{const n=s[e.id],r=s[t.id];return n<r?-1:n>r?1:0}));for(const t of e)t instanceof container_Container&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=d,p=Object.keys(l).map((e=>parseInt(e,10))).sort(reverseNumberCompare);const h=this.inputs.slice(),f=[];for(const g of p)for(const e of l[g]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===h.indexOf(n))throw new RuntimeError(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${t.name}". The following previous layers were accessed without issue: ${f}`);for(const t of e.outputTensors)h.push(t);f.push(t.name)}}this.nodesByDepth=l;const m=this.layers.map((e=>e.name));for(const g of m){const e=m.filter((e=>e===g)).length;if(1!==e)throw new RuntimeError(`The name "${g}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(m))}this.outboundNodes=[],this.inboundNodes=[],new Node({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new ValueError("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const s of this.layers)for(const e of s.weights){if(null!=n[e.originalName])throw new ValueError(`Duplicate weight name: ${e.originalName}`);n[e.originalName]=e,r++}const a=[];for(const s in e){let r=s;if(null==n[s]){const e=s.split("/");r=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[r])a.push([n[r],e[s]]);else if(t)throw new ValueError(`Provided weight data has no target variable: ${s}`);delete n[r]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new ValueError(`${e.length} of ${r} weights are not set: ${e}`)}batchSetValue(a)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers 3.3.0",t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=convertTsToPythonic(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Object(s.hf)((()=>{e=toList(e);const n=new executor_FeedDict;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return execute(this.outputs,n,t)}))}computeMask(e,t){return Object(s.hf)((()=>{let n;return e=toList(e),n=null==t?pyListRepeat(null,e.length):toList(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=normalizeShapeList(e);if(t.length!==this.inputLayers.length)throw new ValueError(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let o=0;o<t.length;o++){const e=this.inputLayers[o],r=t[o];n[e.name+"_0_0"]=r}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(reverseNumberCompare);if(r.length>1)for(const o of r){const e=this.nodesByDepth[o];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(e.id))continue;const r=[];for(let o=0;o<t.inboundLayers.length;o++){const e=t.inboundLayers[o],a=t.nodeIndices[o],s=t.tensorIndices[o],i=n[`${e.name}_${a}_${s}`];r.push(i)}const a=normalizeShapeList(e.computeOutputShape(singletonOrArray(r))),s=e.inboundNodes.indexOf(t);for(let t=0;t<a.length;t++){n[`${e.name}_${s}_${t}`]=a[t]}}}const a=[],s=[];for(let o=0;o<this.outputLayers.length;o++){const e=this.outputLayers[o],t=this.outputLayersNodeIndices[o],n=this.outputLayersTensorIndices[o],r=`${e.name}_${t}_${n}`;s.push(r)}for(let o=0;o<s.length;o++){const e=s[o];assert(e in n),a.push(n[e])}return singletonOrArray(a)}runInternalGraph(e,t){null==t&&(t=pyListRepeat(null,e.length));const n={};for(let i=0;i<this.inputs.length;++i){const r=this.inputs[i],a=e[i],s=t[i];n[r.id]=[a,s]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(reverseNumberCompare);for(const i of r){const e=this.nodesByDepth[i];for(const t of e){const e=t.outboundLayer,r=t.inputTensors,a=t.outputTensors,s=new Array;for(const t of r)t.id in n&&s.push(n[t.id]);if(s.length===r.length){let r,o,i,u,c={};if(null!=t.callArgs&&(c=t.callArgs),1===s.length){const[t,n]=s[0];null==c.mask&&(c.mask=n),i=toList(e.call(t,c)),u=toList(e.computeMask(t,n)),r=[t],o=[n]}else r=s.map((e=>e[0])),o=s.map((e=>e[1])),null==c.mask&&(c.mask=o),i=toList(e.call(r,c)),u=toList(e.computeMask(r,o));if(e.activityRegularizer)throw new NotImplementedError("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e){const t=a[e],r=i[e],s=u[e];n[t.id]=[r,s]}}}}const a=[],s=[],o=[];for(const i of this.outputs){assert(i.id in n,`Could not compute output ${i.name} : ${i.id}`);const[e,t]=n[i.id];o.push(e.shape),a.push(e),s.push(t)}return[a,s,o]}buildNodeConversionMap(e){const t={};let n;for(const r of this.layers){n=r instanceof container_Container?1:0;for(let e=0;e<r.inboundNodes.length;e++){const a=container_Container.nodeKey(r,e);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new ValueError(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new ValueError("Provide either a layer name or layer index");for(const n of this.layers)if(n.name===e)return n;throw new ValueError(`No such layer: ${e}`)}calculateLosses(){return Object(s.hf)((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=container_Container.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const o of this.layers){const e=o.getClassName(),r=o.getConfig(),a=[];for(let n=0;n<o.inboundNodes.length;n++){const e=o.inboundNodes[n],r=container_Container.nodeKey(o,n);let i={};if(this.containerNodes.has(r)){if(e.callArgs)try{JSON.stringify(e.callArgs),i=e.callArgs}catch(s){console.warn(`Layer ${o.name} was passed non-serializable keyword arguments: ${e.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(e.inboundLayers.length>0){const n=[];for(let r=0;r<e.inboundLayers.length;r++){const a=e.inboundLayers[r],s=e.nodeIndices[r],o=e.tensorIndices[r];let u=t[container_Container.nodeKey(a,s)];null==u&&(u=0),n.push([a.name,u,o,i])}a.push(n)}}}const i={};i.name=o.name,i.className=e,i.config=r,i.inboundNodes=a,n.push(i)}e.layers=n;const r=[];for(let o=0;o<this.inputLayers.length;o++){const e=this.inputLayers[o],n=this.inputLayersNodeIndices[o],a=container_Container.nodeKey(e,n);if(!this.containerNodes.has(a))continue;let s=t[a];null==s&&(s=0);const i=this.inputLayersTensorIndices[o];r.push([e.name,s,i])}e.inputLayers=r;const a=[];for(let o=0;o<this.outputLayers.length;o++){const e=this.outputLayers[o],n=this.outputLayersNodeIndices[o],r=container_Container.nodeKey(e,n);if(!this.containerNodes.has(r))continue;let s=t[r];null==s&&(s=0);const i=this.outputLayersTensorIndices[o];a.push([e.name,s,i])}return e.outputLayers=a,e}static fromConfig(e,t,n={},r=!1){const a={},s={};function addUnprocessedNode(e,t){e.name in s?s[e.name].push(t):s[e.name]=[t]}function processNode(e,t){const n=[];let r;for(const s of t){const o=s[0],i=s[1],u=s[2];if(r=null==s[3]?{}:s[3],!(o in a))return void addUnprocessedNode(e,t);const c=a[o];if(c.inboundNodes.length<=i)return void addUnprocessedNode(e,t);const l=c.inboundNodes[i];n.push(l.outputTensors[u])}n.length>0&&e.apply(singletonOrArray(n),r)}function processLayer(e){const n=e.name,s=deserialize(e,null!=t.customObjects?t.customObjects:{});s.setFastWeightInitDuringBuild(r),a[n]=s;e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new ValueError(`Corrupted configuration, expected array for nodeData: ${e}`);addUnprocessedNode(s,e)}))}const o=t.name,i=t.layers;for(const p of i)processLayer(p);for(;!isObjectEmpty(s);)for(const e of i){const t=a[e.name];if(t.name in s){const e=s[t.name];delete s[t.name];for(const n of e)processNode(t,n)}}const u=[],c=[],l=t.inputLayers;for(const p of l){const e=p[0],t=p[1],n=p[2];assert(e in a);const r=a[e].inboundNodes[t].outputTensors;u.push(r[n])}const d=t.outputLayers;for(const p of d){const e=p[0],t=p[1],n=p[2];assert(e in a);const r=a[e].inboundNodes[t].outputTensors;c.push(r[n])}return new e({inputs:u,outputs:c,name:o})}get stateful(){if(this._stateful)throw new ValueError("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Object(s.hf)((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function standardizeSampleOrClassWeights(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function standardizeClassWeights(e,t){return standardizeSampleOrClassWeights(e,t,"classWeight")}async function standardizeWeights(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=Object(s.hf)((()=>{if(1===e.shape.length)return e.clone();if(2===e.shape.length){if(e.shape[1]>1){const t=1;return e.argMax(t)}if(1===e.shape[1])return e.reshape([e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());Object(s.Gd)(t);const a=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])})),Object(s.ef)(a,"float32")}return null}function computeWeightedLoss(e,t){return Object(s.oe)(e,t)}function standardizeDataIteratorOutput(e,t){let n,r;const a=t;n=a.xs,r=a.ys,s.of.assert(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const o=flattenTensorOrArrayOrMap("input",e.inputNames,n),i=flattenTensorOrArrayOrMap("output",e.outputNames,r),u=o[0].shape[0];s.of.assert(o.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${o.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),s.of.assert(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let c=0;c<o.length;c++)s.of.assert(o[c].shape[0]===u,(()=>`Batch size mismatch: input ${e.inputNames[c]} has ${o[c].shape[0]}; expected  ${u} based on input ${e.inputNames[0]}.`));for(let c=0;c<i.length;c++)s.of.assert(i[c].shape[0]===u,(()=>`Batch size mismatch: output ${e.outputNames[c]} has ${i[c].shape[0]}; expected  ${u} based on input ${e.inputNames[0]}.`));return{xs:o,ys:i}}function flattenTensorOrArrayOrMap(e,t,n){if(n instanceof s.Tc)return[n];if(Array.isArray(n))return s.of.assert(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const a of t){if(null==n[a])throw new ValueError(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}async function fitDataset(e,t,n){const r=null!=n.batchesPerEpoch;if(s.of.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),s.of.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),s.of.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),s.of.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),s.of.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const a=null!=n.validationData;let o,i;if(a)if(isDatasetObject(n.validationData))s.of.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function standardizeTensorValidationData(e){if(3===e.length)throw new NotImplementedError("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);o=e.xs,i=e.ys}const u=e.makeTrainFunction(),c=e.getDedupedMetricsNames();let l;l=a?c.slice().concat(c.map((e=>"val_"+e))):c.slice();const d=standardizeCallbacks(n.callbacks,n.yieldEvery),p=null==n.verbose?1:n.verbose,{callbackList:h,history:f}=configureCallbacks(d,p,n.epochs,null,null,function getStepsPerEpoch(e,t){let n=null;null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size);return n}(t,n),null,a,l);h.setModel(e),e.history=f,await h.onTrainBegin(),e.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,g=await t.iterator();for(;m<n.epochs;){const l={};await h.onEpochBegin(m);let d=0,p=0;for(r||(g=await t.iterator());!r||d<n.batchesPerEpoch;){const t=await g.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${d} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:a}=standardizeDataIteratorOutput(e,t.value),o={};o.batch=p,o.size=r[0].shape[0],await h.onBatchBegin(p,o);const i=[];if(null!=n.classWeight){const t=standardizeClassWeights(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await standardizeWeights(a[e],null,t[e]))}const l=r.concat(a).concat(i),f=u(l);s.Gd(l);for(let e=0;e<c.length;++e){const t=c[e],n=f[e];o[t]=n,s.Yd(n)}await h.onBatchEnd(p,o),disposeTensorsInLogs(o),p++,d++}if(r?d>=n.batchesPerEpoch:t.done){if(a){let t;t=isDatasetObject(n.validationData)?toList(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):toList(e.evaluate(o,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await h.onEpochEnd(m,l),m++,e.stopTraining_)break}return await h.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function isDatasetObject(e){return"function"==typeof e.iterator}function checkBatchSize(e){s.of.assert(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function sliceArrays(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>sliceAlongFirstAxis(e,t,n-t))):sliceAlongFirstAxis(e,t,n-t)}function sliceArraysByIndices(e,t){return s.hf((()=>null==e?null:Array.isArray(e)?e.map((e=>sliceArraysByIndices(e,t))):tfjs_backend_gather(e,"int32"===t.dtype?t:t.toInt())))}function makeBatches(e,t){const n=[];let r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}async function fitTensors(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let a,o,i,u,c,l,d;e.isTraining=!0;try{const p=null==r.batchSize?32:r.batchSize;checkBatchSize(p);const h=!1,f=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,h,p);a=f[0],o=f[1],d=f[2];let m,g=!1;if(null!=r.validationData&&r.validationData.length>0){if(g=!0,2!==r.validationData.length)throw 3===r.validationData.length?new NotImplementedError("validationData including sample weights is not supported yet."):new ValueError(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);i=r.validationData[0],u=r.validationData[1];const t=!0,n=await e.standardizeUserData(i,u,null,null,t,p);c=n[0],l=n[1],m=c.concat(l)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){g=!0;const e=Math.floor(a[0].shape[0]*(1-r.validationSplit)),t=a[0].shape[0];c=sliceArrays(a,e,t),a=sliceArrays(a,0,e),l=sliceArrays(o,e,t),o=sliceArrays(o,0,e),m=c.concat(l)}else null!=r.validationSteps&&(g=!0);const b=a.concat(o).concat(d);e.checkTrainableWeightsConsistency();const y=e.makeTrainFunction(),x=e.getDedupedMetricsNames();let v,k;g?(e.makeTestFunction(),v=e.testFunction,k=x.slice().concat(x.map((e=>"val_"+e)))):(v=null,m=[],k=x.slice());const w=standardizeCallbacks(r.callbacks,r.yieldEvery);return await async function fitLoop(e,t,n,r,a,o,i,u,c,l,d,p,h,f,m){null==a&&(a=32),null==o&&(o=1),null==d&&(d=!0),null==h&&(h=0);let g=!1;if(null!=c&&null!=l&&(g=!0),null!=m&&(g=!0,null==f))throw new ValueError("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const b=e.checkNumSamples(n,a,f,"steps_per_epoch");let y;null!=b&&(y=range(0,b)),null==i&&(i=1);const{callbackList:x,history:v}=configureCallbacks(u,i,o,h,b,f,a,g,p);x.setModel(e),e.history=v,await x.onTrainBegin(),e.stopTraining_=!1;for(let k=h;k<o;++k){await x.onEpochBegin(k);const o={};if(null!=f)throw new NotImplementedError("stepsPerEpoch mode is not implemented yet.");{if("batch"===d)throw new NotImplementedError("batch shuffling is not implemneted yet");d&&s.of.shuffle(y);const i=Object(s.ef)(y),u=makeBatches(b,a);for(let d=0;d<u.length;++d){const p={};if(await x.onBatchBegin(d,p),s.hf((()=>{const h=u[d][0],f=u[d][1],m=sliceAlongFirstAxis(i,h,f-h);p.batch=d,p.size=f-h;const b=sliceArraysByIndices(n,m),y=t(b);for(let e=0;e<r.length;++e){const t=r[e],n=y[e];p[t]=n,s.Yd(n)}if(d===u.length-1&&g){const t=e.testLoop(c,l,a);for(let e=0;e<r.length;++e){const n=r[e],a=t[e];s.Yd(a),o["val_"+n]=a}}})),await x.onBatchEnd(d,p),disposeTensorsInLogs(p),e.stopTraining_)break}i.dispose()}if(await x.onEpochEnd(k,o),e.stopTraining_)break}return await x.onTrainEnd(),await e.history.syncData(),e.history}(e,y,b,x,p,r.epochs,r.verbose,w,v,m,r.shuffle,k,r.initialEpoch,null,null)}finally{e.isTraining=!1,disposeNewTensors(a,t),disposeNewTensors(o,n),disposeNewTensors(c,i),disposeNewTensors(l,u),null!=d&&s.Gd(d)}}function ensureTensorsRank2OrHigher(e){const t=[];e instanceof s.Tc&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(expandDims(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function disposeNewTensors(e,t){if(null==e)return;const n=[];if(t instanceof s.Tc)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const a in t){const e=t[a];n.push(e.id)}const r=[];if(e instanceof s.Tc)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const a in e){const t=e[a];-1===n.indexOf(t.id)&&r.push(t)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function isDataArray(e){return Array.isArray(e)}function isDataDict(e){return!function isDataTensor(e){return e instanceof s.Tc}(e)&&!isDataArray(e)}function standardizeInputData(e,t,n,r=!0,a=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(isDataArray(e)&&e.length>0)t=!0;else if(isDataDict(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new ValueError(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let s;if(isDataDict(e)){e=e,s=[];for(const n of t){if(null==e[n])throw new ValueError(`No data provided for "${n}". Need data for each key in: ${t}`);s.push(e[n])}}else if(isDataArray(e)){if((e=e).length!==t.length)throw new ValueError(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(e=e,t.length>1)throw new ValueError(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=ensureTensorsRank2OrHigher(s),null!=n)for(let o=0;o<t.length;++o){if(null==n[o])continue;const e=s[o];if(e.shape.length!==n[o].length)throw new ValueError(`Error when checking ${a}: expected ${t[o]} to have ${n[o].length} dimension(s). but got array with shape ${e.shape}`);for(let s=0;s<n[o].length;++s){if(0===s&&!r)continue;const i=e.shape[s],u=n[o][s];if(null!=u&&u>=0&&i!==u)throw new ValueError(`Error when checking ${a}: expected ${t[o]} to have shape [${n[o]}], but got array with shape [${e.shape}].`)}}return s}function checkInputData(e,t,n,r=!0,a=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new ValueError(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new ValueError(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(null!=n)for(let o=0;o<t.length;++o){if(null==n[o])continue;const e=s[o];if(e.shape.length!==n[o].length)throw new ValueError(`Error when checking ${a}: expected ${t[o]} to have ${n[o].length} dimension(s), but got array with shape ${JSON.stringify(e.shape)}`);for(let s=0;s<n[o].length;++s){if(0===s&&!r)continue;const i=e.shape[s],u=n[o][s];if(null!=u&&u!==i)throw new ValueError(`Error when checking ${a}: expected ${t[o]} to have shape ${JSON.stringify(n[o])} but got array with shape ${JSON.stringify(e.shape)}.`)}}}class training_LayersModel extends container_Container{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new ValueError("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");printSummary(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function getOptimizer(e){const t={Adagrad:()=>s.jf.adagrad(.01),Adadelta:()=>s.jf.adadelta(1,.95,common_epsilon()),Adam:()=>s.jf.adam(.001,.9,.999,common_epsilon()),Adamax:()=>s.jf.adamax(.002,.9,.999,common_epsilon(),0),RMSProp:()=>s.jf.rmsprop(.001,.9,0,common_epsilon()),SGD:()=>s.jf.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new ValueError(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof s.cc))throw new ValueError("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new ValueError(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>get(e)))}else{const n=get(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new ValueError(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(get(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){const e=this.internalOutputShapes[a],t=this.outputNames[a];this.feedOutputNames.push(t),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[a])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],nameScope("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function collectMetrics(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),appendMetric=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};nameScope("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,r,a;for(const s of t){if("string"==typeof s&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(s)){const t=this.internalOutputShapes[e];let o;1===t[t.length-1]||this.lossFunctions[e]===binaryCrossentropy?-1!==["accuracy","acc"].indexOf(s)?r=binaryAccuracy:-1!==["crossentropy","ce"].indexOf(s)&&(r=metrics_binaryCrossentropy):this.lossFunctions[e]===sparseCategoricalCrossentropy?-1!==["accuracy","acc"].indexOf(s)?r=sparseCategoricalAccuracy:-1!==["crossentropy","ce"].indexOf(s)&&(r=da):-1!==["accuracy","acc"].indexOf(s)?r=categoricalAccuracy:-1!==["crossentropy","ce"].indexOf(s)&&(r=la),-1!==["accuracy","acc"].indexOf(s)?o="acc":-1!==["crossentropy","ce"].indexOf(s)&&(o="ce"),a=r,n=""+o}else{const e=metrics_get(s);a=e,n=""+getLossOrMetricName(s)}let t;nameScope(n,(()=>{t=a})),appendMetric(e,n,t)}})(r[e])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;checkBatchSize(r);const a=this.standardizeUserDataXY(e,t,!0,r);try{const s=a[0].concat(a[1]);this.makeTestFunction();const o=this.testFunction;return singletonOrArray(this.testLoop(o,s,r,n.verbose,n.steps))}finally{disposeNewTensors(a[0],e),disposeNewTensors(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function evaluateDataset(e,t,n){const r=null!=(n=n||{}).batches,a=e.testFunction;let o=[];if(n.verbose>0)throw new NotImplementedError("Verbose mode is not implemented yet.");s.of.assert(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i=function isLazyIteratorObject(e){return"function"==typeof e.next}(t)?t:await t.iterator();let u=0,c=0;for(;!r||c<n.batches;){const t=await i.next();if(o=s.hf((()=>{if(t.value){const{xs:n,ys:r}=standardizeDataIteratorOutput(e,t.value),i=n.concat(r),l=s.hf((()=>a(i)));if(s.Gd(i),0===c)for(let e=0;e<l.length;++e)o.push(Object(s.Ge)(0));const d=i[0].shape[0];for(let e=0;e<l.length;++e){const t=l[e],n=o[e];o[e]=s.hf((()=>s.fd(o[e],s.oe(d,t)))),c>0&&s.Gd(n)}s.Gd(l),u+=d,++c}return o})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let l=0;l<o.length;++l){const e=o[l];o[l]=s.Hd(o[l],u),s.Gd(e)}return singletonOrArray(o)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let a;if(null!=n){if(a=null,null!=t)throw new ValueError(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new ValueError(`Either the input data should have a defined shape, or ${r} shoud be specified.`);a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new ValueError("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],a=this.retrieveSymbolicTensors(r),o=new executor_FeedDict;if(e instanceof s.Tc&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new ValueError(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)o.add(this.inputs[t],e[t])}else for(const s of this.inputs){const t=e[s.name];if(null==t)throw new ValueError(`No value is provided for the model's input ${s.name}`);o.add(s,t)}const i=execute(a,o);return n?i:i[0]}retrieveSymbolicTensors(e){const t=pyListRepeat(null,e.length);let n=e.length;for(const r of this.layers){const a=Array.isArray(r.output)?r.output:[r.output],s=a.map((e=>e.name));for(let r=0;r<e.length;++r){const o=s.indexOf(e[r]);if(-1!==o&&(t[r]=a[o],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new ValueError(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return s.hf((()=>{const r=this.checkNumSamples(e);if(n)throw new NotImplementedError("Verbose predictLoop() is not implemented yet.");const a=makeBatches(r,t),o=this.outputs.map((e=>[]));for(let t=0;t<a.length;++t){s.hf((()=>{const n=a[t][0],r=a[t][1],s=sliceArrays(e,n,r),o=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)o.push({key:this.inputs[e],value:s[e]});else o.push({key:this.inputs[0],value:s});const i=new executor_FeedDict(o);return execute(this.outputs,i)})).forEach(((e,t)=>o[t].push(e)))}return singletonOrArray(o.map((e=>s.vd(e,0))))}))}predict(e,t={}){const n=ensureTensorsRank2OrHigher(e);checkInputData(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return checkBatchSize(r),this.predictLoop(n,r)}finally{disposeNewTensors(n,e)}}predictOnBatch(e){checkInputData(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new RuntimeError("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let s=0;s<this.feedOutputShapes.length;++s){const e=this.feedOutputShapes[s];this.feedLossFns[s]===sparseCategoricalCrossentropy?a.push(e.slice(0,e.length-1).concat([1])):a.push(e)}if(function checkArrayLengths(e,t,n){const r=generic_utils_unique(e.map((e=>e.shape[0])));r.sort();const a=generic_utils_unique(t.map((e=>e.shape[0])));if(a.sort(),r.length>1)throw new ValueError(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(a.length>1)throw new ValueError(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&a.length>0&&!s.of.arraysEqual(r,a))throw new ValueError(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${a[0]} target sample(s).`)}(e=standardizeInputData(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=standardizeInputData(t,this.feedOutputNames,a,!1,"target")),function checkLossAndTargetCompatibility(e,t,n){const r=[meanSquaredError,binaryCrossentropy,categoricalCrossentropy];for(let a=0;a<e.length;++a){const s=e[a],o=t[a],i=n[a];if(null!=o){if(o===categoricalCrossentropy&&1===s.shape[s.shape.length-1])throw new ValueError(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(o)){const e=s.shape.slice(1),t=i.slice(1);for(let n=0;n<e.length;++n){const r=e[n],a=t[n];if(null!=a&&r!==a)throw new ValueError(`A target Tensor with shape ${s.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new ValueError(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,a=!0,s){const[o,i]=this.standardizeUserDataXY(e,t,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const e=standardizeClassWeights(r,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await standardizeWeights(i[t],null,e[t]))}return[o,i,u]}testLoop(e,t,n,r=0,a){return s.hf((()=>{const o=this.checkNumSamples(t,n,a,"steps"),i=[];if(r>0)throw new NotImplementedError("Verbose mode is not implemented yet.");if(null!=a)throw new NotImplementedError("steps mode in testLoop() is not implemented yet");{const r=makeBatches(o,n),a=Object(s.ef)(range(0,o));for(let n=0;n<r.length;++n){const o=r[n][0],u=r[n][1],c=sliceAlongFirstAxis(a,o,u-o),l=sliceArraysByIndices(t,c),d=e(l);if(0===n)for(let e=0;e<d.length;++e)i.push(Object(s.Ge)(0));for(let e=0;e<d.length;++e){const t=d[e];i[e]=s.fd(i[e],s.oe(u-o,t))}}for(let e=0;e<i.length;++e)i[e]=s.Hd(i[e],o)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let a=r;if(generic_utils_count(e,r)>1){a+=`_${generic_utils_count(e.slice(0,n),r)}`}t.push(a)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),o=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new executor_FeedDict(e),u=execute(this.outputs,i,{training:!0});let c;for(let n=0;n<this.lossFunctions.length;++n){let e=(0,this.lossFunctions[n])(r[n],u[n]);null!=a[n]&&(e=computeWeightedLoss(e,a[n]));const o=s.je(e);t.push(o),c=0===n?e:s.fd(c,e)}for(let n=0;n<this.metricsTensors.length;++n){let e;if(this.outputs.length>1&&n<this.outputs.length)e=t[n];else{const t=this.metricsTensors[n][0],a=this.metricsTensors[n][1];e=s.je(t(r[a],u[a]))}s.Yd(e),o.push(e)}return c=s.je(c),this.calculateLosses().forEach((e=>{c=s.fd(c,e)})),c}),!0,i)].concat(o)}}makeTestFunction(){this.testFunction=e=>s.hf((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=[];for(let e=0;e<this.inputs.length;++e)o.push({key:this.inputs[e],value:r[e]});const i=new executor_FeedDict(o),u=execute(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],o=s.je(r(a[e],u[e]));n=0===e?o:s.fd(n,o),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],o=s.je(n(a[r],u[r]));t.push(o)}return t}))}async fit(e,t,n={}){return fitTensors(this,e,t,n)}async fitDataset(e,t){return fitDataset(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],a=n[1],o=this.makeTrainFunction()(r.concat(a)),i=[];for(const s of o){const e=await s.data();i.push(e[0])}return s.Gd(o),singletonOrArray(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let s=0;s<r.length;++s)n&&!r[s].trainable||t.push({name:r[s].originalName,tensor:a[s]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=s.ke().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-s.ke().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=toSnakeCase(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>toSnakeCase(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=toSnakeCase(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[toSnakeCase(getLossOrMetricName(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>toSnakeCase(getLossOrMetricName(e))));{const e={};for(const t in this.metrics)e[t]=toSnakeCase(getLossOrMetricName(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=deserialize(convertPythonicToTs(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=toCamelCase(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>toCamelCase(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=toCamelCase(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>toCamelCase(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=toCamelCase(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=s.Xd.getSaveHandlers(e);if(0===t.length)throw new ValueError(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new ValueError(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new ValueError("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await s.Xd.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v3.3.0",convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:a}=await s.Xd.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...a),n.data=s.Xd.concatenateArrayBuffers([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;checkUserDefinedMetadata(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){checkUserDefinedMetadata(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}training_LayersModel.className="Model",s.Je.registerClass(training_LayersModel);class Functional extends training_LayersModel{}Functional.className="Functional",s.Je.registerClass(Functional);class models_Sequential extends training_LayersModel{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:getUid("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new ValueError(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof models_Sequential||e instanceof training_LayersModel;let n;if(t){if(n=e,1!==n.outputs.length)throw new ValueError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new ValueError("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new ValueError("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=Input({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new ValueError(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new ValueError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=getSourceInputs(this.outputs[0])}this.inboundNodes=[],new Node({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:pyListRepeat(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(getExactlyOneShape(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new training_LayersModel({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new RuntimeError("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new RuntimeError("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new RuntimeError("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new RuntimeError("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let a,o={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new ValueError("Legacy serialization format not supported yet.");a=t}else s.of.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),a=t.layers,delete t.layers,o=t;const i=new e(o);if(!(i instanceof models_Sequential))throw new NotImplementedError(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const s of a){const e=deserialize(s,void 0,r);r&&e.setFastWeightInitDuringBuild(!0),i.add(e)}return i}set stopTraining(e){if(null==this.model)throw new ValueError("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new ValueError("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}function sequential(e){return new models_Sequential(e)}function exports_input(e){return Input(e)}models_Sequential.className="Sequential",s.Je.registerClass(models_Sequential);class activations_Activation extends s.Je.Serializable{getConfig(){return{}}}class activations_Elu extends activations_Activation{apply(e,t=1){return function tfjs_backend_elu(e,t=1){if(1!==t)throw new NotImplementedError(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return s.Jd(e)}(e,t)}}activations_Elu.className="elu",s.Je.registerClass(activations_Elu);class activations_Selu extends activations_Activation{apply(e){return s.He(e)}}activations_Selu.className="selu",s.Je.registerClass(activations_Selu);class activations_Relu extends activations_Activation{apply(e){return s.De(e)}}activations_Relu.className="relu",s.Je.registerClass(activations_Relu);class activations_Relu6 extends activations_Activation{apply(e){return Object(s.hf)((()=>s.me(6,s.De(e))))}}activations_Relu6.className="relu6",s.Je.registerClass(activations_Relu6);class Linear extends activations_Activation{apply(e){return e}}Linear.className="linear",s.Je.registerClass(Linear);class activations_Sigmoid extends activations_Activation{apply(e){return s.Le(e)}}activations_Sigmoid.className="sigmoid",s.Je.registerClass(activations_Sigmoid);class activations_HardSigmoid extends activations_Activation{apply(e){return function hardSigmoid(e){return Object(s.hf)((()=>{const t=s.fd(.5,s.oe(.2,e));return s.td(t,0,1)}))}(e)}}activations_HardSigmoid.className="hardSigmoid",s.Je.registerClass(activations_HardSigmoid);class activations_Softplus extends activations_Activation{apply(e){return s.Te(e)}}activations_Softplus.className="softplus",s.Je.registerClass(activations_Softplus);class activations_Softsign extends activations_Activation{apply(e){return function softsign(e){return Object(s.hf)((()=>s.Hd(e,s.ed(e).add(1))))}(e)}}activations_Softsign.className="softsign",s.Je.registerClass(activations_Softsign);class activations_Tanh extends activations_Activation{apply(e){return s.cf(e)}}activations_Tanh.className="tanh",s.Je.registerClass(activations_Tanh);class activations_Softmax extends activations_Activation{apply(e,t=-1){return s.Se(e,t)}}activations_Softmax.className="softmax",s.Je.registerClass(activations_Softmax);class activations_LogSoftmax extends activations_Activation{apply(e,t=-1){return s.de(e,t)}}activations_LogSoftmax.className="logSoftmax",s.Je.registerClass(activations_LogSoftmax);class activations_Swish extends activations_Activation{apply(e,t=1){return Object(s.hf)((()=>s.Le(e.mul(t)).mul(e)))}}function serializeActivation(e){return e.getClassName()}function deserializeActivation(e,t={}){return deserializeKerasObject(e,s.Je.SerializationMap.getMap().classNameMap,t,"activation")}function getActivation(e){if(null==e){const e={className:"linear",config:{}};return deserializeActivation(e)}if("string"==typeof e){const t={};return t.className=e,t.config={},deserializeActivation(t)}return e instanceof activations_Activation?e:deserializeActivation(e)}function assertObjectArgs(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}activations_Swish.className="swish",s.Je.registerClass(activations_Swish);class regularizers_Regularizer extends s.Je.Serializable{}class regularizers_L1L2 extends regularizers_Regularizer{constructor(e){super(),assertObjectArgs(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Object(s.hf)((()=>{let t=Object(s.tf)([1]);return this.hasL1&&(t=Object(s.fd)(t,Object(s.af)(s.oe(this.l1,Object(s.ed)(e))))),this.hasL2&&(t=Object(s.fd)(t,Object(s.af)(s.oe(this.l2,tfjs_backend_square(e))))),t.asScalar()}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}regularizers_L1L2.className="L1L2",s.Je.registerClass(regularizers_L1L2);const ga={l1l2:"L1L2"};function serializeRegularizer(e){return serializeKerasObject(e)}function deserializeRegularizer(e,t={}){return deserializeKerasObject(e,s.Je.SerializationMap.getMap().classNameMap,t,"regularizer")}function getRegularizer(e){if(null==e)return null;if("string"==typeof e){return deserializeRegularizer({className:e in ga?ga[e]:e,config:{}})}return e instanceof regularizers_Regularizer?e:deserializeRegularizer(e)}class advanced_activations_ReLU extends topology_Layer{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=getExactlyOneTensor(e);let n=Object(s.De)(e);return null!=this.maxValue&&(n=Object(s.td)(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}advanced_activations_ReLU.className="ReLU",s.Je.registerClass(advanced_activations_ReLU);class advanced_activations_LeakyReLU extends topology_Layer{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=getExactlyOneTensor(e);return Object(s.ae)(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}advanced_activations_LeakyReLU.className="LeakyReLU",s.Je.registerClass(advanced_activations_LeakyReLU);class advanced_activations_PReLU extends topology_Layer{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=getInitializer(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=getRegularizer(e.alphaRegularizer),this.alphaConstraint=getConstraint(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new ValueError(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=getExactlyOneShape(e)).slice(1);if(null!=this.sharedAxes)for(const r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let r=1;r<e.length;++r)n[r]=e[r];this.inputSpec=[new InputSpec({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=getExactlyOneTensor(e),Object(s.xe)(e,this.alpha.read())}getConfig(){const e={alphaInitializer:serializeInitializer(this.alphaInitializer),alphaRegularizer:serializeRegularizer(this.alphaRegularizer),alphaConstraint:serializeConstraint(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}advanced_activations_PReLU.className="PReLU",s.Je.registerClass(advanced_activations_PReLU);class advanced_activations_ELU extends topology_Layer{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new NotImplementedError(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=getExactlyOneTensor(e);return Object(s.Jd)(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}advanced_activations_ELU.className="ELU",s.Je.registerClass(advanced_activations_ELU);class advanced_activations_ThresholdedReLU extends topology_Layer{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=getExactlyOneTensor(e);return n.mul(tfjs_backend_cast(n.greater(this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}advanced_activations_ThresholdedReLU.className="ThresholdedReLU",s.Je.registerClass(advanced_activations_ThresholdedReLU);class advanced_activations_Softmax extends topology_Layer{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new activations_Softmax).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=getExactlyOneTensor(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function normalizeArray(e,t,n){if("number"==typeof e)return pyListRepeat(e,t);if(e.length!==t)throw new ValueError(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let a=0;a<t;++a){const s=e[a];if((r=s)!==parseInt(r.toString(),10))throw new ValueError(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${s}`)}return e;var r}function convOutputLength(e,t,n,r,a=1){if(null==e)return e;let s;return s="same"===n?e:e-(t+(t-1)*(a-1))+1,Math.floor((s+r-1)/r)}function deconvLength(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+math_utils_max([n-t,0]);else{if("same"!==r)throw new ValueError(`Unsupport padding mode: ${r}.`);e*=t}return e}function preprocessConv2DInput(e,t){return Object(s.hf)((()=>(checkDataFormat(t),"channelsFirst"===t?s.kf(e,[0,2,3,1]):e)))}function preprocessConv3DInput(e,t){return Object(s.hf)((()=>(checkDataFormat(t),"channelsFirst"===t?s.kf(e,[0,2,3,4,1]):e)))}function conv1dWithBias(e,t,n,r=1,a="valid",o,i=1){return Object(s.hf)((()=>{if(null==o&&(o="channelsLast"),checkDataFormat(o),3!==e.shape.length)throw new ValueError(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new ValueError(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new ValueError(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===o&&(e=s.kf(e,[0,2,1])),"causal"===a)throw new NotImplementedError("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let u=s.Ad(e,t,r,"same"===a?"same":"valid","NWC",i);return null!=n&&(u=biasAdd(u,n)),u}))}function conv2dWithBiasActivation(e,t,n,r=[1,1],a="valid",o,i,u=null){return Object(s.hf)((()=>{if(null==o&&(o="channelsLast"),checkDataFormat(o),3!==e.rank&&4!==e.rank)throw new ValueError(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new ValueError(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let c=preprocessConv2DInput(e,o);if("causal"===a)throw new NotImplementedError("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return c=s.Sd.conv2d({x:c,filter:t,strides:r,pad:"same"===a?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:u}),"channelsFirst"===o&&(c=s.kf(c,[0,3,1,2])),c}))}function conv3dWithBias(e,t,n,r=[1,1,1],a="valid",o,i){return Object(s.hf)((()=>{if(null==o&&(o="channelsLast"),checkDataFormat(o),4!==e.rank&&5!==e.rank)throw new ValueError(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new ValueError(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let u=preprocessConv3DInput(e,o);if("causal"===a)throw new NotImplementedError("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return u=s.Dd(u,t,r,"same"===a?"same":"valid","NDHWC",i),null!=n&&(u=biasAdd(u,n)),"channelsFirst"===o&&(u=s.kf(u,[0,4,1,2,3])),u}))}advanced_activations_Softmax.className="Softmax",s.Je.registerClass(advanced_activations_Softmax);class convolutional_BaseConv extends topology_Layer{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",convolutional_BaseConv.verifyArgs(t),this.rank=e,assertPositiveInteger(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new NotImplementedError(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=normalizeArray(t.kernelSize,e,"kernelSize"),this.strides=normalizeArray(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,checkPaddingMode(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,checkDataFormat(this.dataFormat),this.activation=getActivation(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=getInitializer(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=getConstraint(t.biasConstraint),this.biasRegularizer=getRegularizer(t.biasRegularizer),this.activityRegularizer=getRegularizer(t.activityRegularizer),this.dilationRate=normalizeArray(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new ValueError(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new ValueError(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new ValueError(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(assert("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!checkArrayTypeAndLength(e.kernelSize,"number",1,3))throw new ValueError(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:serializeActivation(this.activation),useBias:this.useBias,biasInitializer:serializeInitializer(this.biasInitializer),biasRegularizer:serializeRegularizer(this.biasRegularizer),activityRegularizer:serializeRegularizer(this.activityRegularizer),biasConstraint:serializeConstraint(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class convolutional_Conv extends convolutional_BaseConv{constructor(e,t){super(e,t),this.kernel=null,convolutional_Conv.verifyArgs(t),this.filters=t.filters,assertPositiveInteger(this.filters,"filters"),this.kernelInitializer=getInitializer(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=getConstraint(t.kernelConstraint),this.kernelRegularizer=getRegularizer(t.kernelRegularizer)}build(e){e=getExactlyOneShape(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new ValueError(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Object(s.hf)((()=>{let t;e=getExactlyOneTensor(e);const n=null==this.bias?null:this.bias.read(),r=mapActivationToFusedKernel(this.activation.getClassName());if(null!=r&&2===this.rank)t=conv2dWithBiasActivation(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=conv1dWithBias(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=conv2dWithBiasActivation(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new NotImplementedError("convolutions greater than 3D are not implemented yet.");t=conv3dWithBias(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=getExactlyOneShape(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let a=0;a<n.length;++a){const e=convOutputLength(n[a],this.kernelSize[a],this.padding,this.strides[a],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[a]);t.push(e)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:serializeInitializer(this.kernelInitializer),kernelRegularizer:serializeRegularizer(this.kernelRegularizer),kernelConstraint:serializeConstraint(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new ValueError(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class convolutional_Conv2D extends convolutional_Conv{constructor(e){super(2,e),convolutional_Conv2D.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!checkArrayTypeAndLength(e.kernelSize,"number",1,2))throw new ValueError(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}convolutional_Conv2D.className="Conv2D",s.Je.registerClass(convolutional_Conv2D);class convolutional_Conv3D extends convolutional_Conv{constructor(e){super(3,e),convolutional_Conv3D.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new ValueError(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}convolutional_Conv3D.className="Conv3D",s.Je.registerClass(convolutional_Conv3D);class convolutional_Conv2DTranspose extends convolutional_Conv2D{constructor(e){if(super(e),this.inputSpec=[new InputSpec({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new ValueError(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=getExactlyOneShape(e)).length)throw new ValueError("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new ValueError("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new InputSpec({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return s.hf((()=>{let t=getExactlyOneTensor(e);if(4!==t.shape.length)throw new ValueError(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let a,o;"channelsFirst"===this.dataFormat?(a=2,o=3):(a=1,o=2);const i=n[a],u=n[o],c=this.kernelSize[0],l=this.kernelSize[1],d=this.strides[0],p=this.strides[1],h=[r,deconvLength(i,d,c,this.padding),deconvLength(u,p,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=s.kf(t,[0,2,3,1]));let f=s.Cd(t,this.kernel.read(),h,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(f=s.kf(f,[0,3,1,2])),null!=this.bias&&(f=biasAdd(f,this.bias.read(),this.dataFormat)),null!=this.activation&&(f=this.activation.apply(f)),f}))}computeOutputShape(e){const t=(e=getExactlyOneShape(e)).slice();let n,r,a;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3):(n=3,r=1,a=2);const s=this.kernelSize[0],o=this.kernelSize[1],i=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[r]=deconvLength(t[r],i,s,this.padding),t[a]=deconvLength(t[a],u,o,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}convolutional_Conv2DTranspose.className="Conv2DTranspose",s.Je.registerClass(convolutional_Conv2DTranspose);class convolutional_SeparableConv extends convolutional_Conv{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new ValueError("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new ValueError("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new ValueError(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=getInitializer(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=getRegularizer(t.depthwiseRegularizer),this.depthwiseConstraint=getConstraint(t.depthwiseConstraint),this.pointwiseInitializer=getInitializer(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=getRegularizer(t.pointwiseRegularizer),this.pointwiseConstraint=getConstraint(t.pointwiseConstraint)}build(e){if((e=getExactlyOneShape(e)).length<this.rank+2)throw new ValueError(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new ValueError(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let o=0;o<this.rank;++o)a.push(1);a.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new InputSpec({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Object(s.hf)((()=>{let t;if(e=getExactlyOneTensor(e),1===this.rank)throw new NotImplementedError("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=s.kf(e,[0,2,3,1])),t=s.Ie(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=biasAdd(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=s.kf(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=serializeInitializer(this.depthwiseInitializer),e.pointwiseInitializer=serializeInitializer(this.pointwiseInitializer),e.depthwiseRegularizer=serializeRegularizer(this.depthwiseRegularizer),e.pointwiseRegularizer=serializeRegularizer(this.pointwiseRegularizer),e.depthwiseConstraint=serializeConstraint(this.depthwiseConstraint),e.pointwiseConstraint=serializeConstraint(this.pointwiseConstraint),e}}convolutional_SeparableConv.className="SeparableConv";class SeparableConv2D extends convolutional_SeparableConv{constructor(e){super(2,e)}}SeparableConv2D.className="SeparableConv2D",s.Je.registerClass(SeparableConv2D);class convolutional_Conv1D extends convolutional_Conv{constructor(e){super(1,e),convolutional_Conv1D.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!checkArrayTypeAndLength(e.kernelSize,"number",1,1))throw new ValueError(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}convolutional_Conv1D.className="Conv1D",s.Je.registerClass(convolutional_Conv1D);class convolutional_Cropping2D extends topology_Layer{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Object(s.hf)((()=>{if(e=getExactlyOneTensor(e),"channelsLast"===this.dataFormat){const t=sliceAlongAxis(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return sliceAlongAxis(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=sliceAlongAxis(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return sliceAlongAxis(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}convolutional_Cropping2D.className="Cropping2D",s.Je.registerClass(convolutional_Cropping2D);class convolutional_UpSampling2D extends topology_Layer{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,checkDataFormat(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,function checkInterpolationFormat(e){checkStringTypeUnionValue(Kr,"InterpolationFormat",e)}(this.interpolation)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return s.hf((()=>{let t=getExactlyOneTensor(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=s.kf(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],a="nearest"===this.interpolation?t.resizeNearestNeighbor([e,r]):t.resizeBilinear([e,r]);return s.kf(a,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?t.resizeNearestNeighbor([e,r]):t.resizeBilinear([e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}convolutional_UpSampling2D.className="UpSampling2D",s.Je.registerClass(convolutional_UpSampling2D);class convolutional_depthwise_DepthwiseConv2D extends convolutional_BaseConv{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=getInitializer(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=getConstraint(e.depthwiseConstraint),this.depthwiseRegularizer=getRegularizer(e.depthwiseRegularizer)}build(e){if((e=getExactlyOneShape(e)).length<4)throw new ValueError(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new ValueError(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Object(s.hf)((()=>{let t=function depthwiseConv2d(e,t,n=[1,1],r="valid",a,o){return Object(s.hf)((()=>{null==a&&(a="channelsLast"),checkDataFormat(a);let i=preprocessConv2DInput(e,a);if(4!==e.rank)throw new ValueError(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new ValueError(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=s.Ed(i,t,n,"same"===r?"same":"valid","NHWC",o),"channelsFirst"===a&&(i=s.kf(i,[0,3,1,2])),i}))}(e=getExactlyOneTensor(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=biasAdd(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=getExactlyOneShape(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=convOutputLength(t,this.kernelSize[0],this.padding,this.strides[0]),s=convOutputLength(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,a,s]:[e[0],a,s,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=serializeInitializer(this.depthwiseInitializer),e.depthwiseRegularizer=serializeRegularizer(this.depthwiseRegularizer),e.depthwiseConstraint=serializeConstraint(this.depthwiseRegularizer),e}}function standardizeArgs(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new ValueError("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function toListOrNull(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=toListOrNull(t),constants:n=toListOrNull(n)}}function rnn(e,t,n,r=!1,a,o,i=!1,u=!1){return s.hf((()=>{const c=t.shape.length;if(c<3)throw new ValueError(`Input should be at least 3D, but is ${c}D.`);const l=[1,0].concat(range(2,c));if(t=s.kf(t,l),null!=o)throw new NotImplementedError("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&((a=a.asType("bool").asType("float32")).rank===c-1&&(a=s.Od(a,-1)),a=s.kf(a,l)),r&&(t=s.Fe(t,0),null!=a&&(a=s.Fe(a,0)));const d=[];let p,h=n;const f=t.shape[0],m=s.mf(t);let g,b;null!=a&&(g=s.mf(a));for(let t=0;t<f;++t){const n=m[t],r=s.hf((()=>e(n,h)));if(null==a)p=r[0],h=r[1];else{const e=s.hf((()=>{const e=g[t],n=s.ue(e).sub(e);return{output:r[0].mul(e).add(h[0].mul(n)),newStates:h.map(((t,a)=>r[1][a].mul(e).add(t.mul(n))))}}));p=e.output,h=e.newStates}u&&d.push(p)}if(u){const e=1;b=s.Ye(d,e)}return[p,b,h]}))}convolutional_depthwise_DepthwiseConv2D.className="DepthwiseConv2D",s.Je.registerClass(convolutional_depthwise_DepthwiseConv2D);class recurrent_RNN extends topology_Layer{constructor(e){let t;if(super(e),null==e.cell)throw new ValueError("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new recurrent_StackedRNNCells({cells:e.cell}):e.cell,null==t.stateSize)throw new ValueError("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new InputSpec({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return range(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){isArrayOfShapes(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return s.hf((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new NotImplementedError("Constants support is not implemented in RNN yet.");isArrayOfShapes(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new InputSpec({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let a;if(this.cell.build(r),a=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!s.of.arraysEqual(this.stateSpec.map((e=>e.shape[e.shape.length-1])),a))throw new ValueError(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map((e=>new InputSpec({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){Object(s.hf)((()=>{if(!this.stateful)throw new AttributeError("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new ValueError("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>s.tf([n,e]))):this.states_=[s.tf([n,this.cell.stateSize])];else if(null==e)s.Gd(this.states_),null!=this.keptStates&&(s.Gd(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>s.tf([n,e]))):this.states_[0]=s.tf([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new ValueError(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):s.Gd(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,o=[n,a];if(!s.of.arraysEqual(r.shape,o))throw new ValueError(`State ${t} is incompatible with layer ${this.name}: expected shape=${o}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>s.Yd(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=standardizeArgs(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let s=[],o=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new InputSpec({shape:e.shape}));o=o.concat(this.stateSpec)}null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length);if(s[0]instanceof topology_SymbolicTensor){const n=[e].concat(s),r=this.inputSpec.concat(o),a=this.inputSpec;this.inputSpec=r;const i=super.apply(n,t);return this.inputSpec=a,i}return super.apply(e,t)}call(e,t){return Object(s.hf)((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let a=null==t?null:t.initialState;e=getExactlyOneTensor(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new ValueError(`RNN Layer has ${s} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const o={training:r},i=rnn(((e,t)=>{const n=this.cell.call([e].concat(t),o);return[n[0],n.slice(1)]}),e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),u=i[0],c=i[1],l=i[2];this.stateful&&this.resetStates(l,r);const d=this.returnSequences?c:u;return this.returnState?[d].concat(l):d}))}getInitialState(e){return Object(s.hf)((()=>{let t=s.tf(e.shape);return t=s.af(t,[1,2]),t=expandDims(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?tfjs_backend_tile(t,[1,e]):t)):this.cell.stateSize>1?[tfjs_backend_tile(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===recurrent_RNN.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const r=deserialize(t.cell,n);return new e(Object.assign(t,{cell:r}))}}recurrent_RNN.className="RNN",s.Je.registerClass(recurrent_RNN);class recurrent_RNNCell extends topology_Layer{}class recurrent_SimpleRNNCell extends recurrent_RNNCell{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,assertPositiveInteger(this.units,"units"),this.activation=getActivation(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=getInitializer(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=getInitializer(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=getInitializer(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=getRegularizer(e.kernelRegularizer),this.recurrentRegularizer=getRegularizer(e.recurrentRegularizer),this.biasRegularizer=getRegularizer(e.biasRegularizer),this.kernelConstraint=getConstraint(e.kernelConstraint),this.recurrentConstraint=getConstraint(e.recurrentConstraint),this.biasConstraint=getConstraint(e.biasConstraint),this.dropout=math_utils_min([1,math_utils_max([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=math_utils_min([1,math_utils_max([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=getExactlyOneShape(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Object(s.hf)((()=>{if(2!==(e=e).length)throw new ValueError(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let a;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=generateDropoutMask({ones:()=>s.ue(e),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=generateDropoutMask({ones:()=>s.ue(n),rate:this.recurrentDropout,training:r}));const o=this.dropoutMask,i=this.recurrentDropoutMask;a=tfjs_backend_dot(null!=o?s.oe(e,o):e,this.kernel.read()),null!=this.bias&&(a=biasAdd(a,this.bias.read())),null!=i&&(n=s.oe(n,i));let u=s.fd(a,tfjs_backend_dot(n,this.recurrentKernel.read()));return null!=this.activation&&(u=this.activation.apply(u)),[u,u]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:serializeActivation(this.activation),useBias:this.useBias,kernelInitializer:serializeInitializer(this.kernelInitializer),recurrentInitializer:serializeInitializer(this.recurrentInitializer),biasInitializer:serializeInitializer(this.biasInitializer),kernelRegularizer:serializeRegularizer(this.kernelRegularizer),recurrentRegularizer:serializeRegularizer(this.recurrentRegularizer),biasRegularizer:serializeRegularizer(this.biasRegularizer),activityRegularizer:serializeRegularizer(this.activityRegularizer),kernelConstraint:serializeConstraint(this.kernelConstraint),recurrentConstraint:serializeConstraint(this.recurrentConstraint),biasConstraint:serializeConstraint(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}recurrent_SimpleRNNCell.className="SimpleRNNCell",s.Je.registerClass(recurrent_SimpleRNNCell);class recurrent_SimpleRNN extends recurrent_RNN{constructor(e){e.cell=new recurrent_SimpleRNNCell(e),super(e)}call(e,t){return Object(s.hf)((()=>{null!=this.cell.dropoutMask&&(s.Gd(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(s.Gd(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return new e(t)}}recurrent_SimpleRNN.className="SimpleRNN",s.Je.registerClass(recurrent_SimpleRNN);class recurrent_GRUCell extends recurrent_RNNCell{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new ValueError("GRUCell does not support reset_after parameter set to true.");this.units=e.units,assertPositiveInteger(this.units,"units"),this.activation=getActivation(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=getActivation(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=getInitializer(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=getInitializer(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=getInitializer(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=getRegularizer(e.kernelRegularizer),this.recurrentRegularizer=getRegularizer(e.recurrentRegularizer),this.biasRegularizer=getRegularizer(e.biasRegularizer),this.kernelConstraint=getConstraint(e.kernelConstraint),this.recurrentConstraint=getConstraint(e.recurrentConstraint),this.biasConstraint=getConstraint(e.biasConstraint),this.dropout=math_utils_min([1,math_utils_max([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=math_utils_min([1,math_utils_max([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=getExactlyOneShape(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Object(s.hf)((()=>{if(2!==(e=e).length)throw new ValueError(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=generateDropoutMask({ones:()=>s.ue(e),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=generateDropoutMask({ones:()=>s.ue(r),rate:this.recurrentDropout,training:n,count:3}));const a=this.dropoutMask,o=this.recurrentDropoutMask;let i,u,c;0<this.dropout&&this.dropout<1&&(e=s.oe(e,a[0]));let l=tfjs_backend_dot(e,this.kernel.read());this.useBias&&(l=biasAdd(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=s.oe(r,o[0]));const d=this.recurrentKernel.read(),[p,h]=s.Ue(d,[2*this.units,this.units],d.rank-1),f=tfjs_backend_dot(r,p),[m,g,b]=s.Ue(l,3,l.rank-1),[y,x]=s.Ue(f,2,f.rank-1);i=this.recurrentActivation.apply(s.fd(m,y)),u=this.recurrentActivation.apply(s.fd(g,x));const v=tfjs_backend_dot(s.oe(u,r),h);c=this.activation.apply(s.fd(b,v));const k=s.fd(s.oe(i,r),s.oe(s.fd(1,s.pe(i)),c));return[k,k]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:serializeActivation(this.activation),recurrentActivation:serializeActivation(this.recurrentActivation),useBias:this.useBias,kernelInitializer:serializeInitializer(this.kernelInitializer),recurrentInitializer:serializeInitializer(this.recurrentInitializer),biasInitializer:serializeInitializer(this.biasInitializer),kernelRegularizer:serializeRegularizer(this.kernelRegularizer),recurrentRegularizer:serializeRegularizer(this.recurrentRegularizer),biasRegularizer:serializeRegularizer(this.biasRegularizer),activityRegularizer:serializeRegularizer(this.activityRegularizer),kernelConstraint:serializeConstraint(this.kernelConstraint),recurrentConstraint:serializeConstraint(this.recurrentConstraint),biasConstraint:serializeConstraint(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}recurrent_GRUCell.className="GRUCell",s.Je.registerClass(recurrent_GRUCell);class recurrent_GRU extends recurrent_RNN{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new recurrent_GRUCell(e),super(e)}call(e,t){return Object(s.hf)((()=>{null!=this.cell.dropoutMask&&(s.Gd(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(s.Gd(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}recurrent_GRU.className="GRU",s.Je.registerClass(recurrent_GRU);class recurrent_LSTMCell extends recurrent_RNNCell{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,assertPositiveInteger(this.units,"units"),this.activation=getActivation(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=getActivation(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=getInitializer(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=getInitializer(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=getInitializer(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=getRegularizer(e.kernelRegularizer),this.recurrentRegularizer=getRegularizer(e.recurrentRegularizer),this.biasRegularizer=getRegularizer(e.biasRegularizer),this.kernelConstraint=getConstraint(e.kernelConstraint),this.recurrentConstraint=getConstraint(e.recurrentConstraint),this.biasConstraint=getConstraint(e.biasConstraint),this.dropout=math_utils_min([1,math_utils_max([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=math_utils_min([1,math_utils_max([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=getExactlyOneShape(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class CustomInit extends initializers_Initializer{apply(t,r){const a=e.apply([n]),s=(new initializers_Ones).apply([n]),o=e.apply([2*n]);return concatAlongFirstAxis(concatAlongFirstAxis(a,s),o)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Object(s.hf)((()=>{const n=null!=t.training&&t.training;if(3!==(e=e).length)throw new ValueError(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=generateDropoutMask({ones:()=>s.ue(e),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=generateDropoutMask({ones:()=>s.ue(r),rate:this.recurrentDropout,training:n,count:4}));const o=this.dropoutMask,i=this.recurrentDropoutMask;let u,c,l,d;0<this.dropout&&this.dropout<1&&(e=s.oe(e,o[0]));let p=tfjs_backend_dot(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=s.oe(r,i[0])),p=s.fd(p,tfjs_backend_dot(r,this.recurrentKernel.read())),this.useBias&&(p=biasAdd(p,this.bias.read()));const[h,f,m,g]=s.Ue(p,4,p.rank-1);u=this.recurrentActivation.apply(h),c=this.recurrentActivation.apply(f),l=s.fd(s.oe(c,a),s.oe(u,this.activation.apply(m))),d=this.recurrentActivation.apply(g);const b=s.oe(d,this.activation.apply(l));return[b,b,l]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:serializeActivation(this.activation),recurrentActivation:serializeActivation(this.recurrentActivation),useBias:this.useBias,kernelInitializer:serializeInitializer(this.kernelInitializer),recurrentInitializer:serializeInitializer(this.recurrentInitializer),biasInitializer:serializeInitializer(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:serializeRegularizer(this.kernelRegularizer),recurrentRegularizer:serializeRegularizer(this.recurrentRegularizer),biasRegularizer:serializeRegularizer(this.biasRegularizer),activityRegularizer:serializeRegularizer(this.activityRegularizer),kernelConstraint:serializeConstraint(this.kernelConstraint),recurrentConstraint:serializeConstraint(this.recurrentConstraint),biasConstraint:serializeConstraint(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}recurrent_LSTMCell.className="LSTMCell",s.Je.registerClass(recurrent_LSTMCell);class recurrent_LSTM extends recurrent_RNN{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new recurrent_LSTMCell(e),super(e)}call(e,t){return Object(s.hf)((()=>{null!=this.cell.dropoutMask&&(s.Gd(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(s.Gd(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}recurrent_LSTM.className="LSTM",s.Je.registerClass(recurrent_LSTM);class recurrent_StackedRNNCells extends recurrent_RNNCell{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Object(s.hf)((()=>{let n=(e=e).slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const a=[];let s;for(let o=0;o<this.cells.length;++o){const i=this.cells[o];n=r[o],s=0===o?[e[0]].concat(n):[s[0]].concat(n),s=i.call(s,t),a.push(s.slice(1))}n=[];for(const e of a.slice().reverse())n.push(...e);return[s[0]].concat(n)}))}build(e){let t;isArrayOfShapes(e)&&(e=e[0]),e=e,this.cells.forEach(((n,r)=>{nameScope(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const r=[];for(const a of t.cells)r.push(deserialize(a,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return batchGetValue(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,a=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],a[e]])}batchSetValue(t)}}function generateDropoutMask(e){const{ones:t,rate:n,training:r=!1,count:a=1}=e,droppedInputs=()=>dropout(t(),n),createMask=()=>inTrainPhase(droppedInputs,t,r);if(!a||a<=1)return s.Yd(createMask().clone());return Array(a).fill(void 0).map(createMask).map((e=>s.Yd(e.clone())))}recurrent_StackedRNNCells.className="StackedRNNCells",s.Je.registerClass(recurrent_StackedRNNCells);var __rest=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n};class convolutional_recurrent_ConvRNN2D extends recurrent_RNN{constructor(e){if(e.unroll)throw new NotImplementedError("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new NotImplementedError("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new InputSpec({ndim:5})]}call(e,t){return s.hf((()=>{if(null!=this.cell.dropoutMask&&(s.Gd(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(s.Gd(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new ValueError("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return s.hf((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)],o=s.tf(a);return Array.isArray(t)?Array(t.length).fill(o):[o]}))}resetStates(e,t=!1){s.hf((()=>{if(!this.stateful)throw new AttributeError("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(null==n[0])throw new ValueError("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>s.tf(a))):this.states_=[s.tf(a)];else if(null==e)s.Gd(this.states_),null!=this.keptStates&&(s.Gd(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>s.tf(a))):this.states_[0]=s.tf(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new ValueError(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):s.Gd(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=a;if(!s.of.arraysEqual(n.shape,r))throw new ValueError(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>s.Yd(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:o}=this.cell,i="channelsFirst"===t,u=e[i?3:2],c=e[i?4:3],l=convOutputLength(u,r[0],a,s[0],o[0]),d=convOutputLength(c,r[1],a,s[1],o[1]);return[...e.slice(0,2),...i?[n,l,d]:[l,d,n]]}}convolutional_recurrent_ConvRNN2D.className="ConvRNN2D";class convolutional_recurrent_ConvLSTM2DCell extends recurrent_LSTMCell{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:o}=e;super(Object.assign({},e,{units:t})),this.filters=t,assertPositiveInteger(this.filters,"filters"),this.kernelSize=normalizeArray(n,2,"kernelSize"),this.kernelSize.forEach((e=>assertPositiveInteger(e,"kernelSize"))),this.strides=normalizeArray(r||1,2,"strides"),this.strides.forEach((e=>assertPositiveInteger(e,"strides"))),this.padding=a||"valid",checkPaddingMode(this.padding),this.dataFormat=s||"channelsLast",checkDataFormat(this.dataFormat),this.dilationRate=normalizeArray(o||1,2,"dilationRate"),this.dilationRate.forEach((e=>assertPositiveInteger(e,"dilationRate")))}build(e){var t;e=getExactlyOneShape(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new ValueError(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],a=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const o=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",o,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class CustomInit extends initializers_Initializer{apply(e,t){return concatenate([n.apply([r]),s.te([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return s.hf((()=>{if(3!==e.length)throw new ValueError(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],a=e[1],o=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=generateDropoutMask({ones:()=>s.ue(r),rate:this.dropout,training:n,count:4}));const i=this.dropoutMask,applyDropout=(e,t,n)=>t&&t[n]?s.oe(t[n],e):e;let u=applyDropout(r,i,0),c=applyDropout(r,i,1),l=applyDropout(r,i,2),d=applyDropout(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=generateDropoutMask({ones:()=>s.ue(a),rate:this.recurrentDropout,training:n,count:4}));const p=this.recurrentDropoutMask;let h=applyDropout(a,p,0),f=applyDropout(a,p,1),m=applyDropout(a,p,2),g=applyDropout(a,p,3);const[b,y,x,v]=s.Ue(this.kernel.read(),4,3),[k,w,O,_]=this.useBias?s.Ue(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,b,k,this.padding),c=this.inputConv(c,y,w,this.padding),l=this.inputConv(l,x,O,this.padding),d=this.inputConv(d,v,_,this.padding);const[I,S,N,C]=s.Ue(this.recurrentKernel.read(),4,3);h=this.recurrentConv(h,I),f=this.recurrentConv(f,S),m=this.recurrentConv(m,N),g=this.recurrentConv(g,C);const T=this.recurrentActivation.apply(s.fd(u,h)),A=this.recurrentActivation.apply(s.fd(c,f)),E=s.fd(s.oe(A,o),s.oe(T,this.activation.apply(s.fd(l,m)))),j=s.oe(this.recurrentActivation.apply(s.fd(d,g)),this.activation.apply(E));return[j,j,E]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=__rest(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,n,r){const a=s.Bd(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?biasAdd(a,n,this.dataFormat):a}recurrentConv(e,t){return s.Bd(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}convolutional_recurrent_ConvLSTM2DCell.className="ConvLSTM2DCell",s.Je.registerClass(convolutional_recurrent_ConvLSTM2DCell);class ConvLSTM2D extends convolutional_recurrent_ConvRNN2D{constructor(e){const t=new convolutional_recurrent_ConvLSTM2DCell(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}ConvLSTM2D.className="ConvLSTM2D",s.Je.registerClass(ConvLSTM2D);class core_Dropout extends topology_Layer{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(null==this.noiseShape[r]?t[r]:this.noiseShape[r]);return n}call(e,t){return Object(s.hf)((()=>{this.invokeCallHook(e,t);const n=getExactlyOneTensor(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return inTrainPhase((()=>dropout(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}core_Dropout.className="Dropout",s.Je.registerClass(core_Dropout);class SpatialDropout1D extends core_Dropout{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}SpatialDropout1D.className="SpatialDropout1D",s.Je.registerClass(SpatialDropout1D);class core_Dense extends topology_Layer{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,assertPositiveInteger(this.units,"units"),this.activation=getActivation(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=getInitializer(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=getInitializer(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=getConstraint(e.kernelConstraint),this.biasConstraint=getConstraint(e.biasConstraint),this.kernelRegularizer=getRegularizer(e.kernelRegularizer),this.biasRegularizer=getRegularizer(e.biasRegularizer),this.activityRegularizer=getRegularizer(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=getExactlyOneShape(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=getExactlyOneShape(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return Object(s.hf)((()=>{this.invokeCallHook(e,t);const n=getExactlyOneTensor(e),r=mapActivationToFusedKernel(this.activation.getClassName());let a;return null!=r?a=tfjs_backend_dot(n,this.kernel.read(),r,this.bias?this.bias.read():null):(a=tfjs_backend_dot(n,this.kernel.read()),null!=this.bias&&(a=biasAdd(a,this.bias.read())),null!=this.activation&&(a=this.activation.apply(a))),a}))}getConfig(){const e={units:this.units,activation:serializeActivation(this.activation),useBias:this.useBias,kernelInitializer:serializeInitializer(this.kernelInitializer),biasInitializer:serializeInitializer(this.biasInitializer),kernelRegularizer:serializeRegularizer(this.kernelRegularizer),biasRegularizer:serializeRegularizer(this.biasRegularizer),activityRegularizer:serializeRegularizer(this.activityRegularizer),kernelConstraint:serializeConstraint(this.kernelConstraint),biasConstraint:serializeConstraint(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}core_Dense.className="Dense",s.Je.registerClass(core_Dense);class core_Flatten extends topology_Layer{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=getExactlyOneShape(e);for(const t of e.slice(1))if(null==t)throw new ValueError(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],arrayProd(e,1)]}call(e,t){return Object(s.hf)((()=>{this.invokeCallHook(e,t);let n=getExactlyOneTensor(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=n.transpose(e)}return function batchFlatten(e){if(e.rank<=1)throw new ValueError(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],arrayProd(e.shape,1)];return e.reshape(t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}core_Flatten.className="Flatten",s.Je.registerClass(core_Flatten);class core_Activation extends topology_Layer{constructor(e){super(e),this.supportsMasking=!0,this.activation=getActivation(e.activation)}call(e,t){return Object(s.hf)((()=>{this.invokeCallHook(e,t);const n=getExactlyOneTensor(e);return this.activation.apply(n)}))}getConfig(){const e={activation:serializeActivation(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}core_Activation.className="Activation",s.Je.registerClass(core_Activation);class core_RepeatVector extends topology_Layer{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Object(s.hf)((()=>function repeat(e,t){return Object(s.hf)((()=>{if(2!==e.shape.length)throw new ValueError(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return tfjs_backend_tile(expandDims(e,1),[1,t,1])}))}(e=getExactlyOneTensor(e),this.n)))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}core_RepeatVector.className="RepeatVector",s.Je.registerClass(core_RepeatVector);class core_Reshape extends topology_Layer{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let a=1,s=null;for(let i=0;i<r.length;++i){const e=r[i];if(this.isUnknown(e)){if(null!==s)throw new ValueError("Can only specifiy one unknown dimension.");s=i}else a*=e}const o=arrayProd(e);if(null!==s){if(0===a||o%a!=0)throw new ValueError(n);r[s]=o/a}else if(o!==a)throw new ValueError(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Object(s.hf)((()=>{this.invokeCallHook(e,t);const n=getExactlyOneTensor(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return n.reshape(a)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}core_Reshape.className="Reshape",s.Je.registerClass(core_Reshape);class core_Permute extends topology_Layer{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=range(1,e.dims.length+1);if(!s.of.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new InputSpec({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=getExactlyOneShape(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return Object(s.kf)(getExactlyOneTensor(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}core_Permute.className="Permute",s.Je.registerClass(core_Permute);class core_Masking extends topology_Layer{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=getExactlyOneTensor(e);return Object(s.hd)(Object(s.re)(n,this.maskValue),-1)}call(e,t){return Object(s.hf)((()=>{this.invokeCallHook(e,t);const n=getExactlyOneTensor(e),r=Object(s.hd)(Object(s.re)(n,this.maskValue),-1,!0);return n.mul(r.asType(n.dtype))}))}}core_Masking.className="Masking",s.Je.registerClass(core_Masking);class embeddings_Embedding extends topology_Layer{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(toList(e.inputLength))}this.inputDim=e.inputDim,assertPositiveInteger(this.inputDim,"inputDim"),this.outputDim=e.outputDim,assertPositiveInteger(this.outputDim,"outputDim"),this.embeddingsInitializer=getInitializer(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=getRegularizer(e.embeddingsRegularizer),this.activityRegularizer=getRegularizer(e.activityRegularizer),this.embeddingsConstraint=getConstraint(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Object(s.hf)((()=>this.maskZero?(e=getExactlyOneTensor(e),Object(s.re)(e,Object(s.uf)(e))):null))}computeOutputShape(e){if(e=getExactlyOneShape(e),null==this.inputLength)return[...e,this.outputDim];const t=toList(this.inputLength);if(t.length!==e.length-1)throw new ValueError(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const a=t[r],s=e[r+1];if(null!=a&&null!=s&&a!==s)throw new ValueError(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Object(s.hf)((()=>{this.invokeCallHook(e,t);let n=getExactlyOneTensor(e);"int32"!==n.dtype&&(n=tfjs_backend_cast(n,"int32"));return tfjs_backend_gather(this.embeddings.read(),n.as1D()).reshape(getExactlyOneShape(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:serializeInitializer(this.embeddingsInitializer),embeddingsRegularizer:serializeRegularizer(this.embeddingsRegularizer),activityRegularizer:serializeRegularizer(this.activityRegularizer),embeddingsConstraint:serializeConstraint(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}embeddings_Embedding.className="Embedding",s.Je.registerClass(embeddings_Embedding);class merge_Merge extends topology_Layer{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new NotImplementedError}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const a=e[e.length-t.length+r],s=t[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new ValueError("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[getExactlyOneShape(e)]),(e=e).length<2)throw new ValueError(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const a of e)null!=a&&null!==a[0]&&t.push(a[0]);if(t=generic_utils_unique(t),t.length>1)throw new ValueError(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let a=1;a<e.length;++a){const t=null==e[a]?null:e[a].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===generic_utils_unique(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Object(s.hf)((()=>{if(e=e,this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=math_utils_max(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=expandDims(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const o of e){const e=o.rank;if(null==e){const e=o.shape,r=e[0],a=e.slice(1).concat([r]);let i=o.reshape([r].concat(arrayProd(e.slice(1))));i=s.kf(i,[1,0]),i=i.reshape(a),t.push(i),n=!0}else if(e>1){const r=range(1,e).concat([0]);t.push(s.kf(o,r)),n=!0}else t.push(o)}let r=this.mergeFunction(t);const a=r.rank;if(n)if(null==a){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=s.kf(r.reshape([-1,t]),[1,0]).reshape(n)}else if(a>1){const e=[a-1].concat(range(0,a-1));r=s.kf(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){const n=null==e[r]?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(const r of e)null!=r&&null!==r[0]&&n.push(r[0]);return n=generic_utils_unique(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return s.hf((()=>{if(null==t)return null;if(!Array.isArray(t))throw new ValueError("`mask` should be an Array");if(!Array.isArray(e))throw new ValueError("`inputs` should be an Array");if(t.length!==e.length)throw new ValueError(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:s.Od(e,0))))[0];for(let e=1;e<t.length-1;++e)n=s.ee(n,t[e]);return n}))}}class merge_Add extends merge_Merge{constructor(e){super(e)}mergeFunction(e){return Object(s.hf)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=s.fd(t,e[n]);return t}))}}merge_Add.className="Add",s.Je.registerClass(merge_Add);class merge_Multiply extends merge_Merge{constructor(e){super(e)}mergeFunction(e){return Object(s.hf)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=s.oe(t,e[n]);return t}))}}merge_Multiply.className="Multiply",s.Je.registerClass(merge_Multiply);class merge_Average extends merge_Merge{constructor(e){super(e)}mergeFunction(e){return Object(s.hf)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=s.fd(t,e[n]);return s.oe(1/e.length,t)}))}}merge_Average.className="Average",s.Je.registerClass(merge_Average);class merge_Maximum extends merge_Merge{constructor(e){super(e)}mergeFunction(e){return Object(s.hf)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=s.ie(t,e[n]);return t}))}}merge_Maximum.className="Maximum",s.Je.registerClass(merge_Maximum);class merge_Minimum extends merge_Merge{constructor(e){super(e)}mergeFunction(e){return Object(s.hf)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=s.me(t,e[n]);return t}))}}merge_Minimum.className="Minimum",s.Je.registerClass(merge_Minimum);class merge_Concatenate extends merge_Merge{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new ValueError("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const r of e)if(null!=r){t=!1;break}if(t)return;const n=[];for(let r=0;r<e.length;++r){const t=e[r].slice();t.splice(this.axis,1);let a=!1;for(const e of n)if(s.of.arraysEqual(e,t)){a=!0;break}a||n.push(t)}if(n.length>1)throw new ValueError("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Object(s.hf)((()=>concatenate(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new ValueError("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const a of t.slice(1)){if(null==n[r]||null==a[r]){n[r]=null;break}n[r]+=a[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new ValueError("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new ValueError("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new ValueError(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return s.hf((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let o=0;o<e.length;++o)null==t[o]?r.push(s.ue(e[o]).asType("bool")):t[o].rank<e[o].rank?r.push(s.Od(t[o],-1)):r.push(t[o]);const a=s.vd(r,this.axis);return s.gd(a,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function interpretAxis(e,t){for(;e<0;)e+=t;return e}merge_Concatenate.className="Concatenate",s.Je.registerClass(merge_Concatenate);class merge_Dot extends merge_Merge{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){s.of.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new NotImplementedError("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new ValueError(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new ValueError(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>interpretAxis(t,e[n].shape.length))):[interpretAxis(this.axes,n.shape.length),interpretAxis(this.axes,r.shape.length)],this.normalize&&(n=l2Normalize(n,t[0]),r=l2Normalize(r,t[1])),function batchDot(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new NotImplementedError("batchDot is not implemented for tensors of 4D or higher rank yet");if(s.of.assert(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),s.of.assert(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new NotImplementedError("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,a=t.shape.length;null==n&&(n=[r-1,a-2]);const o=n;return s.hf((()=>{let n,s;if(r>a){n=r-a;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else if(a>r){n=a-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)s=o[0]===o[1]?e.mul(t).sum(o[0]):e.transpose([1,0]).mul(t).sum(o[1]);else{const n=o[0]!==e.shape.length-1,r=o[1]===t.shape.length-1;s=e.matMul(t,n,r)}if(n>0){let e;e=r>a?r+a-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);s=s.squeeze(t)}return 1===s.shape.length&&(s=s.expandDims(1)),s}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[interpretAxis(this.axes,e.length),interpretAxis(this.axes,t.length)],n}computeOutputShape(e){s.of.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new NotImplementedError("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}merge_Dot.className="Dot",s.Je.registerClass(merge_Dot);class noise_GaussianNoise extends topology_Layer{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Object(s.hf)((()=>{this.invokeCallHook(e,t);const n=getExactlyOneTensor(e);return inTrainPhase((()=>randomNormal(n.shape,0,this.stddev).add(n)),(()=>n),t.training||!1)}))}}noise_GaussianNoise.className="GaussianNoise",s.Je.registerClass(noise_GaussianNoise);class noise_GaussianDropout extends topology_Layer{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Object(s.hf)((()=>{this.invokeCallHook(e,t);const n=getExactlyOneTensor(e);if(this.rate>0&&this.rate<1){return inTrainPhase((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return n.mul(randomNormal(n.shape,1,e))}),(()=>n),t.training||!1)}return n}))}}noise_GaussianDropout.className="GaussianDropout",s.Je.registerClass(noise_GaussianDropout);class noise_AlphaDropout extends topology_Layer{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||getExactlyOneTensor(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Object(s.hf)((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return inTrainPhase((()=>{const t=getExactlyOneTensor(e),r=-1.7580993408473766;let a=Object(s.Vd)(Object(s.ze)(n),this.rate);a=tfjs_backend_cast(a,"float32");const o=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-o*r*this.rate;return t.mul(a).add(a.add(-1).mul(r)).mul(o).add(i)}),(()=>getExactlyOneTensor(e)),t.training||!1)}return e}))}}function batchNormalization(e,t,n,r,a,o=.001){let i;if(2===e.rank)i=s.nd(e,t,n,r,a,o);else if(3===e.rank)i=s.od(e,t,n,r,a,o);else{if(4!==e.rank)throw new NotImplementedError(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=s.pd(e,t,n,r,a,o)}return i}function normalizeBatchInTraining(e,t,n,r,a=.001){return s.of.arraysEqual(r.slice().sort(),range(0,e.rank-1))?function regularNormalizeBatchInTraining(e,t,n,r,a=.001){return Object(s.hf)((()=>{const o=s.ne(e,r),i=o.mean,u=o.variance;return[batchNormalization(e,i,u,n,t,a),i,u]}))}(e,t,n,r,a):function broadcastNormalizeBatchInTraining(e,t,n,r,a=.001){return Object(s.hf)((()=>{const o=s.ne(e,r),i=o.mean,u=o.variance,c=[];for(const t of range(0,e.rank))-1!==r.indexOf(t)?c.push(1):c.push(e.shape[t]);const l=i.reshape(c),d=u.reshape(c),p=null==t?null:t.reshape(c),h=null==n?null:n.reshape(c);return[batchNormalization(e,l,d,h,p,a),i,u]}))}(e,t,n,r,a)}noise_AlphaDropout.className="AlphaDropout",s.Je.registerClass(noise_AlphaDropout);class normalization_BatchNormalization extends topology_Layer{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=getInitializer(e.betaInitializer||"zeros"),this.gammaInitializer=getInitializer(e.gammaInitializer||"ones"),this.movingMeanInitializer=getInitializer(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=getInitializer(e.movingVarianceInitializer||"ones"),this.betaConstraint=getConstraint(e.betaConstraint),this.gammaConstraint=getConstraint(e.gammaConstraint),this.betaRegularizer=getRegularizer(e.betaRegularizer),this.gammaRegularizer=getRegularizer(e.gammaRegularizer)}build(e){e=getExactlyOneShape(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new ValueError(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new InputSpec({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Object(s.hf)((()=>{const n=null!=t.training&&t.training,r=getExactlyOneTensor(e),a=r.shape,o=a.length,i=range(0,o),u=this.axis>=0?this.axis:this.axis+o;i.splice(u,1);const c=pyListRepeat(1,o);c[u]=a[u];const l=i.slice();l.sort();const d=!s.of.arraysEqual(l,range(0,o).slice(0,o-1));if(!n)return(()=>{if(d){const e=this.movingMean.read().reshape(c),t=this.movingVariance.read().reshape(c),n=this.center?this.beta.read().reshape(c):null,a=this.scale?this.gamma.read().reshape(c):null;return batchNormalization(r,e,t,n,a,this.epsilon)}return batchNormalization(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[p,h,f]=normalizeBatchInTraining(r,this.gamma.read(),this.beta.read(),i,this.epsilon),doMovingAverage=(e,t,n)=>{s.hf((()=>{const r=1-n,a=e.read(),s=a.sub(t).mul(r);e.write(a.sub(s))}))};return(()=>{doMovingAverage(this.movingMean,h,this.momentum),doMovingAverage(this.movingVariance,f,this.momentum)})(),p}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:serializeInitializer(this.betaInitializer),gammaInitializer:serializeInitializer(this.gammaInitializer),movingMeanInitializer:serializeInitializer(this.movingMeanInitializer),movingVarianceInitializer:serializeInitializer(this.movingVarianceInitializer),betaRegularizer:serializeRegularizer(this.betaRegularizer),gammaRegularizer:serializeRegularizer(this.gammaRegularizer),betaConstraint:serializeConstraint(this.betaConstraint),gammaConstraint:serializeConstraint(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}normalization_BatchNormalization.className="BatchNormalization",s.Je.registerClass(normalization_BatchNormalization);class normalization_LayerNormalization extends topology_Layer{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=getInitializer(e.betaInitializer||"zeros"),this.gammaInitializer=getInitializer(e.gammaInitializer||"ones"),this.betaRegularizer=getRegularizer(e.betaRegularizer),this.gammaRegularizer=getRegularizer(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=getExactlyOneShape(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(const r of this.axis)if(r<0||r>=t)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==generic_utils_unique(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,true):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,true):this.beta=null,this.built=!0}call(e,t){const n=getExactlyOneTensor(e),r=n.shape,a=r.length;return Object(s.hf)((()=>{let{mean:e,variance:t}=Object(s.ne)(n,this.axis,!0);const o=pyListRepeat(1,a);for(const n of this.axis)o[n]=r[n];const broadcast=e=>null!=e&&e.shape.length!==a&&this.axis!==[a-1]?e.reshape(o):e;let i=broadcast(this.gamma.read()),u=broadcast(this.beta.read());const c=[],l=[];for(let n=0;n<a;++n)-1!==this.axis.indexOf(n)?(c.push(r[n]),l.push(1)):(c.push(1),l.push(r[n]));return e=e.tile(c),t=t.tile(c),i=i.tile(l),u=u.tile(l),batchNormalization(n,e,t,u,i,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:serializeInitializer(this.betaInitializer),gammaInitializer:serializeInitializer(this.gammaInitializer),betaRegularizer:serializeRegularizer(this.betaRegularizer),gammaRegularizer:serializeRegularizer(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}normalization_LayerNormalization.className="LayerNormalization",s.Je.registerClass(normalization_LayerNormalization);class padding_ZeroPadding2D extends topology_Layer{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new ValueError(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new ValueError(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new ValueError(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new InputSpec({ndim:4})]}computeOutputShape(e){let t,n;return e=getExactlyOneShape(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Object(s.hf)((()=>function spatial2dPadding(e,t,n){return Object(s.hf)((()=>{if(4!==e.rank)throw new ValueError(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==t&&(t=[[1,1],[1,1]]),2!==t.length||2!==t[0].length||2!==t[1].length)throw new ValueError("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==n&&(n="channelsLast"),"channelsLast"!==n&&"channelsFirst"!==n)throw new ValueError(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let r;return r="channelsFirst"===n?[[0,0],[0,0],t[0],t[1]]:[[0,0],t[0],t[1],[0,0]],s.ve(e,r)}))}(getExactlyOneTensor(e),this.padding,this.dataFormat)))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function pool2d(e,t,n,r,a,o){return Object(s.hf)((()=>{let i;checkDataFormat(a),checkPoolMode(o),checkPaddingMode(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==o&&(o="max"),e=preprocessConv2DInput(e,a);const u="same"===r?"same":"valid";return i="max"===o?s.ge(e,t,n,u):s.jd(e,t,n,u),"channelsFirst"===a&&(i=s.kf(i,[0,3,1,2])),i}))}function pool3d(e,t,n,r,a,o){return Object(s.hf)((()=>{let i;checkDataFormat(a),checkPoolMode(o),checkPaddingMode(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==o&&(o="max"),e=preprocessConv3DInput(e,a);const u="same"===r?"same":"valid";return i="max"===o?s.he(e,t,n,u):s.kd(e,t,n,u),"channelsFirst"===a&&(i=s.kf(i,[0,4,1,2,3])),i}))}padding_ZeroPadding2D.className="ZeroPadding2D",s.Je.registerClass(padding_ZeroPadding2D);class pooling_Pooling1D extends topology_Layer{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new ValueError(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(assertPositiveInteger(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new ValueError(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}assertPositiveInteger(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,checkPaddingMode(this.padding),this.inputSpec=[new InputSpec({ndim:3})]}computeOutputShape(e){const t=convOutputLength((e=getExactlyOneShape(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Object(s.hf)((()=>{this.invokeCallHook(e,t),e=expandDims(getExactlyOneTensor(e),2);const n=this.poolingFunction(getExactlyOneTensor(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return s.Xe(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class pooling_MaxPooling1D extends pooling_Pooling1D{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return checkDataFormat(a),checkPaddingMode(r),pool2d(e,t,n,r,a,"max")}}pooling_MaxPooling1D.className="MaxPooling1D",s.Je.registerClass(pooling_MaxPooling1D);class pooling_AveragePooling1D extends pooling_Pooling1D{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return checkDataFormat(a),checkPaddingMode(r),pool2d(e,t,n,r,a,"avg")}}pooling_AveragePooling1D.className="AveragePooling1D",s.Je.registerClass(pooling_AveragePooling1D);class pooling_Pooling2D extends topology_Layer{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new ValueError(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];assertPositiveInteger(this.poolSize,"poolSize"),assertPositiveInteger(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,checkDataFormat(this.dataFormat),checkPaddingMode(this.padding),this.inputSpec=[new InputSpec({ndim:4})]}computeOutputShape(e){e=getExactlyOneShape(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=convOutputLength(t,this.poolSize[0],this.padding,this.strides[0]),n=convOutputLength(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Object(s.hf)((()=>(this.invokeCallHook(e,t),this.poolingFunction(getExactlyOneTensor(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class pooling_MaxPooling2D extends pooling_Pooling2D{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return checkDataFormat(a),checkPaddingMode(r),pool2d(e,t,n,r,a,"max")}}pooling_MaxPooling2D.className="MaxPooling2D",s.Je.registerClass(pooling_MaxPooling2D);class pooling_AveragePooling2D extends pooling_Pooling2D{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return checkDataFormat(a),checkPaddingMode(r),pool2d(e,t,n,r,a,"avg")}}pooling_AveragePooling2D.className="AveragePooling2D",s.Je.registerClass(pooling_AveragePooling2D);class pooling_Pooling3D extends topology_Layer{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new ValueError(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];assertPositiveInteger(this.poolSize,"poolSize"),assertPositiveInteger(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,checkDataFormat(this.dataFormat),checkPaddingMode(this.padding),this.inputSpec=[new InputSpec({ndim:5})]}computeOutputShape(e){e=getExactlyOneShape(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=convOutputLength(t,this.poolSize[0],this.padding,this.strides[0]),n=convOutputLength(n,this.poolSize[1],this.padding,this.strides[1]),r=convOutputLength(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return Object(s.hf)((()=>(this.invokeCallHook(e,t),this.poolingFunction(getExactlyOneTensor(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class pooling_MaxPooling3D extends pooling_Pooling3D{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return checkDataFormat(a),checkPaddingMode(r),pool3d(e,t,n,r,a,"max")}}pooling_MaxPooling3D.className="MaxPooling3D",s.Je.registerClass(pooling_MaxPooling3D);class pooling_AveragePooling3D extends pooling_Pooling3D{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return checkDataFormat(a),checkPaddingMode(r),pool3d(e,t,n,r,a,"avg")}}pooling_AveragePooling3D.className="AveragePooling3D",s.Je.registerClass(pooling_AveragePooling3D);class pooling_GlobalPooling1D extends topology_Layer{constructor(e){super(e),this.inputSpec=[new InputSpec({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new NotImplementedError}}class pooling_GlobalAveragePooling1D extends pooling_GlobalPooling1D{constructor(e){super(e||{})}call(e,t){return Object(s.hf)((()=>{const t=getExactlyOneTensor(e);return s.je(t,1)}))}}pooling_GlobalAveragePooling1D.className="GlobalAveragePooling1D",s.Je.registerClass(pooling_GlobalAveragePooling1D);class pooling_GlobalMaxPooling1D extends pooling_GlobalPooling1D{constructor(e){super(e||{})}call(e,t){return Object(s.hf)((()=>{const t=getExactlyOneTensor(e);return s.fe(t,1)}))}}pooling_GlobalMaxPooling1D.className="GlobalMaxPooling1D",s.Je.registerClass(pooling_GlobalMaxPooling1D);class pooling_GlobalPooling2D extends topology_Layer{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,checkDataFormat(this.dataFormat),this.inputSpec=[new InputSpec({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new NotImplementedError}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class pooling_GlobalAveragePooling2D extends pooling_GlobalPooling2D{call(e,t){return Object(s.hf)((()=>{const t=getExactlyOneTensor(e);return"channelsLast"===this.dataFormat?s.je(t,[1,2]):s.je(t,[2,3])}))}}pooling_GlobalAveragePooling2D.className="GlobalAveragePooling2D",s.Je.registerClass(pooling_GlobalAveragePooling2D);class pooling_GlobalMaxPooling2D extends pooling_GlobalPooling2D{call(e,t){return Object(s.hf)((()=>{const t=getExactlyOneTensor(e);return"channelsLast"===this.dataFormat?s.fe(t,[1,2]):s.fe(t,[2,3])}))}}pooling_GlobalMaxPooling2D.className="GlobalMaxPooling2D",s.Je.registerClass(pooling_GlobalMaxPooling2D);class wrappers_Wrapper extends topology_Layer{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=deserialize(t.layer,n);delete t.layer;const a={layer:r};return Object.assign(a,t),new e(a)}}class wrappers_TimeDistributed extends wrappers_Wrapper{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=getExactlyOneShape(e)).length<3)throw new ValueError(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=getExactlyOneShape(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return Object(s.hf)((()=>rnn(((e,n)=>[getExactlyOneTensor(this.layer.call(e,t)),[]]),e=getExactlyOneTensor(e),[],!1,null,null,!1,!0)[1]))}}wrappers_TimeDistributed.className="TimeDistributed",s.Je.registerClass(wrappers_TimeDistributed);class wrappers_Bidirectional extends wrappers_Wrapper{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=deserialize(n),t.goBackwards=!0!==t.goBackwards;const r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=deserialize(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,function checkBidirectionalMergeMode(e){checkStringTypeUnionValue(Jr,"BidirectionalMergeMode",e)}(this.mergeMode),e.weights)throw new NotImplementedError("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),a=a,this.returnState?(r=a.slice(1),t=a[0]):t=a[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):singletonOrArray(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=standardizeArgs(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const s=[],o=[];if(null!=n){const e=n.length;if(e%2>0)throw new ValueError("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);const r=n.map((e=>new InputSpec({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),o.push(...r)}if(null!=r)throw new NotImplementedError("Support for constants in Bidirectional layers is not implemented yet.");const i=s[0]instanceof topology_SymbolicTensor;for(const u of s)if(u instanceof topology_SymbolicTensor!==i)throw new ValueError("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(i){const n=[e].concat(s),r=this.inputSpec.concat(o),a=this.inputSpec;this.inputSpec=r;const i=super.apply(n,t);return this.inputSpec=a,i}return super.apply(e,t)}call(e,t){return Object(s.hf)((()=>{const n=t.initialState;let r,a,o,i;if(null==n)r=this.forwardLayer.call(e,t),a=this.backwardLayer.call(e,t);else{const s=n.slice(0,n.length/2),o=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:s})),a=this.backwardLayer.call(e,Object.assign(t,{initialState:o}))}return this.returnState&&(Array.isArray(r)&&(o=r.slice(1).concat(a.slice(1))),r=r[0],a=a[0]),this.returnSequences&&(a=s.Fe(a,1)),"concat"===this.mergeMode?i=concatenate([r,a]):"sum"===this.mergeMode?i=s.fd(r,a):"ave"===this.mergeMode?i=s.oe(.5,s.fd(r,a)):"mul"===this.mergeMode?i=s.oe(r,a):null==this.mergeMode&&(i=[r,a]),this.returnState?null==this.mergeMode?i.concat(o):[i].concat(o):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){nameScope(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),nameScope(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=deserialize(t.layer);if(delete t.layer,null!=t.numConstants)throw new NotImplementedError("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}function exports_layers_inputLayer(e){return new input_layer_InputLayer(e)}function exports_layers_elu(e){return new advanced_activations_ELU(e)}function reLU(e){return new advanced_activations_ReLU(e)}function leakyReLU(e){return new advanced_activations_LeakyReLU(e)}function exports_layers_prelu(e){return new advanced_activations_PReLU(e)}function exports_layers_softmax(e){return new advanced_activations_Softmax(e)}function thresholdedReLU(e){return new advanced_activations_ThresholdedReLU(e)}function exports_layers_conv1d(e){return new convolutional_Conv1D(e)}function exports_layers_conv2d(e){return new convolutional_Conv2D(e)}function conv2dTranspose(e){return new convolutional_Conv2DTranspose(e)}function exports_layers_conv3d(e){return new convolutional_Conv3D(e)}function separableConv2d(e){return new SeparableConv2D(e)}function cropping2D(e){return new convolutional_Cropping2D(e)}function upSampling2d(e){return new convolutional_UpSampling2D(e)}function exports_layers_depthwiseConv2d(e){return new convolutional_depthwise_DepthwiseConv2D(e)}function exports_layers_activation(e){return new core_Activation(e)}function dense(e){return new core_Dense(e)}function exports_layers_dropout(e){return new core_Dropout(e)}function spatialDropout1d(e){return new SpatialDropout1D(e)}function exports_layers_flatten(e){return new core_Flatten(e)}function repeatVector(e){return new core_RepeatVector(e)}function exports_layers_reshape(e){return new core_Reshape(e)}function permute(e){return new core_Permute(e)}function embedding(e){return new embeddings_Embedding(e)}function exports_layers_add(e){return new merge_Add(e)}function exports_layers_average(e){return new merge_Average(e)}function exports_layers_concatenate(e){return new merge_Concatenate(e)}function exports_layers_maximum(e){return new merge_Maximum(e)}function exports_layers_minimum(e){return new merge_Minimum(e)}function exports_layers_multiply(e){return new merge_Multiply(e)}function exports_layers_dot(e){return new merge_Dot(e)}function exports_layers_batchNormalization(e){return new normalization_BatchNormalization(e)}function layerNormalization(e){return new normalization_LayerNormalization(e)}function zeroPadding2d(e){return new padding_ZeroPadding2D(e)}function averagePooling1d(e){return new pooling_AveragePooling1D(e)}function avgPool1d(e){return averagePooling1d(e)}function avgPooling1d(e){return averagePooling1d(e)}function averagePooling2d(e){return new pooling_AveragePooling2D(e)}function avgPool2d(e){return averagePooling2d(e)}function avgPooling2d(e){return averagePooling2d(e)}function averagePooling3d(e){return new pooling_AveragePooling3D(e)}function avgPool3d(e){return averagePooling3d(e)}function avgPooling3d(e){return averagePooling3d(e)}function globalAveragePooling1d(e){return new pooling_GlobalAveragePooling1D(e)}function globalAveragePooling2d(e){return new pooling_GlobalAveragePooling2D(e)}function globalMaxPooling1d(e){return new pooling_GlobalMaxPooling1D(e)}function globalMaxPooling2d(e){return new pooling_GlobalMaxPooling2D(e)}function maxPooling1d(e){return new pooling_MaxPooling1D(e)}function maxPooling2d(e){return new pooling_MaxPooling2D(e)}function maxPooling3d(e){return new pooling_MaxPooling3D(e)}function gru(e){return new recurrent_GRU(e)}function gruCell(e){return new recurrent_GRUCell(e)}function lstm(e){return new recurrent_LSTM(e)}function lstmCell(e){return new recurrent_LSTMCell(e)}function simpleRNN(e){return new recurrent_SimpleRNN(e)}function simpleRNNCell(e){return new recurrent_SimpleRNNCell(e)}function convLstm2d(e){return new ConvLSTM2D(e)}function convLstm2dCell(e){return new convolutional_recurrent_ConvLSTM2DCell(e)}function exports_layers_rnn(e){return new recurrent_RNN(e)}function stackedRNNCells(e){return new recurrent_StackedRNNCells(e)}function bidirectional(e){return new wrappers_Bidirectional(e)}function timeDistributed(e){return new wrappers_TimeDistributed(e)}wrappers_Bidirectional.className="Bidirectional",s.Je.registerClass(wrappers_Bidirectional);const ba=globalMaxPooling1d,ya=globalMaxPooling2d,xa=maxPooling1d,va=maxPooling2d;function gaussianNoise(e){return new noise_GaussianNoise(e)}function gaussianDropout(e){return new noise_GaussianDropout(e)}function alphaDropout(e){return new noise_AlphaDropout(e)}function masking(e){return new core_Masking(e)}n("f8bb"),n("526c");n("d303"),n("4850");n("0777"),n("24b0"),n("d7b0");n("132b"),n("1590"),n("8bc9"),n("ba53"),n("53fd");n("46b8"),n("5894"),n("3efc"),n("8629"),n("84d6"),n("7e6a");n("a780"),n("f74c");n("960f");n("bc62");n("04c4"),n("2f2c");n("8bfa"),n("ba40");var ka=n("6125"),wa=n("c388"),Oa=n("bdcf");class dataset_Dataset{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return s.of.assert(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),datasetFromIteratorFn((async()=>(await n.iterator()).columnMajorBatch(e,t,deepBatchConcat)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,datasetFromIteratorFn((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,datasetFromIteratorFn((async()=>(await t.iterator()).filter((t=>s.hf((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return datasetFromIteratorFn((async()=>(await t.iterator()).map((t=>s.hf((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return datasetFromIteratorFn((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return datasetFromIteratorFn((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,datasetFromIteratorFn((async()=>{const n=Object(wa.e)((async()=>({value:await t.iterator(),done:!1})));return Object(wa.d)(n.take(e))}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,datasetFromIteratorFn((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,a=ka.alea(t||s.of.now().toString());return datasetFromIteratorFn((async()=>{let t=a.int32();return n&&(t+=a.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,datasetFromIteratorFn((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function datasetFromIteratorFn(e,t=null){return new class extends dataset_Dataset{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function deepBatchConcat(e){if(null===e)return null;const t=e[0];if(Object(Oa.a)(t)){return{value:function batchConcat(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof s.Tc?s.Ye(e):s.df(e)}(e),recurse:!1}}return{value:null,recurse:!0}}dataset_Dataset.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");wa.a;wa.a;var _a=n("dc14");_a.a;function assertNotComplex(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&s.of.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}const Ia=s.Zd.whereImpl;class backend_cpu_MathBackendCPU extends s.vb{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new s.L(this,Object(s.Kd)())}nextDataId(){return backend_cpu_MathBackendCPU.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Object(s.Ld)().get("IS_NODE")&&s.md.warn("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&s.of.isString(n[0])){const a=n.map((e=>s.of.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return s.md.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>s.of.decodeString(e)))}catch(r){throw new Error("Failed to decode encoded string bytes into utf-8")}return Object(s.rd)(e.shape,e.dtype,n)}makeOutput(e,t,n){const r=this.write(e,t,n);return Object(s.Kd)().makeTensorFromDataId(r,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=s.of.now();e();return{kernelMs:s.of.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){assertNotComplex([e],"where");const t=this.readSync(e.dataId);return Ia(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}backend_cpu_MathBackendCPU.nextDataId=0;function unaryKernelFunc(e,t,n){return({inputs:r,attrs:a,backend:o})=>{const{x:i}=r;if(assertNotComplex(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const u=o,c=u.data.get(i.dataId).values,l=s.of.sizeFromShape(i.shape),d=n||i.dtype,p=s.of.getArrayFromDType(d,l);for(let e=0;e<l;++e)p[e]=t(c[e],a);return u.makeTensorInfo(i.shape,d,p)}}function unaryKernelFuncFromImpl(e,t,n){return({inputs:r,attrs:a,backend:s})=>{const{x:o}=r;if(assertNotComplex(o,e),"string"===o.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const i=s,u=i.data.get(o.dataId).values,c=n||o.dtype,l=t(u,c,a);return i.makeTensorInfo(o.shape,c,l)}}Object(s.Be)("cpu",(()=>new backend_cpu_MathBackendCPU),1);const Sa=unaryKernelFunc(s.V,(e=>e>=0?e:Math.exp(e)-1)),Na={kernelName:s.V,backendName:"cpu",kernelFunc:Sa};function Identity_identity(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Ca={kernelName:s.qb,backendName:"cpu",kernelFunc:Identity_identity};function leakyRelu(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:o}=r;assertNotComplex([a],"leakyRelu");const i=s.of.sizeFromShape(a.shape),u=n.data.get(a.dataId).values,c=s.of.getTypedArrayFromDType("float32",i);for(let s=0;s<u.length;s++)c[s]=u[s]<0?o*u[s]:u[s];return n.makeTensorInfo(a.shape,"float32",c)}const Ta={kernelName:s.yb,backendName:"cpu",kernelFunc:leakyRelu};function createSimpleBinaryKernelImpl(e){return(t,n,r,a,o)=>{const i=s.md.assertAndGetBroadcastShape(t,n),u=i.length,c=s.of.computeStrides(i),l=s.of.sizeFromShape(i),d=s.of.getTypedArrayFromDType(o,l),p=t.length,h=n.length,f=s.of.computeStrides(t),m=s.of.computeStrides(n),g=s.md.getBroadcastDims(t,i),b=s.md.getBroadcastDims(n,i);if(g.length+b.length===0)for(let s=0;s<d.length;++s)d[s]=e(r[s%r.length],a[s%a.length]);else for(let y=0;y<d.length;++y){const t=s.of.indexToLoc(y,u,c),n=t.slice(-p);g.forEach((e=>n[e]=0));const o=s.of.locToIndex(n,p,f),i=t.slice(-h);b.forEach((e=>i[e]=0));const l=s.of.locToIndex(i,h,m);d[y]=e(r[o],a[l])}return[d,i]}}const Aa=createSimpleBinaryKernelImpl(((e,t)=>e<0?t*e:e));function Prelu_prelu(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t;assertNotComplex([r,a],"prelu");const s=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,[i,u]=Aa(r.shape,a.shape,s,o,r.dtype);return n.makeTensorInfo(u,r.dtype,i)}const Ea={kernelName:s.gc,backendName:"cpu",kernelFunc:Prelu_prelu},ja=unaryKernelFunc(s.mc,(e=>Math.max(0,e))),Ra={kernelName:s.mc,backendName:"cpu",kernelFunc:ja},$a=unaryKernelFunc(s.nc,(e=>Math.min(Math.max(0,e),6))),Fa={kernelName:s.nc,backendName:"cpu",kernelFunc:$a};function applyActivation(e,t,n,r,a){if("linear"===n)return Identity_identity({inputs:{x:t},backend:e});if("relu"===n)return ja({inputs:{x:t},backend:e});if("elu"===n)return Sa({inputs:{x:t},backend:e});if("relu6"===n)return $a({inputs:{x:t},backend:e});if("prelu"===n)return Prelu_prelu({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return leakyRelu({inputs:{x:t},backend:e,attrs:{alpha:a}});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function Complex_complex(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,i=n.makeTensorInfo(r.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",o)},i}const Da={kernelName:s.y,backendName:"cpu",kernelFunc:Complex_complex};function zeros_impl_zeros(e,t,n="float32"){if("complex64"===n){return Complex_complex({inputs:{real:zeros_impl_zeros(e,t,"float32"),imag:zeros_impl_zeros(e,t,"float32")},backend:e})}const r=s.of.makeZerosTypedArray(s.of.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function Real_real(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const za={kernelName:s.jc,backendName:"cpu",kernelFunc:Real_real};function Cast_cast(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:o}=r;if("complex64"===o){if("complex64"===a.dtype)return Identity_identity({inputs:{x:a},backend:n});const e=zeros_impl_zeros(n,a.shape,a.dtype),t=Cast_cast({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=Complex_complex({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){const e=Real_real({inputs:{input:a},backend:n}),t=Cast_cast({inputs:{x:e},backend:n,attrs:{dtype:o}});return n.disposeIntermediateTensorInfo(e),t}if(!s.of.hasEncodingLoss(a.dtype,o)){const e=Identity_identity({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:o}}if("int32"===o){const e=n.data.get(a.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(a.shape,"int32",t)}if("bool"===o){const e=n.data.get(a.dataId).values,t=s.of.toTypedArray([0],a.dtype),[r,o]=createSimpleBinaryKernelImpl(((e,t)=>e!==t?1:0))(a.shape,[],e,t,"bool");return n.makeTensorInfo(o,"bool",r)}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${o}`)}const Pa={kernelName:s.v,backendName:"cpu",kernelFunc:Cast_cast};function binaryKernelFunc(e,t,n,r){return null==n?({inputs:n,backend:a})=>{const{a:s,b:o}=n,i=a;assertNotComplex([s,o],e);const u=i.data.get(s.dataId).values,c=i.data.get(o.dataId).values,l=r||s.dtype,[d,p]=t(s.shape,o.shape,u,c,l);return i.makeTensorInfo(p,l,d)}:({inputs:e,backend:a})=>{const{a:s,b:o}=e,i=a;if("complex64"===s.dtype||"complex64"===o.dtype){const e=Cast_cast({inputs:{x:s},backend:i,attrs:{dtype:"complex64"}}),t=i.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,u=i.data.get(r.dataId).values,c=i.data.get(a.dataId).values,l=Cast_cast({inputs:{x:o},backend:i,attrs:{dtype:"complex64"}}),d=i.data.get(l.dataId),p=d.complexTensorInfos.real,h=d.complexTensorInfos.imag,f=i.data.get(p.dataId).values,m=i.data.get(h.dataId).values,[g,b,y]=n(s.shape,o.shape,u,c,f,m),x=i.makeTensorInfo(y,"float32",g),v=i.makeTensorInfo(y,"float32",b),k=Complex_complex({inputs:{real:x,imag:v},backend:i});return i.disposeIntermediateTensorInfo(e),i.disposeIntermediateTensorInfo(l),i.disposeIntermediateTensorInfo(x),i.disposeIntermediateTensorInfo(v),k}{const e=i.data.get(s.dataId).values,n=i.data.get(o.dataId).values,a=r||s.dtype,[u,c]=t(s.shape,o.shape,e,n,a);return i.makeTensorInfo(c,a,u)}}}function createComplexBinaryKernelImpl(e){return(t,n,r,a,o,i)=>{const u=s.md.assertAndGetBroadcastShape(t,n),c=s.of.sizeFromShape(u),l=u.length,d=s.of.computeStrides(u),p=s.of.getTypedArrayFromDType("float32",c),h=s.of.getTypedArrayFromDType("float32",c),f=s.md.getBroadcastDims(t,u),m=s.md.getBroadcastDims(n,u),g=s.md.mergeRealAndImagArrays(r,a),b=s.md.mergeRealAndImagArrays(o,i),y=t.length,x=s.of.computeStrides(t),v=n.length,k=s.of.computeStrides(n);if(f.length+m.length===0)for(let s=0;s<p.length;s++){const t=s%g.length,n=s%b.length,r=e(g[2*t],g[2*t+1],b[2*n],b[2*n+1]);p[s]=r.real,h[s]=r.imag}else for(let w=0;w<p.length;w++){const t=s.of.indexToLoc(w,l,d),n=t.slice(-y);f.forEach((e=>n[e]=0));const r=s.of.locToIndex(n,y,x),a=t.slice(-v);m.forEach((e=>a[e]=0));const o=s.of.locToIndex(a,v,k),i=e(g[2*r],g[2*r+1],b[2*o],b[2*o+1]);p[w]=i.real,h[w]=i.imag}return[p,h,u]}}const La=createSimpleBinaryKernelImpl(((e,t)=>e+t)),Ma=createComplexBinaryKernelImpl(((e,t,n,r)=>({real:e+n,imag:t+r}))),Ba=binaryKernelFunc(s.d,La,Ma),Va={kernelName:s.d,backendName:"cpu",kernelFunc:Ba};function Reshape_reshape(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:o}=r,i=s.of.sizeFromShape(a.shape),u=s.of.inferFromImplicitShape(o,i),c=s.of.sizeFromShape(u);s.of.assert(i===c,(()=>`The new shape (${u}) has ${c} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(a.dataId);const l=n.data.get(a.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=u,t.shape=u}return{dataId:a.dataId,shape:u,dtype:a.dtype}}const Wa={kernelName:s.oc,backendName:"cpu",kernelFunc:Reshape_reshape};function batchMatMul(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:o}=t,{transposeA:i,transposeB:u}=r;assertNotComplex([a,o],"matMul");const c=a.shape.length,l=o.shape.length,d=i?a.shape[c-2]:a.shape[c-1],p=u?o.shape[l-1]:o.shape[l-2],h=i?a.shape[c-1]:a.shape[c-2],f=u?o.shape[l-2]:o.shape[l-1],m=a.shape.slice(0,-2),g=o.shape.slice(0,-2),b=s.of.sizeFromShape(m),y=s.of.sizeFromShape(g),x=b===y||1===b||1===y;s.of.assert(c>=2&&l>=2&&x,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${g}).`));const v=(b>y?a.shape.slice(0,-2):o.shape.slice(0,-2)).concat([h,f]);s.of.assert(d===p,(()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${a.shape} and ${o.shape} and transposeA=${i} and transposeB=${u} must match.`));const k=u?[y,f,p]:[y,p,f],w=Reshape_reshape({inputs:{x:a},backend:n,attrs:{shape:i?[b,d,h]:[b,h,d]}}),O=Reshape_reshape({inputs:{x:o},backend:n,attrs:{shape:k}}),_=i?w.shape[1]:w.shape[2],I=i?w.shape[2]:w.shape[1],S=u?O.shape[1]:O.shape[2],N=Math.max(b,y),C=n.data.get(w.dataId).values,T=n.data.get(O.dataId).values,A=s.of.computeStrides(w.shape),E=s.of.computeStrides(O.shape),[j,R,$]=i?[A[0],1,A[1]]:[A[0],A[1],1],[D,z,P]=u?[1,E[1],E[0]]:[E[1],1,E[0]],L=I*S,M=Object(s.rd)([N,I,S],w.dtype),B=M.values,V=n.blockSize;for(let s=0;s<N;s++)for(let e=0;e<I;e+=V)for(let t=0;t<S;t+=V)for(let n=0;n<_;n+=V){const r=Math.min(e+V,I),a=Math.min(t+V,S),o=Math.min(n+V,_);for(let i=e;i<r;i++)for(let e=t;e<a;e++){let t=0;for(let r=n;r<o;r++){const n=Math.min(s,b-1)*j,a=Math.min(s,y-1)*P;t+=C[n+i*R+r*$]*T[r*D+e*z+a]}B[s*L+(i*S+e)]+=t}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(O),n.makeTensorInfo(v,M.dtype,M.values)}const Ua={kernelName:s.s,backendName:"cpu",kernelFunc:batchMatMul};const Ga={kernelName:s.dd,backendName:"cpu",kernelFunc:function _fusedMatMul(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:o,preluActivationWeights:i}=t,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=r;let p,h,f;const m=[];p=batchMatMul({inputs:{a:a,b:s},attrs:{transposeA:u,transposeB:c},backend:n}),o&&(h=Ba({inputs:{a:p,b:o},backend:n}),m.push(p),p=h),l&&(f=applyActivation(n,p,l,i,d),m.push(p),p=f);for(const g of m)n.disposeIntermediateTensorInfo(g);return p}};function simpleAbsImpl(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const Ha={kernelName:s.a,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;assertNotComplex(t,"abs");let r=new Float32Array(s.of.sizeFromShape(t.shape));return r=simpleAbsImpl(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,"float32")}},Ka=unaryKernelFunc(s.b,(e=>Math.acos(e))),qa={kernelName:s.b,backendName:"cpu",kernelFunc:Ka},Xa=unaryKernelFunc(s.c,(e=>Math.acosh(e))),Ja={kernelName:s.c,backendName:"cpu",kernelFunc:Xa};const Ya={kernelName:s.e,backendName:"cpu",kernelFunc:function addN(e){const{inputs:t,backend:n}=e,r=t;assertNotComplex(t,"addN");const a=r.map((e=>n.data.get(e.dataId).values)),o=Object(s.rd)(r[0].shape,r[0].dtype),i=o.values;for(let s=0;s<r.length;s++){const e=a[s];for(let t=0;t<i.length;t++)i[t]+=e[t]}return n.makeTensorInfo(o.shape,o.dtype,o.values)}};function transposeImpl(e,t,n,r,a){const o=t.length,i=s.of.sizeFromShape(t),u=s.of.computeStrides(t),c=s.of.computeStrides(a),l=s.of.getTypedArrayFromDType(n,s.of.sizeFromShape(a));for(let d=0;d<i;++d){const t=s.of.indexToLoc(d,o,u),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[r[e]];l[s.of.locToIndex(n,o,c)]=e[d]}return l}function Transpose_transpose(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:s}=n;assertNotComplex(a,"transpose");const o=a.shape.length,i=new Array(o);for(let c=0;c<i.length;c++)i[c]=a.shape[s[c]];const u=transposeImpl(r.data.get(a.dataId).values,a.shape,a.dtype,s,i);return{dataId:r.write(u,i,a.dtype),shape:i,dtype:a.dtype}}const Za={kernelName:s.Yc,backendName:"cpu",kernelFunc:Transpose_transpose};const Qa={kernelName:s.f,backendName:"cpu",kernelFunc:function All_all(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o,keepDims:i}=r;assertNotComplex(a,"all");const u=s.of.parseAxisParam(o,a.shape);let c=u;const l=s.md.getAxesPermutation(c,a.shape.length);let d=a;null!=l&&(d=Transpose_transpose({inputs:{x:a},backend:n,attrs:{perm:l}}),c=s.md.getInnerMostAxes(c.length,a.shape.length)),s.md.assertAxesAreInnerMostDims("all",c,d.shape.length);const[p,h]=s.md.computeOutAndReduceShapes(d.shape,c),f=s.of.sizeFromShape(h),m=s.of.makeZerosTypedArray(s.of.sizeFromShape(p),d.dtype),g=n.data.get(d.dataId).values;for(let s=0;s<m.length;++s){const e=s*f;let t=g[e];for(let n=0;n<f;++n){const r=g[e+n];t=t&&r}m[s]=t}null!=l&&n.disposeIntermediateTensorInfo(d);const b=n.makeTensorInfo(p,d.dtype,m);if(i){const e=Reshape_reshape({inputs:{x:b},backend:n,attrs:{shape:s.md.expandShapeToKeepDim(p,u)}});return n.disposeIntermediateTensorInfo(b),e}return b}};const es={kernelName:s.g,backendName:"cpu",kernelFunc:function Any_any(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o,keepDims:i}=r;assertNotComplex(a,"any");const u=s.of.parseAxisParam(o,a.shape);let c=u;const l=s.md.getAxesPermutation(c,a.shape.length);let d=a;null!=l&&(d=Transpose_transpose({inputs:{x:a},backend:n,attrs:{perm:l}}),c=s.md.getInnerMostAxes(c.length,a.shape.length)),s.md.assertAxesAreInnerMostDims("any",c,d.shape.length);const[p,h]=s.md.computeOutAndReduceShapes(d.shape,c),f=s.of.sizeFromShape(h),m=s.of.makeZerosTypedArray(s.of.sizeFromShape(p),d.dtype),g=n.data.get(d.dataId).values;for(let s=0;s<m.length;++s){const e=s*f;let t=g[e];for(let n=0;n<f;++n){const r=g[e+n];t=t||r}m[s]=t}null!=l&&n.disposeIntermediateTensorInfo(d);const b=n.makeTensorInfo(p,d.dtype,m);if(i){const e=Reshape_reshape({inputs:{x:b},backend:n,attrs:{shape:s.md.expandShapeToKeepDim(p,u)}});return n.disposeIntermediateTensorInfo(b),e}return b}};const ts={kernelName:s.h,backendName:"cpu",kernelFunc:function argMax(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o}=r;assertNotComplex(a,"argMax");let i=s.of.parseAxisParam(o,a.shape);const u=s.md.getAxesPermutation(i,a.shape.length);let c=a;const l=[];null!=u&&(c=Transpose_transpose({inputs:{x:a},backend:n,attrs:{perm:u}}),l.push(c),i=s.md.getInnerMostAxes(i.length,c.shape.length)),i=[i[0]],s.md.assertAxesAreInnerMostDims("argMax",i,c.shape.length);const[d,p]=s.md.computeOutAndReduceShapes(c.shape,i),h=s.of.sizeFromShape(d),f=s.of.makeZerosTypedArray(h,"int32"),m=s.of.sizeFromShape(p),g=n.data.get(c.dataId).values;for(let s=0;s<f.length;++s){const e=s*m;let t=g[e],n=0;for(let r=0;r<m;++r){const a=g[e+r];a>t&&(t=a,n=r)}f[s]=n}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(d,"int32",f)}};const ns={kernelName:s.i,backendName:"cpu",kernelFunc:function argMin(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o}=r;assertNotComplex(a,"argMin");let i=s.of.parseAxisParam(o,a.shape);const u=s.md.getAxesPermutation(i,a.shape.length);let c=a;const l=[];null!=u&&(c=Transpose_transpose({inputs:{x:a},backend:n,attrs:{perm:u}}),l.push(c),i=s.md.getInnerMostAxes(i.length,c.shape.length)),i=[i[0]],s.md.assertAxesAreInnerMostDims("argMin",i,c.shape.length);const[d,p]=s.md.computeOutAndReduceShapes(c.shape,i),h=s.of.sizeFromShape(d),f=s.of.makeZerosTypedArray(h,"int32"),m=s.of.sizeFromShape(p),g=n.data.get(c.dataId).values;for(let s=0;s<f.length;++s){const e=s*m;let t=g[e],n=0;for(let r=0;r<m;++r){const a=g[e+r];a<t&&(t=a,n=r)}f[s]=n}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(d,"int32",f)}},rs=unaryKernelFunc(s.j,(e=>Math.asin(e))),as={kernelName:s.j,backendName:"cpu",kernelFunc:rs},ss=unaryKernelFunc(s.k,(e=>Math.asinh(e))),os={kernelName:s.k,backendName:"cpu",kernelFunc:ss},is=unaryKernelFunc(s.l,(e=>Math.atan(e))),us={kernelName:s.l,backendName:"cpu",kernelFunc:is},cs=createSimpleBinaryKernelImpl(((e,t)=>Math.atan2(e,t))),ls=binaryKernelFunc(s.m,cs),ds={kernelName:s.m,backendName:"cpu",kernelFunc:ls},ps=unaryKernelFunc(s.n,(e=>Math.atanh(e))),hs={kernelName:s.n,backendName:"cpu",kernelFunc:ps};function pool_utils_pool(e,t,n,r,a,o){const i=a.strideHeight,u=a.strideWidth,c=a.dilationHeight,l=a.dilationWidth,d=a.effectiveFilterHeight,p=a.effectiveFilterWidth,h=a.padInfo.top,f=a.padInfo.left,m="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=Object(s.rd)(a.outShape,n),b=g.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],x=a.outShape[2]*a.outShape[3],v=a.outShape[3];for(let s=0;s<a.batchSize;++s){const t=s*y,n=s*r[0];for(let s=0;s<a.inChannels;++s)for(let g=0;g<a.outHeight;++g){const y=g*i-h,k=Math.max(0,y),w=Math.min(a.inHeight,d+y),O=t+g*x;for(let t=0;t<a.outWidth;++t){const i=t*u-f,d=Math.max(0,i),h=Math.min(a.inWidth,p+i);let g=m,y=0,x=0;for(let t=k;t<w;t+=c){const a=n+t*r[1];for(let t=d;t<h;t+=l){const n=e[a+t*r[2]+s];"max"===o&&n>g?g=n:"avg"===o&&(y+=n,x++)}if(isNaN(g))break}b[O+t*v+s]="avg"===o?y/x:g}}}return g}function pool_utils_maxPoolPositions(e,t,n,r,a=!1,o=!1){const i=Object(s.rd)(r.outShape,"int32"),u=r.strideHeight,c=r.strideWidth,l=r.dilationHeight,d=r.dilationWidth,p=r.effectiveFilterHeight,h=r.effectiveFilterWidth,f=r.padInfo.top,m=r.padInfo.left,g=Object(s.rd)(t,n,e);for(let s=0;s<r.batchSize;++s)for(let e=0;e<r.inChannels;++e)for(let t=0;t<r.outHeight;++t){const n=t*u-f;let b=n;for(;b<0;)b+=l;const y=Math.min(r.inHeight,p+n);for(let u=0;u<r.outWidth;++u){const p=u*c-m;let f=p;for(;f<0;)f+=d;const x=Math.min(r.inWidth,h+p);let v=Number.NEGATIVE_INFINITY,k=-1;for(let t=b;t<y;t+=l){const i=t-n;for(let n=f;n<x;n+=d){const u=n-p,c=g.get(s,t,n,e);c>v&&(v=c,k=a?o?((s*r.inHeight+t)*r.inWidth+n)*r.inChannels+e:(t*r.inWidth+n)*r.inChannels+e:i*h+u)}}i.set(k,s,t,u,e)}}return i}function pool_utils_pool3d(e,t,n,r,a,o){const i=a.strideDepth,u=a.strideHeight,c=a.strideWidth,l=a.dilationDepth,d=a.dilationHeight,p=a.dilationWidth,h=a.effectiveFilterDepth,f=a.effectiveFilterHeight,m=a.effectiveFilterWidth,g=a.padInfo.front,b=a.padInfo.top,y=a.padInfo.left,x="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=Object(s.rd)(a.outShape,n),k=v.values,w=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],O=a.outShape[2]*a.outShape[3]*a.outShape[4],_=a.outShape[3]*a.outShape[4],I=a.outShape[4];for(let s=0;s<a.batchSize;++s){const t=s*w,n=s*r[0];for(let s=0;s<a.inChannels;++s)for(let v=0;v<a.outDepth;++v){const w=v*i-g;let S=w;for(;S<0;)S+=l;const N=Math.min(a.inDepth,h+w),C=t+v*O;for(let t=0;t<a.outHeight;++t){const i=t*u-b;let h=i;for(;h<0;)h+=d;const g=Math.min(a.inHeight,f+i),v=C+t*_;for(let t=0;t<a.outWidth;++t){const i=t*c-y;let u=i;for(;u<0;)u+=p;const f=Math.min(a.inWidth,m+i),b=v+t*I;let w=x,O=0,_=0;for(let t=S;t<N;t+=l){const a=n+t*r[1];for(let t=h;t<g;t+=d){const n=a+t*r[2];for(let t=u;t<f;t+=p){const a=e[n+t*r[3]+s];if("max"===o&&a>w?w=a:"avg"===o&&(O+=a,_++),isNaN(w))break}if(isNaN(w))break}if(isNaN(w))break}k[b+s]="avg"===o?O/_:w}}}}return v}const fs={kernelName:s.o,backendName:"cpu",kernelFunc:function avgPool(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;assertNotComplex(a,"avgPool");const{filterSize:o,strides:i,pad:u,dimRoundingMode:c}=r;s.of.assert(s.md.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=s.md.computePool2DInfo(a.shape,o,i,1,u,c);let d;if(1===l.filterWidth&&1===l.filterHeight&&s.of.arraysEqual(l.inShape,l.outShape))d=Identity_identity({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=s.of.computeStrides(a.shape),r=pool_utils_pool(e,a.shape,a.dtype,t,l,"avg");d=n.makeTensorInfo(l.outShape,a.dtype,r.values)}return d}};const ms={kernelName:s.p,backendName:"cpu",kernelFunc:function avgPool3D(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:o,strides:i,pad:u,dimRoundingMode:c,dataFormat:l}=r;assertNotComplex(a,"avgPool3d");const d=s.md.computePool3DInfo(a.shape,o,i,1,u,c,l),p=pool_utils_pool3d(n.data.get(a.dataId).values,a.shape,a.dtype,s.of.computeStrides(a.shape),d,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}};const gs={kernelName:s.q,backendName:"cpu",kernelFunc:function avgPool3DGrad(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:o}=t,{filterSize:i,strides:u,pad:c,dimRoundingMode:l}=r;assertNotComplex([a,o],"avgPool3DGrad");const d=s.md.computePool3DInfo(o.shape,i,u,1,c,l),p=d.strideDepth,h=d.strideHeight,f=d.strideWidth,m=d.filterDepth,g=d.filterHeight,b=d.filterWidth,y=d.dilationDepth,x=d.dilationHeight,v=d.dilationWidth,k=d.effectiveFilterDepth,w=d.effectiveFilterHeight,O=d.effectiveFilterWidth,_=k-1-d.padInfo.front,I=O-1-d.padInfo.left,S=w-1-d.padInfo.top,N=Object(s.rd)(o.shape,"float32"),C=1/(m*g*b),T=n.bufferSync(a);for(let s=0;s<d.batchSize;++s)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inDepth;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){const a=t-_,o=n-S,i=r-I;let u=0;for(let t=0;t<k;t+=y){const n=(a+t)/p;if(!(n<0||n>=d.outDepth||Math.floor(n)!==n))for(let t=0;t<w;t+=x){const r=(o+t)/h;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let t=0;t<O;t+=v){const a=(i+t)/f;if(a<0||a>=d.outWidth||Math.floor(a)!==a)continue;u+=T.get(s,n,r,a,e)}}}N.set(u*C,s,t,n,r,e)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}};const bs={kernelName:s.r,backendName:"cpu",kernelFunc:function AvgPoolGrad_avgPoolGrad(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:o}=t,i=o;assertNotComplex([a,o],"avgPoolGrad");const{filterSize:u,strides:c,pad:l}=r,d=s.md.computePool2DInfo(i.shape,u,c,1,l),p=d.strideHeight,h=d.strideWidth,f=d.filterHeight,m=d.filterWidth,g=d.dilationHeight,b=d.dilationWidth,y=d.effectiveFilterHeight,x=d.effectiveFilterWidth,v=x-1-d.padInfo.left,k=y-1-d.padInfo.top,w=Object(s.rd)(i.shape,"float32"),O=1/(f*m),_=n.data.get(a.dataId).values,I=Object(s.rd)(a.shape,"float32",_);for(let s=0;s<d.batchSize;++s)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inHeight;++t)for(let n=0;n<d.inWidth;++n){const r=t-k,a=n-v;let o=0;for(let t=0;t<y;t+=g){const n=(r+t)/p;if(!(n<0||n>=d.outHeight||Math.floor(n)!==n))for(let t=0;t<x;t+=b){const r=(a+t)/h;if(r<0||r>=d.outWidth||Math.floor(r)!==r)continue;o+=I.get(s,n,r,e)}}w.set(o*O,s,t,n,e)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const ys={kernelName:s.ib,backendName:"cpu",kernelFunc:function batchNorm(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,scale:o,offset:i,mean:u,variance:c}=t;s.of.assert(u.shape.length===c.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),s.of.assert(null==i||u.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),s.of.assert(null==o||u.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),assertNotComplex([a,u,c,o,i],"batchNorm");let{varianceEpsilon:l}=r;null==l&&(l=.001);const d=n.data.get(a.dataId).values,p=n.data.get(u.dataId).values,h=n.data.get(c.dataId).values,f=o?n.data.get(o.dataId).values:new Float32Array([1]),m=i?n.data.get(i.dataId).values:new Float32Array([0]),g=new Float32Array(d.length),b=m.length,y=f.length,x=h.length,v=p.length;let k=0,w=0,O=0,_=0;for(let s=0;s<d.length;++s)g[s]=m[k++]+(d[s]-p[w++])*f[O++]/Math.sqrt(h[_++]+l),k>=b&&(k=0),w>=v&&(w=0),O>=y&&(O=0),_>=x&&(_=0);return n.makeTensorInfo(a.shape,a.dtype,g)}};function sliceImpl(e,t,n,r,a){const o=s.Re.isSliceContinous(r,t,n),i=s.of.sizeFromShape(n),u=s.of.computeStrides(r);if(o){const n=s.Re.computeFlatOffset(t,u);return"string"===a?e.slice(n,n+i):e.subarray(n,n+i)}const c="string"===a?s.md.fromUint8ToStringArray(e):e,l=Object(s.rd)(r,a,c),d=Object(s.rd)(n,a);for(let s=0;s<d.size;++s){const e=d.indexToLoc(s),n=e.map(((e,n)=>e+t[n]));d.set(l.get(...n),...e)}return"string"===a?s.md.fromStringArrayToUint8(d.values):d.values}function Slice_slice(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:o,size:i}=r;assertNotComplex(a,"slice");const[u,c]=s.Re.parseSliceParams(a,o,i);s.Re.assertParamsValid(a,u,c);const l=sliceImpl(n.data.get(a.dataId).values,u,c,a.shape,a.dtype);return n.makeTensorInfo(c,a.dtype,l)}const xs={kernelName:s.Ec,backendName:"cpu",kernelFunc:Slice_slice};const vs={kernelName:s.t,backendName:"cpu",kernelFunc:function batchToSpaceND(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:o,crops:i}=r;assertNotComplex([a],"batchToSpaceND");const u=o.reduce(((e,t)=>e*t)),c=s.md.getReshaped(a.shape,o,u),l=s.md.getPermuted(c.length,o.length),d=s.md.getReshapedPermuted(a.shape,o,u),p=s.md.getSliceBeginCoords(i,o.length),h=s.md.getSliceSize(d,i,o.length),f=Reshape_reshape({inputs:{x:a},backend:n,attrs:{shape:c}}),m=Transpose_transpose({inputs:{x:f},backend:n,attrs:{perm:l}}),g=Reshape_reshape({inputs:{x:m},backend:n,attrs:{shape:d}}),b=Slice_slice({inputs:{x:g},backend:n,attrs:{begin:p,size:h}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),b}};function bincountImpl(e,t,n,r,a){const o=s.of.sizeFromShape(r),i=s.of.makeZerosTypedArray(a,n);for(let s=0;s<e.length;s++){const n=e[s];if(n<0)throw new Error("Input x must be non-negative!");n>=a||(i[n]+=o>0?t[s]:1)}return i}function bincountReduceImpl(e,t,n,r=!1){const a=e.shape[0],o=e.shape[1],i=Object(s.rd)([a,n],t.dtype);for(let s=0;s<a;s++)for(let a=0;a<o;a++){const o=e.get(s,a);if(o<0)throw new Error("Input x must be non-negative!");o>=n||(r?i.set(1,s,o):t.size>0?i.set(i.get(s,o)+t.get(s,a),s,o):i.set(i.get(s,o)+1,s,o))}return i}const ks={kernelName:s.u,backendName:"cpu",kernelFunc:function Bincount_bincount(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:o}=r,i=bincountImpl(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,i)}};function createSimpleUnaryImpl(e){return(t,n,r)=>{const a=s.of.getTypedArrayFromDType(n,t.length);for(let s=0;s<t.length;++s)a[s]=e(t[s],r);return a}}const ws=createSimpleUnaryImpl((e=>Math.ceil(e))),Os=unaryKernelFuncFromImpl(s.w,ws),_s={kernelName:s.w,backendName:"cpu",kernelFunc:Os},Is=unaryKernelFunc(s.x,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),Ss={kernelName:s.x,backendName:"cpu",kernelFunc:Is},Ns={kernelName:s.z,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(s.of.sizeFromShape(t.shape)),a=n.data.get(t.dataId),o=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,u=n.data.get(o.dataId).values,c=n.data.get(i.dataId).values;for(let s=0;s<u.length;s++){const e=u[s],t=c[s];r[s]=Math.hypot(e,t)}return n.makeOutput(r,t.shape,"float32")}};function concatImpl(e,t,n,r){const a=s.of.getArrayFromDType(n,s.of.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=s.of.sizeFromShape(e.shape);a.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const o="string"===n?s.md.fromUint8ToStringArray(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const s=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[s+t]=o[i++]}r+=e.shape[1]}))}return a}function Imag_imag(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const Cs={kernelName:s.rb,backendName:"cpu",kernelFunc:Imag_imag};function Concat_concat(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,o=s.of.parseAxisParam(a,t[0].shape)[0];let i=s.md.computeOutShape(t.map((e=>e.shape)),o);if(0===s.of.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const u=t.filter((e=>s.of.sizeFromShape(e.shape)>0));if(1===u.length)return Identity_identity({inputs:{x:u[0]},backend:n});const c=u.map((e=>e.shape));if(s.md.assertParamsConsistent(c,o),"complex64"===u[0].dtype){const e=u.map((e=>Real_real({inputs:{input:e},backend:n}))),t=u.map((e=>Imag_imag({inputs:{input:e},backend:n}))),r=Concat_concat({inputs:e,backend:n,attrs:{axis:o}}),a=Concat_concat({inputs:t,backend:n,attrs:{axis:o}}),s=Complex_complex({inputs:{real:r,imag:a},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),s}const l=u.map((e=>{const t=s.of.sizeFromShape(e.shape.slice(o));return Reshape_reshape({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),d=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=s.md.computeOutShape(l.map((e=>e.shape)),1);const p=1===l[0].shape[0],h=concatImpl(d,i,t[0].dtype,p),f=s.md.computeOutShape(u.map((e=>e.shape)),o),m=n.makeTensorInfo(f,t[0].dtype,h);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),m}const Ts={kernelName:s.A,backendName:"cpu",kernelFunc:Concat_concat};function conv2D(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:o}=t,{strides:i,pad:u,dataFormat:c,dilations:l,dimRoundingMode:d}=r;assertNotComplex([a,o],"conv2d");const p=s.md.convertConv2DDataFormat(c),h=s.md.computeConv2DInfo(a.shape,o.shape,i,l,u,d,!1,p),f=h.filterHeight,m=h.filterWidth,g=h.dilationHeight,b=h.dilationWidth,y=h.padInfo.left,x=h.padInfo.top,v="channelsLast"===h.dataFormat,k=new s.Uc(h.outShape,a.dtype),w=s.of.computeStrides(a.shape),O=s.of.computeStrides(o.shape),_=w[0],I=v?w[1]:w[2],S=v?w[2]:1,N=v?1:w[1],C=k.strides[0],T=v?k.strides[1]:k.strides[2],A=v?k.strides[2]:1,E=v?1:k.strides[1],j=n.data.get(a.dataId).values,R=n.data.get(o.dataId).values,$=k.values;for(let s=0;s<h.batchSize;++s){const e=s*_,t=s*C;for(let n=0;n<h.outHeight;++n){const r=t+n*T,a=n*h.strideHeight-x;for(let t=0;t<f;++t){const n=a+t*g;if(n<0||n>=h.inHeight)continue;const s=t*O[0],o=e+n*I;for(let e=0;e<h.outWidth;++e){const t=r+e*A,n=e*h.strideWidth-y;for(let e=0;e<m;++e){const r=n+e*b;if(r<0||r>=h.inWidth)continue;const a=o+r*S;let i=s+e*O[1];for(let e=0;e<h.inChannels;++e){const n=j[a+e*N];for(let e=0;e<h.outChannels;++e)$[t+e*E]+=n*R[i+e];i+=h.outChannels}}}}}}return n.makeTensorInfo(k.shape,k.dtype,$)}const As={kernelName:s.B,backendName:"cpu",kernelFunc:conv2D};const Es={kernelName:s.C,backendName:"cpu",kernelFunc:function conv2DBackpropFilter(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:o}=t,{strides:i,pad:u,dataFormat:c,dimRoundingMode:l,filterShape:d}=r;assertNotComplex([a,o],"conv2dBackpropFilter");const p=s.md.convertConv2DDataFormat(c),h=s.md.computeConv2DInfo(a.shape,d,i,1,u,l,!1,p),{strideHeight:f,strideWidth:m,filterHeight:g,filterWidth:b}=h,y="channelsLast"===h.dataFormat,x=new s.Uc(h.filterShape,"float32"),v=h.padInfo.left,k=h.padInfo.top,w=n.data.get(a.dataId).values,O=n.data.get(o.dataId).values,_=new s.Uc(a.shape,a.dtype,w),I=new s.Uc(o.shape,o.dtype,O);for(let s=0;s<g;++s){const e=Math.max(0,Math.ceil((k-s)/f)),t=Math.min(h.outHeight,(h.inHeight+k-s)/f);for(let n=0;n<b;++n){const r=Math.max(0,Math.ceil((v-n)/m)),a=Math.min(h.outWidth,(h.inWidth+v-n)/m);for(let o=0;o<h.inChannels;++o)for(let i=0;i<h.outChannels;++i){let u=0;for(let c=0;c<h.batchSize;++c)for(let l=e;l<t;++l){const e=s+l*f-k;for(let t=r;t<a;++t){const r=n+t*m-v;u+=y?_.get(c,e,r,o)*I.get(c,l,t,i):_.get(c,o,e,r)*I.get(c,i,l,t)}}x.set(u,s,n,o,i)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};const js={kernelName:s.D,backendName:"cpu",kernelFunc:function conv2DBackpropInput(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:o}=t,{inputShape:i,strides:u,pad:c,dataFormat:l,dimRoundingMode:d}=r;assertNotComplex([a,o],"conv2dBackpropInput");const p=s.of.computeStrides(o.shape),h=s.of.computeStrides(a.shape);let f=s.md.convertConv2DDataFormat(l);const m=s.md.computeConv2DInfo(i,o.shape,u,1,c,d,!1,f),g=new s.Uc(m.inShape,"float32"),b=g.values,y=n.data.get(a.dataId).values,x=n.data.get(o.dataId).values,[v,k,w]=p,{batchSize:O,filterHeight:_,filterWidth:I,inChannels:S,inHeight:N,inWidth:C,outChannels:T,outHeight:A,outWidth:E,strideHeight:j,strideWidth:R}=m;f=m.dataFormat;const $=_-1-m.padInfo.top,D=I-1-m.padInfo.left,z="channelsLast"===f,P=g.strides[0],L=z?g.strides[1]:g.strides[2],M=z?g.strides[2]:1,B=z?1:g.strides[1],V=h[0],W=z?h[1]:h[2],U=z?h[2]:1,G=z?1:h[1];for(let s=0;s<O;++s)for(let e=0;e<S;++e)for(let t=0;t<N;++t){const n=t-$,r=Math.max(0,Math.ceil(n/j)),a=Math.min(A,(_+n)/j);for(let o=0;o<C;++o){const i=o-D,u=Math.max(0,Math.ceil(i/R)),c=Math.min(E,(I+i)/R);let l=0;for(let t=r;t<a;++t){const r=t*j-n;for(let n=u;n<c;++n){const a=V*s+W*t+U*n,o=v*(_-1-r)+k*(I-1-(n*R-i))+w*e;for(let e=0;e<T;++e){l+=y[a+G*e]*x[o+e]}}}b[P*s+L*t+M*o+B*e]=l}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const Rs={kernelName:s.E,backendName:"cpu",kernelFunc:function conv3D(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:o}=t,{strides:i,pad:u,dilations:c}=r;assertNotComplex([a,o],"conv3d");const l=s.md.computeConv3DInfo(a.shape,o.shape,i,c,u),{filterDepth:d,filterHeight:p,filterWidth:h,dilationDepth:f,dilationHeight:m,dilationWidth:g,padInfo:b}=l,y=b.front,x=b.left,v=b.top,k=new s.Uc(l.outShape,a.dtype),w=n.data.get(a.dataId).values,O=n.data.get(o.dataId).values,_=k.values,I=s.of.computeStrides(a.shape),S=s.of.computeStrides(o.shape);for(let s=0;s<l.batchSize;++s){const e=s*I[0],t=s*k.strides[0];for(let n=0;n<l.outDepth;++n){const r=t+n*k.strides[1],a=n*l.strideDepth-y;for(let t=0;t<d;++t){const n=a+t*f;if(n<0||n>=l.inDepth)continue;const s=t*S[0],o=e+n*I[1];for(let e=0;e<l.outHeight;++e){const t=r+e*k.strides[2],n=e*l.strideHeight-v;for(let e=0;e<p;++e){const r=n+e*m;if(r<0||r>=l.inHeight)continue;const a=s+e*S[1],i=o+r*I[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,r=e*l.strideWidth-x;for(let e=0;e<h;++e){const t=r+e*g;if(t<0||t>=l.inWidth)continue;const s=a+e*S[2],o=i+t*l.inChannels;let u=s;for(let e=0;e<l.inChannels;++e){const t=w[o+e];for(let e=0;e<l.outChannels;++e)_[n+e]+=t*O[u+e];u+=l.outChannels}}}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}};const $s={kernelName:s.F,backendName:"cpu",kernelFunc:function conv3DBackpropFilterV2(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:o}=t,{strides:i,pad:u,filterShape:c}=r;assertNotComplex([a,o],"conv3dBackpropFilterV2");const l=s.of.computeStrides(a.shape),d=s.of.computeStrides(o.shape),p=s.md.computeConv3DInfo(a.shape,c,i,1,u),h=p.strideDepth,f=p.strideHeight,m=p.strideWidth,g=p.filterDepth,b=p.filterHeight,y=p.filterWidth,x=new s.Uc(p.filterShape,"float32"),v=x.values,[k,w,O,_]=x.strides,I=n.data.get(o.dataId).values,[S,N,C,T]=d,A=n.data.get(a.dataId).values,[E,j,R,$]=l,D=p.padInfo.front,z=p.padInfo.left,P=p.padInfo.top;for(let s=0;s<g;++s){const e=Math.max(0,Math.ceil((D-s)/h)),t=Math.min(p.outDepth,(p.inDepth+D-s)/h),n=s*k;for(let r=0;r<b;++r){const a=Math.max(0,Math.ceil((P-r)/f)),o=Math.min(p.outHeight,(p.inHeight+P-r)/f),i=r*w+n;for(let n=0;n<y;++n){const u=Math.max(0,Math.ceil((z-n)/m)),c=Math.min(p.outWidth,(p.inWidth+z-n)/m),l=n*O+i;for(let i=0;i<p.inChannels;++i){const d=i*_+l;for(let l=0;l<p.outChannels;++l){let g=0;for(let d=0;d<p.batchSize;++d){const p=d*E,b=d*S;for(let d=e;d<t;++d){const e=(s+d*h-D)*j+p,t=d*N+b;for(let s=a;s<o;++s){const a=(r+s*f-P)*R+e,o=s*C+t;for(let e=u;e<c;++e){const t=e*T+o;g+=A[(n+e*m-z)*$+a+i]*I[t+l]}}}}v[d+l]=g}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};const Fs={kernelName:s.G,backendName:"cpu",kernelFunc:function conv3DBackpropInputV2(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:o}=t,{pad:i,strides:u,inputShape:c}=r;assertNotComplex([a],"conv3dBackpropInputV2");const l=s.of.computeStrides(a.shape),d=s.of.computeStrides(o.shape),p=s.md.computeConv3DInfo(c,o.shape,u,1,i),h=new s.Uc(p.inShape,"float32"),f=h.values,[m,g,b,y]=h.strides,x=n.data.get(a.dataId).values,[v,k,w,O]=l,_=n.data.get(o.dataId).values,[I,S,N,C]=d,{batchSize:T,filterDepth:A,filterHeight:E,filterWidth:j,inChannels:R,inDepth:$,inHeight:D,inWidth:z,outChannels:P,outDepth:L,outHeight:M,outWidth:B,strideDepth:V,strideHeight:W,strideWidth:U}=p,G=A-1-p.padInfo.front,H=E-1-p.padInfo.top,K=j-1-p.padInfo.left;for(let s=0;s<T;++s)for(let e=0;e<R;++e)for(let t=0;t<$;++t){const n=t-G,r=Math.max(0,Math.ceil(n/V)),a=Math.min(L,(A+n)/V);for(let o=0;o<D;++o){const i=o-H,u=Math.max(0,Math.ceil(i/W)),c=Math.min(M,(E+i)/W);for(let l=0;l<z;++l){const d=l-K,p=Math.max(0,Math.ceil(d/U)),h=Math.min(B,(j+d)/U);let T=0;for(let t=r;t<a;++t){const r=t*V-n;for(let n=u;n<c;++n){const a=n*W-i;for(let o=p;o<h;++o){const i=v*s+k*t+w*n+O*o,u=I*(A-1-r)+S*(E-1-a)+N*(j-1-(o*U-d))+C*e;for(let e=0;e<P;++e){T+=x[i+e]*_[u+e]}}}}f[m*s+g*t+b*o+y*l+e]=T}}}return n.makeTensorInfo(h.shape,h.dtype,h.values)}},Ds=unaryKernelFunc(s.H,(e=>Math.cos(e))),zs={kernelName:s.H,backendName:"cpu",kernelFunc:Ds},Ps=unaryKernelFunc(s.I,(e=>Math.cosh(e))),Ls={kernelName:s.I,backendName:"cpu",kernelFunc:Ps};const Ms={kernelName:s.J,backendName:"cpu",kernelFunc:function cropAndResize(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:o,boxInd:i}=t,{cropSize:u,method:c,extrapolationValue:l}=r,[d,p,h,f]=a.shape,m=o.shape[0],[g,b]=u,y=Object(s.rd)([m,g,b,f],"float32"),x=n.data.get(o.dataId).values,v=n.data.get(i.dataId).values,k=n.data.get(a.dataId).values,w=s.of.computeStrides(a.shape),O=s.of.computeStrides(y.shape);for(let s=0;s<m;s++){const e=4*s,t=x[e],n=x[e+1],r=x[e+2],a=x[e+3],o=v[s];if(o>=d)continue;const i=g>1?(r-t)*(p-1)/(g-1):0,u=b>1?(a-n)*(h-1)/(b-1):0;for(let d=0;d<g;d++){const e=g>1?t*(p-1)+d*i:.5*(t+r)*(p-1);if(e<0||e>p-1)for(let t=0;t<b;t++)for(let e=0;e<f;e++){const n=e+t*O[2]+d*O[1]+s*O[0];y.values[n]=l}else if("bilinear"===c){const t=Math.floor(e),r=Math.ceil(e),i=e-t;for(let e=0;e<b;e++){const c=b>1?n*(h-1)+e*u:.5*(n+a)*(h-1);if(c<0||c>h-1){for(let t=0;t<f;t++){const n=t+e*O[2]+d*O[1]+s*O[0];y.values[n]=l}continue}const p=Math.floor(c),m=Math.ceil(c),g=c-p;for(let n=0;n<f;n++){let a=n+p*w[2]+t*w[1]+o*w[0];const u=k[a];a=n+m*w[2]+t*w[1]+o*w[0];const c=k[a];a=n+p*w[2]+r*w[1]+o*w[0];const l=k[a];a=n+m*w[2]+r*w[1]+o*w[0];const h=u+(c-u)*g,f=l+(k[a]-l)*g;a=n+e*O[2]+d*O[1]+s*O[0],y.values[a]=h+(f-h)*i}}}else for(let t=0;t<b;++t){const r=b>1?n*(h-1)+t*u:.5*(n+a)*(h-1);if(r<0||r>h-1){for(let e=0;e<f;e++){const n=e+t*O[2]+d*O[1]+s*O[0];y.values[n]=l}continue}const i=Math.round(r),c=Math.round(e);for(let e=0;e<f;e++){const n=e+i*w[2]+c*w[1]+o*w[0],r=e+t*O[2]+d*O[1]+s*O[0];y.values[r]=k[n]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const Bs={kernelName:s.K,backendName:"cpu",kernelFunc:function Cumsum_cumsum(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o,exclusive:i,reverse:u}=r;assertNotComplex(a,"cumsum");const c=s.md.getAxesPermutation([o],a.shape.length);let l=a;null!=c&&(l=Transpose_transpose({inputs:{x:a},backend:n,attrs:{perm:c}}));const d=s.md.getInnerMostAxes(1,a.shape.length)[0];if(d!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${d}`);const p=Object(s.nf)(l.dtype,"int32"),h=s.of.makeZerosTypedArray(s.of.sizeFromShape(l.shape),p),f=n.data.get(l.dataId).values,m=l.shape[l.shape.length-1],g=u?(e,t)=>e+m-t-1:(e,t)=>e+t;for(let s=0;s<f.length;s+=m)for(let e=0;e<m;e++){const t=g(s,e);if(0===e)h[t]=i?0:f[t];else{const n=g(s,e-1);h[t]=i?f[n]+h[n]:f[t]+h[n]}}const b=n.makeTensorInfo(l.shape,p,h);if(null!=c){const e=Transpose_transpose({inputs:{x:b},backend:n,attrs:{perm:s.md.getUndoAxesPermutation(c)}});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(l),e}return b}};const Vs={kernelName:s.M,backendName:"cpu",kernelFunc:function denseBincount(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:o,binaryOutput:i}=r;if(1===a.shape.length){const e=bincountImpl(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,e)}if(2===a.shape.length){const e=bincountReduceImpl(n.bufferSync(a),n.bufferSync(s),o,i);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};const Ws={kernelName:s.N,backendName:"cpu",kernelFunc:function depthToSpace(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:o,dataFormat:i}=r;s.of.assert("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`)),s.of.assert(o>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${o}`));const u=a.shape[0],c=a.shape[1],l=a.shape[2],d=a.shape[3],p=c*o,h=l*o,f=d/(o*o),m=n.data.get(a.dataId).values,g=new Float32Array(u*p*h*f);let b=0;for(let s=0;s<u;++s)for(let e=0;e<p;++e){const t=Math.floor(e/o),n=e%o;for(let e=0;e<h;++e){const r=Math.floor(e/o),a=(n*o+e%o)*f;for(let e=0;e<f;++e){const n=e+a+d*(r+l*(t+c*s));g[b++]=m[n]}}}return n.makeTensorInfo([u,p,h,f],a.dtype,g)}};function depthwiseConv2dNative(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:o}=t,{strides:i,pad:u,dilations:c,dimRoundingMode:l}=r;assertNotComplex([a,o],"depthwiseConv2DNative");const d=s.of.computeStrides(a.shape),p=s.of.computeStrides(o.shape);let h=c;null==h&&(h=[1,1]),s.of.assert(s.md.eitherStridesOrDilationsAreOne(i,h),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`));const f=s.md.computeConv2DInfo(a.shape,o.shape,i,h,u,l,!0),{filterHeight:m,filterWidth:g,dilationHeight:b,dilationWidth:y,padInfo:x}=f,v=x.left,k=x.top,w=f.outChannels/f.inChannels,O=new s.Uc(f.outShape,a.dtype),_=n.data.get(a.dataId).values,I=n.data.get(o.dataId).values,S=O.values;for(let s=0;s<f.batchSize;++s){const e=s*d[0],t=s*O.strides[0];for(let n=0;n<f.outHeight;++n){const r=t+n*O.strides[1],a=n*f.strideHeight-v;for(let t=0;t<m;++t){const n=a+t*b;if(n<0||n>=f.inHeight)continue;const s=t*p[0],o=e+n*d[1];for(let e=0;e<f.outWidth;++e){const t=r+e*O.strides[2],n=e*f.strideWidth-k;for(let e=0;e<g;++e){const r=n+e*y;if(r<0||r>=f.inWidth)continue;const a=s+e*p[1],i=o+r*f.inChannels;let u=t,c=a;for(let e=0;e<f.inChannels;++e){const t=_[i+e];for(let e=0;e<w;++e)S[u+e]+=t*I[c+e];u+=w,c+=w}}}}}}return n.makeTensorInfo(O.shape,O.dtype,O.values)}const Us={kernelName:s.O,backendName:"cpu",kernelFunc:depthwiseConv2dNative};const Gs={kernelName:s.P,backendName:"cpu",kernelFunc:function depthwiseConv2dNativeBackpropFilter(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:o}=t,{strides:i,dilations:u,pad:c,dimRoundingMode:l,filterShape:d}=r;assertNotComplex([a,o],"depthwiseConv2dNativeBackpropFilter");const p=s.md.computeConv2DInfo(a.shape,d,i,u,c,l,!0),{strideHeight:h,strideWidth:f,filterHeight:m,filterWidth:g}=p,b=new s.Uc(p.filterShape,"float32"),y=p.padInfo.left,x=p.padInfo.top,v=p.outChannels/p.inChannels,k=n.data.get(a.dataId).values,w=new s.Uc(a.shape,a.dtype,k),O=n.data.get(o.dataId).values,_=new s.Uc(o.shape,o.dtype,O);for(let s=0;s<m;++s){const e=Math.max(0,Math.ceil((x-s)/h)),t=Math.min(p.outHeight,(p.inHeight+x-s)/h);for(let n=0;n<g;++n){const r=Math.max(0,Math.ceil((y-n)/f)),a=Math.min(p.outWidth,(p.inWidth+y-n)/f);for(let o=0;o<p.outChannels;++o){const i=Math.trunc(o/v),u=o%v;let c=0;for(let l=0;l<p.batchSize;++l)for(let u=e;u<t;++u){const e=s+u*h-x;for(let t=r;t<a;++t){const r=n+t*f-y;c+=w.get(l,e,r,i)*_.get(l,u,t,o)}}b.set(c,s,n,i,u)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const Hs={kernelName:s.Q,backendName:"cpu",kernelFunc:function depthwiseConv2dNativeBackpropInput(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:o}=t,{strides:i,dilations:u,pad:c,dimRoundingMode:l,inputShape:d}=r;assertNotComplex([a,o],"depthwiseConv2DNativeBackpropInput");const p=s.of.computeStrides(a.shape),h=s.of.computeStrides(o.shape),f=s.md.computeConv2DInfo(d,o.shape,i,u,c,l,!0),m=new s.Uc(f.inShape,"float32"),g=m.values,[b,y,x]=m.strides,v=n.data.get(a.dataId).values,[k,w,O]=p,_=n.data.get(o.dataId).values,[I,S,N]=h,{batchSize:C,filterHeight:T,filterWidth:A,inChannels:E,inHeight:j,inWidth:R,outChannels:$,outHeight:D,outWidth:z,strideHeight:P,strideWidth:L}=f,M=T-1-f.padInfo.top,B=A-1-f.padInfo.left,V=$/E;for(let s=0;s<C;++s)for(let e=0;e<E;++e)for(let t=0;t<j;++t){const n=t-M,r=Math.max(0,Math.ceil(n/P)),a=Math.min(D,(T+n)/P);for(let o=0;o<R;++o){const i=o-B,u=Math.max(0,Math.ceil(i/L)),c=Math.min(z,(A+i)/L);let l=0;for(let t=r;t<a;++t){const r=t*P-n;for(let n=u;n<c;++n){const a=k*s+w*t+O*n,o=I*(T-1-r)+S*(A-1-(n*L-i))+N*e;for(let t=0;t<V;++t){l+=v[a+(e*V+t)]*_[o+t]}}}g[b*s+y*t+x*o+e]=l}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const Ks={kernelName:s.R,backendName:"cpu",kernelFunc:function diag(e){const{inputs:t,backend:n}=e,{x:r}=t,a=s.of.sizeFromShape(r.shape),o=n.data.get(r.dataId).values,i=Object(s.rd)([a,a],r.dtype),u=i.values;for(let s=0;s<o.length;s++)u[s*a+s]=o[s];const c=[...r.shape,...r.shape];return n.makeTensorInfo(c,i.dtype,i.values)}},qs={kernelName:s.S,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a}=e,{strides:o,pad:i,dilations:u}=n,c=t,l=c.data.get(r.dataId).values,d=r.shape.length,p=c.data.get(a.dataId).values,h=a.shape.length,{batchSize:f,inHeight:m,inWidth:g,inChannels:b,outHeight:y,outWidth:x,padInfo:v,strideHeight:k,strideWidth:w,filterHeight:O,filterWidth:_,dilationHeight:I,dilationWidth:S,outShape:N}=s.md.computeDilation2DInfo(r.shape,a.shape,o,i,"NHWC",u),C=s.of.sizeFromShape(N),T=N.length,A=s.of.getArrayFromDType(r.dtype,C);for(let E=0;E<f;++E)for(let e=0;e<y;++e){const t=e*k-v.top;for(let n=0;n<x;++n){const o=n*w-v.left;for(let i=0;i<b;++i){let u=Number.MIN_SAFE_INTEGER;for(let e=0;e<O;++e){const n=t+e*I;if(n>=0&&n<m)for(let t=0;t<_;++t){const c=o+t*S;if(c>=0&&c<g){const o=s.of.locToIndex([E,n,c,i],d,s.of.computeStrides(r.shape)),f=s.of.locToIndex([e,t,i],h,s.of.computeStrides(a.shape)),m=l[o]+p[f];m>u&&(u=m)}}}A[s.of.locToIndex([E,e,n,i],T,s.of.computeStrides(N))]=u}}}return{dataId:c.write(s.of.toTypedArray(A,r.dtype),N,r.dtype),shape:N,dtype:r.dtype}}},Xs={kernelName:s.T,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:o}=e,{strides:i,pad:u,dilations:c}=n,l=t,d=s.of.toNestedArray(r.shape,l.data.get(r.dataId).values),p=s.of.toNestedArray(a.shape,l.data.get(a.dataId).values),{batchSize:h,inHeight:f,inWidth:m,inChannels:g,outHeight:b,outWidth:y,padInfo:x,strideHeight:v,strideWidth:k,filterHeight:w,filterWidth:O,dilationHeight:_,dilationWidth:I,outShape:S}=s.md.computeDilation2DInfo(r.shape,a.shape,i,u,"NHWC",c);s.of.assert(o.rank===S.length,(()=>`Error in ${s.T}, dy must have the same rank as output ${S.length}, but got ${o.rank}`));const N=s.of.toNestedArray(S,l.data.get(o.dataId).values),C=s.of.makeZerosNestedTypedArray(a.shape,a.dtype);for(let s=0;s<h;++s)for(let e=0;e<b;++e){const t=e*v-x.top;for(let n=0;n<y;++n){const r=n*k-x.left;for(let a=0;a<g;++a){let o=Number.MIN_SAFE_INTEGER,i=0,u=0;for(let e=0;e<w;++e){const n=t+e*_;if(n>=0&&n<f)for(let t=0;t<O;++t){const c=r+t*I;if(c>=0&&c<m){const r=d[s][n][c][a]+p[e][t][a];r>o&&(o=r,i=e,u=t)}}}C[i][u][a]+=N[s][e][n][a]}}}return{dataId:l.write(s.of.toTypedArray(C,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},Js={kernelName:s.U,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:o}=e,{strides:i,pad:u,dilations:c}=n,l=t,d=s.of.toNestedArray(r.shape,l.data.get(r.dataId).values),p=s.of.toNestedArray(a.shape,l.data.get(a.dataId).values),{batchSize:h,inHeight:f,inWidth:m,inChannels:g,outHeight:b,outWidth:y,padInfo:x,strideHeight:v,strideWidth:k,filterHeight:w,filterWidth:O,dilationHeight:_,dilationWidth:I,outShape:S}=s.md.computeDilation2DInfo(r.shape,a.shape,i,u,"NHWC",c);s.of.assert(o.rank===S.length,(()=>`Error in ${s.U}, dy must have the same rank as output ${S.length}, but got ${o.rank}`));const N=s.of.toNestedArray(S,l.data.get(o.dataId).values),C=s.of.makeZerosNestedTypedArray(r.shape,r.dtype);for(let s=0;s<h;++s)for(let e=0;e<b;++e){const t=e*v-x.top;for(let n=0;n<y;++n){const r=n*k-x.left;for(let a=0;a<g;++a){let o=Number.MIN_SAFE_INTEGER,i=t<0?0:t,u=r<0?0:r;for(let e=0;e<w;++e){const n=t+e*_;if(n>=0&&n<f)for(let t=0;t<O;++t){const c=r+t*I;if(c>=0&&c<m){const r=d[s][n][c][a]+p[e][t][a];r>o&&(o=r,i=n,u=c)}}}C[s][i][u][a]+=N[s][e][n][a]}}}return{dataId:l.write(s.of.toTypedArray(C,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};const Ys={kernelName:s.W,backendName:"cpu",kernelFunc:function eluGrad(e){const{inputs:t,backend:n}=e,{dy:r,y:a}=t;assertNotComplex([r,a],"eluGrad");const o=new Float32Array(s.of.sizeFromShape(a.shape)),i=n.data.get(a.dataId).values,u=n.data.get(r.dataId).values;for(let s=0;s<i.length;++s){const e=i[s];o[s]=e>=1?u[s]:u[s]*(e+1)}return n.makeTensorInfo(a.shape,"float32",o)}},Zs=createSimpleBinaryKernelImpl(((e,t)=>e===t?1:0)),Qs=binaryKernelFunc(s.X,Zs,null,"bool"),eo={kernelName:s.X,backendName:"cpu",kernelFunc:Qs},to=s.md.ERF_P,no=s.md.ERF_A1,ro=s.md.ERF_A2,ao=s.md.ERF_A3,so=s.md.ERF_A4,oo=s.md.ERF_A5,io=unaryKernelFunc(s.Y,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+to*n);return t*(1-((((oo*r+so)*r+ao)*r+ro)*r+no)*r*Math.exp(-n*n))})),uo={kernelName:s.Y,backendName:"cpu",kernelFunc:io},co=createSimpleUnaryImpl((e=>Math.exp(e))),lo=unaryKernelFuncFromImpl(s.Z,co),po={kernelName:s.Z,backendName:"cpu",kernelFunc:lo};function ExpandDims_expandDims(e){const{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:o}=r,i=a.shape.length,u=a.shape.slice();let c=o;return o<0&&(s.of.assert(-(i+1)<=o,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),c=i+o+1),u.splice(c,0,1),Reshape_reshape({inputs:{x:a},backend:n,attrs:{shape:u}})}const ho={kernelName:s.ab,backendName:"cpu",kernelFunc:ExpandDims_expandDims},fo=createSimpleUnaryImpl((e=>Math.expm1(e))),mo=unaryKernelFuncFromImpl(s.bb,fo),go={kernelName:s.bb,backendName:"cpu",kernelFunc:mo},bo=createSimpleBinaryKernelImpl(((e,t)=>e*t)),yo=createComplexBinaryKernelImpl(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),xo=binaryKernelFunc(s.Ub,bo,yo),vo={kernelName:s.Ub,backendName:"cpu",kernelFunc:xo},ko=createSimpleBinaryKernelImpl(((e,t)=>e/t)),wo=binaryKernelFunc(s.kc,ko),Oo={kernelName:s.kc,backendName:"cpu",kernelFunc:wo},_o=createSimpleBinaryKernelImpl(((e,t)=>e-t)),Io=createComplexBinaryKernelImpl(((e,t,n,r)=>({real:e-n,imag:t-r}))),So=binaryKernelFunc(s.Pc,_o,Io),No={kernelName:s.Pc,backendName:"cpu",kernelFunc:So};function fftBatch(e,t,n){const r=e.shape,a=r[0],o=r[1],i=n.data.get(e.dataId),u=i.complexTensorInfos.real,c=i.complexTensorInfos.imag,l=[a,o],d=s.of.sizeFromShape(l),p=s.of.getTypedArrayFromDType("float32",d),h=s.of.getTypedArrayFromDType("float32",d);for(let b=0;b<a;b++){const e=Slice_slice({inputs:{x:u},backend:n,attrs:{begin:[b,0],size:[1,o]}}),r=Slice_slice({inputs:{x:c},backend:n,attrs:{begin:[b,0],size:[1,o]}}),a=Complex_complex({inputs:{real:e,imag:r},backend:n}),{real:i,imag:l}=fftImpl(a,t,n),d=s.md.mergeRealAndImagArrays(i,l);for(let t=0;t<o;t++){const e=s.md.getComplexWithIndex(d,t);p[b*o+t]=e.real,h[b*o+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a)}const f=n.makeTensorInfo(l,"float32",p),m=n.makeTensorInfo(l,"float32",h),g=Complex_complex({inputs:{real:f,imag:m},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}function fftImpl(e,t,n){const r=s.of.sizeFromShape(e.shape),a=n.data.get(e.dataId),o=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(function isExponentOf2(e){return 0==(e&e-1)}(r)){const a=fftRadix2(o,i,r,t,n),u=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(u,"float32",a.real),t=n.makeTensorInfo(u,"float32",a.imag),o=n.makeTensorInfo([],"float32",s.of.createScalarValue(r,"float32")),i=Identity_identity({inputs:{x:o},backend:n}),c=Oo.kernelFunc({inputs:{a:e,b:o},backend:n}),l=Oo.kernelFunc({inputs:{a:t,b:i},backend:n}),d=n.data.get(c.dataId).values,p=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),{real:d,imag:p}}return a}{const e=function fourierTransformByMatmul(e,t,n){const r=new Float32Array(2*t);for(let a=0;a<t;a++){let o=0,i=0;for(let r=0;r<t;r++){const u=s.md.exponent(a*r,t,n),c=s.md.getComplexWithIndex(e,r);o+=c.real*u.real-c.imag*u.imag,i+=c.real*u.imag+c.imag*u.real}n&&(o/=t,i/=t),s.md.assignToTypedArray(r,o,i,a)}return r}(s.md.mergeRealAndImagArrays(o,i),r,t);return s.md.splitRealAndImagArrays(e)}}function fftRadix2(e,t,n,r,a){if(1===n)return{real:e,imag:t};const o=s.md.mergeRealAndImagArrays(e,t),i=n/2,u=s.md.complexWithEvenIndex(o),c=u.real,l=u.imag,d=[c.length],p=a.makeTensorInfo(d,"float32",c),h=a.makeTensorInfo(d,"float32",l),f=Complex_complex({inputs:{real:p,imag:h},backend:a}),m=s.md.complexWithOddIndex(o),g=m.real,b=m.imag,y=[g.length],x=a.makeTensorInfo(y,"float32",g),v=a.makeTensorInfo(y,"float32",b),k=Complex_complex({inputs:{real:x,imag:v},backend:a}),w=fftRadix2(c,l,i,r,a),O=w.real,_=w.imag,I=[O.length],S=a.makeTensorInfo(I,"float32",O),N=a.makeTensorInfo(I,"float32",_),C=Complex_complex({inputs:{real:S,imag:N},backend:a}),T=fftRadix2(g,b,i,r,a),A=T.real,E=T.imag,j=[A.length],R=a.makeTensorInfo(j,"float32",A),$=a.makeTensorInfo(j,"float32",E),D=Complex_complex({inputs:{real:R,imag:$},backend:a}),z=s.md.exponents(n,r),P=[z.real.length],L=a.makeTensorInfo(P,"float32",z.real),M=a.makeTensorInfo(P,"float32",z.imag),B=Complex_complex({inputs:{real:L,imag:M},backend:a}),V=xo({inputs:{a:B,b:D},backend:a}),W=Ba({inputs:{a:C,b:V},backend:a}),U=So({inputs:{a:C,b:V},backend:a}),G=Real_real({inputs:{input:W},backend:a}),H=Real_real({inputs:{input:U},backend:a}),K=Imag_imag({inputs:{input:W},backend:a}),q=Imag_imag({inputs:{input:U},backend:a}),X=Concat_concat({inputs:[G,H],backend:a,attrs:{axis:0}}),J=Concat_concat({inputs:[K,q],backend:a,attrs:{axis:0}}),Y=a.data.get(X.dataId).values,Z=a.data.get(J.dataId).values;return a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(f),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(v),a.disposeIntermediateTensorInfo(k),a.disposeIntermediateTensorInfo(S),a.disposeIntermediateTensorInfo(N),a.disposeIntermediateTensorInfo(C),a.disposeIntermediateTensorInfo(R),a.disposeIntermediateTensorInfo($),a.disposeIntermediateTensorInfo(D),a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(M),a.disposeIntermediateTensorInfo(B),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(K),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(X),a.disposeIntermediateTensorInfo(J),{real:Y,imag:Z}}const Co={kernelName:s.cb,backendName:"cpu",kernelFunc:function FFT_fft(e){const{inputs:t,backend:n}=e,{input:r}=t,a=s.of.sizeFromShape(r.shape),o=r.shape[r.shape.length-1],i=Reshape_reshape({inputs:{x:r},backend:n,attrs:{shape:[a/o,o]}}),u=fftBatch(i,!1,n),c=Reshape_reshape({inputs:{x:u},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),c}};function Fill_fill(e){const{backend:t,attrs:n}=e,{shape:r,value:a,dtype:o}=n,i=o||s.of.inferDtype(a),u=s.of.getArrayFromDType(i,s.of.sizeFromShape(r));return function fillValues(e,t,n){e.fill(t)}(u,a),t.makeTensorInfo(r,i,u)}const To={kernelName:s.db,backendName:"cpu",kernelFunc:Fill_fill};const Ao={kernelName:s.eb,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,a=n,o=s.of.getTypedArrayFromDType(r.dtype,s.of.sizeFromShape(r.shape)),[i,u,c,l]=r.shape,d=a.data.get(r.dataId).values;for(let s=0;s<i;s++){const e=s*c*u*l;for(let t=0;t<u;t++){const n=t*(c*l);for(let r=0;r<c;r++){const a=r*l;for(let s=0;s<l;s++){const u=[i,t,r,s][2],p=Math.round(c-u),h=e+n+a+s;let f=d[h];if(p>=0&&p<c){f=d[e+n+p*l+s]}o[h]=f}}}}return{dataId:a.write(o,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Eo=createSimpleUnaryImpl((e=>Math.floor(e))),jo=unaryKernelFuncFromImpl(s.fb,Eo),Ro={kernelName:s.fb,backendName:"cpu",kernelFunc:jo},$o=createSimpleBinaryKernelImpl(((e,t)=>Math.floor(e/t))),Fo=binaryKernelFunc(s.gb,$o,null,"int32"),Do={kernelName:s.gb,backendName:"cpu",kernelFunc:Fo};const zo={kernelName:s.jb,backendName:"cpu",kernelFunc:function fusedConv2D(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:o,preluActivationWeights:i}=t,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=r;let m=conv2D({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:p}});if(o){const e=m;m=Ba({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(e)}if(h){const e=m;m=applyActivation(n,m,h,i,f),n.disposeIntermediateTensorInfo(e)}return m}};const Po={kernelName:s.kb,backendName:"cpu",kernelFunc:function fusedDepthwiseConv2D(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:o,preluActivationWeights:i}=t,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=r;let m=depthwiseConv2dNative({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:p}});if(o){const e=m;m=Ba({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(e)}if(h){const e=m;m=applyActivation(n,m,h,i,f),n.disposeIntermediateTensorInfo(e)}return m}};const Lo={kernelName:s.lb,backendName:"cpu",kernelFunc:function gatherNd(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,o=s.of.sizeFromShape(r.shape),i=a.shape,u=i[i.length-1],[c,l,d,p]=s.md.prepareAndValidate(r,a);if(0===l)return n.makeTensorInfo(c,r.dtype,[]);const h=Object(s.rd)([l,d],r.dtype),f=n.data.get(a.dataId).values,m=n.data.get(r.dataId).values;for(let s=0;s<l;s++){const e=[];let t=0;for(let n=0;n<u;n++){const r=f[s*u+n];t+=r*p[n],e.push(r)}if(t<0||t>=o/d)throw new Error(`Invalid indices: ${e} does not index into ${r.shape}`);for(let n=0;n<d;n++)h.values[s*d+n]=m[t*d+n]}return n.makeTensorInfo(c,h.dtype,h.values)}};function gatherV2Impl(e,t,n){const r=Object(s.rd)(n,e.dtype);for(let a=0;a<r.size;++a){const n=r.indexToLoc(a).slice(),s=n[0],o=n[2],i=t.locToIndex([s,o]);n[2]=t.values[i];const u=e.locToIndex(n);r.values[a]=e.values[u]}return r}const Mo={kernelName:s.mb,backendName:"cpu",kernelFunc:function gatherV2(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:o}=t,{axis:i,batchDims:u}=r;assertNotComplex([a,o],"gatherV2");let c=u;null==u&&(c=0);const l=s.of.sizeFromShape(o.shape),d=s.of.parseAxisParam(i,a.shape)[0],p=s.md.segment_util.collectGatherOpShapeInfo(a,o,d,c),h=Reshape_reshape({inputs:{x:a},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),f=Reshape_reshape({inputs:{x:o},backend:n,attrs:{shape:[p.batchSize,l/p.batchSize]}}),m=[p.batchSize,p.outerSize,l/p.batchSize,p.sliceSize],g=n.bufferSync(f),b=gatherV2Impl(n.bufferSync(h),g,m);return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.makeTensorInfo(p.outputShape,b.dtype,b.values)}},Bo=createSimpleBinaryKernelImpl(((e,t)=>e>t?1:0)),Vo=binaryKernelFunc(s.nb,Bo,null,"bool"),Wo={kernelName:s.nb,backendName:"cpu",kernelFunc:Vo},Uo=createSimpleBinaryKernelImpl(((e,t)=>e>=t?1:0)),Go=binaryKernelFunc(s.ob,Uo,null,"bool"),Ho={kernelName:s.ob,backendName:"cpu",kernelFunc:Go};const Ko={kernelName:s.pb,backendName:"cpu",kernelFunc:function IFFT_ifft(e){const{inputs:t,backend:n}=e,{input:r}=t,a=s.of.sizeFromShape(r.shape),o=r.shape[r.shape.length-1],i=Reshape_reshape({inputs:{x:r},backend:n,attrs:{shape:[a/o,o]}}),u=fftBatch(i,!0,n),c=Reshape_reshape({inputs:{x:u},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),c}},qo=unaryKernelFunc(s.sb,(e=>Number.isFinite(e)?1:0),"bool"),Xo={kernelName:s.sb,backendName:"cpu",kernelFunc:qo},Jo=unaryKernelFunc(s.tb,(e=>Math.abs(e)===1/0?1:0),"bool"),Yo={kernelName:s.tb,backendName:"cpu",kernelFunc:Jo},Zo=unaryKernelFunc(s.ub,(e=>Number.isNaN(e)?1:0),"bool"),Qo={kernelName:s.ub,backendName:"cpu",kernelFunc:Zo},ei=createSimpleBinaryKernelImpl(((e,t)=>e<t?1:0)),ti=binaryKernelFunc(s.zb,ei,null,"bool"),ni={kernelName:s.zb,backendName:"cpu",kernelFunc:ti},ri=createSimpleBinaryKernelImpl(((e,t)=>e<=t?1:0)),ai=binaryKernelFunc(s.Ab,ri,null,"bool"),si={kernelName:s.Ab,backendName:"cpu",kernelFunc:ai};function linSpaceImpl(e,t,n){const r=(t-e)/(n-1),a=s.of.makeZerosTypedArray(n,"float32");a[0]=e;for(let s=1;s<a.length;s++)a[s]=a[s-1]+r;return a}const oi={kernelName:s.Bb,backendName:"cpu",kernelFunc:function linSpace(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,o=linSpaceImpl(r,a,s);return t.makeTensorInfo([o.length],"float32",o)}},ii=createSimpleUnaryImpl((e=>Math.log(e))),ui=unaryKernelFuncFromImpl(s.Cb,ii),ci={kernelName:s.Cb,backendName:"cpu",kernelFunc:ui},li=unaryKernelFunc(s.Db,(e=>Math.log1p(e))),di={kernelName:s.Db,backendName:"cpu",kernelFunc:li},pi=createSimpleBinaryKernelImpl(((e,t)=>e&&t)),hi=binaryKernelFunc(s.Eb,pi,null,"bool"),fi={kernelName:s.Eb,backendName:"cpu",kernelFunc:hi},mi=unaryKernelFunc(s.Fb,(e=>e?0:1),"bool"),gi={kernelName:s.Fb,backendName:"cpu",kernelFunc:mi},bi=createSimpleBinaryKernelImpl(((e,t)=>e||t)),yi=binaryKernelFunc(s.Gb,bi,null,"bool"),xi={kernelName:s.Gb,backendName:"cpu",kernelFunc:yi};const vi={kernelName:s.wb,backendName:"cpu",kernelFunc:function lRN(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:o,bias:i,alpha:u,beta:c}=r;assertNotComplex(a,"LRN");const l=a.shape[3],d=l-1,p=n.data.get(a.dataId).values,h=s.of.sizeFromShape(a.shape),f=new Float32Array(h);function sumAcrossChannels(e){const t=e%l;let n=e-t+Math.max(0,t-o);const r=e-t+Math.min(t+o,d);let a=0;for(;n<=r;n++){const e=p[n];a+=e*e}return a}for(let s=0;s<h;s++){const e=sumAcrossChannels(s),t=p[s]*Math.pow(i+u*e,-c);f[s]=t}return n.makeTensorInfo(a.shape,a.dtype,f)}};const ki={kernelName:s.xb,backendName:"cpu",kernelFunc:function lRNGrad(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,y:o,dy:i}=t,{depthRadius:u,bias:c,alpha:l,beta:d}=r;assertNotComplex(i,"LRNGrad");const p=s.of.sizeFromShape(i.shape),h=i.shape[3],f=n.data.get(i.dataId).values,m=n.data.get(a.dataId).values,g=n.data.get(o.dataId).values,b=new Float32Array(p),y=p;for(let s=0;s<y;s++){const e=s%h,t=s-e+Math.max(0,e-u),n=s-e+Math.min(h,e+u+1);let r=0;for(let a=t;a<n;a++)r+=Math.pow(m[a],2);r=l*r+c;for(let a=t;a<n;a++){let e=-2*l*d*m[a]*g[s]/r;s===a&&(e+=Math.pow(r,-d)),e*=f[s],b[a]+=e}}return n.makeTensorInfo(i.shape,a.dtype,b)}};function maxImpl(e,t,n,r){const a=s.of.getTypedArrayFromDType(r,s.of.sizeFromShape(n));for(let s=0;s<a.length;++s){const n=s*t;let r=e[n];for(let a=0;a<t;++a){const t=e[n+a];t>r&&(r=t)}a[s]=r}return a}function Max_max(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:o,keepDims:i}=r,u=n;let c=a.shape;const l=c.length,d=s.of.parseAxisParam(o,c);let p=d;const h=s.md.getAxesPermutation(p,l);let f=u.data.get(a.dataId).values;if(null!=h){const e=new Array(l);for(let t=0;t<e.length;t++)e[t]=c[h[t]];f=transposeImpl(f,c,a.dtype,h,e),p=s.md.getInnerMostAxes(p.length,l),c=e}assertNotComplex(a,"max"),s.md.assertAxesAreInnerMostDims("max",p,l);const[m,g]=s.md.computeOutAndReduceShapes(c,p),b=maxImpl(f,s.of.sizeFromShape(g),m,a.dtype),y=u.write(b,m,a.dtype);let x=m;if(i){x=s.md.expandShapeToKeepDim(m,d)}return{dataId:y,shape:x,dtype:a.dtype}}const wi={kernelName:s.Hb,backendName:"cpu",kernelFunc:Max_max},Oi=createSimpleBinaryKernelImpl(((e,t)=>Math.max(e,t))),_i=binaryKernelFunc(s.Nb,Oi),Ii={kernelName:s.Nb,backendName:"cpu",kernelFunc:_i};const Si={kernelName:s.Ib,backendName:"cpu",kernelFunc:function maxPool(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;assertNotComplex(a,"maxPool");const{filterSize:o,strides:i,pad:u,dimRoundingMode:c}=r;s.of.assert(s.md.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=s.md.computePool2DInfo(a.shape,o,i,1,u,c);let d;if(1===l.filterWidth&&1===l.filterHeight&&s.of.arraysEqual(l.inShape,l.outShape))d=Identity_identity({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=s.of.computeStrides(a.shape),r=pool_utils_pool(e,a.shape,a.dtype,t,l,"max");d=n.makeTensorInfo(l.outShape,a.dtype,r.values)}return d}};const Ni={kernelName:s.Jb,backendName:"cpu",kernelFunc:function maxPool3D(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:o,strides:i,pad:u,dimRoundingMode:c,dataFormat:l}=r;assertNotComplex(a,"maxPool3d");const d=s.md.computePool3DInfo(a.shape,o,i,1,u,c,l),p=pool_utils_pool3d(n.data.get(a.dataId).values,a.shape,a.dtype,s.of.computeStrides(a.shape),d,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}};const Ci={kernelName:s.Kb,backendName:"cpu",kernelFunc:function maxPool3DGrad(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:o}=t,{filterSize:i,strides:u,pad:c,dimRoundingMode:l}=r;assertNotComplex([a,o],"maxPool3DGrad");const d=s.md.computePool3DInfo(o.shape,i,u,1,c,l),p=function pool_utils_maxPool3dPositions(e,t){const n=Object(s.rd)(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,o=t.strideWidth,i=t.dilationDepth,u=t.dilationHeight,c=t.dilationWidth,l=t.effectiveFilterDepth,d=t.effectiveFilterHeight,p=t.effectiveFilterWidth,h=t.padInfo.front,f=t.padInfo.top,m=t.padInfo.left;for(let s=0;s<t.batchSize;++s)for(let g=0;g<t.inChannels;++g)for(let b=0;b<t.outDepth;++b){const y=b*r-h;let x=y;for(;x<0;)x+=i;const v=Math.min(t.inDepth,l+y);for(let r=0;r<t.outHeight;++r){const l=r*a-f;let h=l;for(;h<0;)h+=u;const k=Math.min(t.inHeight,d+l);for(let a=0;a<t.outWidth;++a){const f=a*o-m;let w=f;for(;w<0;)w+=c;const O=Math.min(t.inWidth,p+f);let _=Number.NEGATIVE_INFINITY,I=-1;for(let t=x;t<v;t+=i){const n=t-y;for(let r=h;r<k;r+=u){const a=r-l;for(let o=w;o<O;o+=c){const i=o-f,u=e.get(s,t,r,o,g);u>=_&&(_=u,I=n*d*p+a*d+i)}}}n.set(I,s,b,r,a,g)}}}return n}(n.bufferSync(o),d),h=d.strideDepth,f=d.strideHeight,m=d.strideWidth,g=d.dilationDepth,b=d.dilationHeight,y=d.dilationWidth,x=d.effectiveFilterDepth,v=d.effectiveFilterHeight,k=d.effectiveFilterWidth,w=x-1-d.padInfo.front,O=k-1-d.padInfo.left,_=v-1-d.padInfo.top,I=Object(s.rd)(o.shape,"float32"),S=n.bufferSync(a);for(let s=0;s<d.batchSize;++s)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inDepth;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){const a=t-w,o=n-_,i=r-O;let u=0;for(let t=0;t<x;t+=g){const n=(a+t)/h;if(!(n<0||n>=d.outDepth||Math.floor(n)!==n))for(let r=0;r<v;r+=b){const a=(o+r)/f;if(!(a<0||a>=d.outHeight||Math.floor(a)!==a))for(let o=0;o<k;o+=y){const c=(i+o)/m;if(c<0||c>=d.outWidth||Math.floor(c)!==c)continue;const l=x*v*k-1-p.get(s,n,a,c,e)===t*v*k+r*k+o?1:0;if(0===l)continue;u+=S.get(s,n,a,c,e)*l}}}I.set(u,s,t,n,r,e)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};const Ti={kernelName:s.Lb,backendName:"cpu",kernelFunc:function MaxPoolGrad_maxPoolGrad(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:o,output:i}=t,u=o;assertNotComplex([o,i],"maxPoolGrad");const{filterSize:c,strides:l,pad:d,dimRoundingMode:p}=r,h=s.md.computePool2DInfo(u.shape,c,l,1,d,p),f=n.data.get(u.dataId).values,m=Object(s.rd)(h.outShape,u.dtype,pool_utils_maxPoolPositions(f,u.shape,u.dtype,h).values),g=h.strideHeight,b=h.strideWidth,y=h.dilationHeight,x=h.dilationWidth,v=h.effectiveFilterHeight,k=h.effectiveFilterWidth,w=k-1-h.padInfo.left,O=v-1-h.padInfo.top,_=Object(s.rd)(u.shape,"float32"),I=n.data.get(a.dataId).values,S=Object(s.rd)(a.shape,"float32",I);for(let s=0;s<h.batchSize;++s)for(let e=0;e<h.inChannels;++e)for(let t=0;t<h.inHeight;++t)for(let n=0;n<h.inWidth;++n){const r=t-O,a=n-w;let o=0;for(let t=0;t<v;t+=y){const n=(r+t)/g;if(!(n<0||n>=h.outHeight||Math.floor(n)!==n))for(let r=0;r<k;r+=x){const i=(a+r)/b;if(i<0||i>=h.outWidth||Math.floor(i)!==i)continue;const u=v*k-1-m.get(s,n,i,e)===t*k+r?1:0;if(0===u)continue;o+=S.get(s,n,i,e)*u}}_.set(o,s,t,n,e)}return n.makeTensorInfo(_.shape,_.dtype,_.values)}};const Ai={kernelName:s.Mb,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:o,pad:i,includeBatchInIndex:u}=t,c=n;assertNotComplex(r,"MaxPoolWithArgmax");const l=c.data.get(r.dataId).values,d=s.md.computePool2DInfo(r.shape,a,o,[1,1],i),[p,h]=function maxPoolWithArgmaxImpl(e,t,n,r,a){const o=pool_utils_pool(e,0,n,s.of.computeStrides(t),a,"max"),i=pool_utils_maxPoolPositions(e,t,n,a,!0,r);return[o.values,i.values]}(l,r.shape,r.dtype,u,d),f=c.write(p,d.outShape,r.dtype),m=c.write(h,d.outShape,r.dtype);return[{dataId:f,shape:d.outShape,dtype:r.dtype},{dataId:m,shape:d.outShape,dtype:"int32"}]}};function Sum_sum(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o,keepDims:i}=r;let u;assertNotComplex(a,"sum"),u="bool"===a.dtype?Cast_cast({inputs:{x:a},backend:n,attrs:{dtype:"int32"}}):Identity_identity({inputs:{x:a},backend:n});const c=u.shape.length,l=s.of.parseAxisParam(o,u.shape),d=s.md.getAxesPermutation(l,c);let p=l,h=u;null!=d&&(h=Transpose_transpose({inputs:{x:u},backend:n,attrs:{perm:d}}),p=s.md.getInnerMostAxes(p.length,c)),s.md.assertAxesAreInnerMostDims("sum",p,h.shape.length);const[f,m]=s.md.computeOutAndReduceShapes(h.shape,p);let g=zeros_impl_zeros(n,f,s.md.upcastType(h.dtype,"int32"));const b=s.of.sizeFromShape(m),y=n.data.get(g.dataId).values,x=n.data.get(h.dataId).values;for(let s=0;s<y.length;++s){const e=s*b;let t=0;for(let n=0;n<b;++n)t+=x[e+n];y[s]=t}if(i){const e=g;g=Reshape_reshape({inputs:{x:g},backend:n,attrs:{shape:s.md.expandShapeToKeepDim(g.shape,l)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(u),null!=d&&n.disposeIntermediateTensorInfo(h),g}const Ei={kernelName:s.Qc,backendName:"cpu",kernelFunc:Sum_sum};const ji={kernelName:s.Ob,backendName:"cpu",kernelFunc:function Mean_mean(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o,keepDims:i}=r,u=s.of.parseAxisParam(o,a.shape),c=s.md.computeOutAndReduceShapes(a.shape,u)[1],l=s.of.sizeFromShape(c),d=[],p=n.makeTensorInfo([],"float32",new Float32Array([l]));d.push(p);const h=Cast_cast({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});d.push(h);const f=wo({inputs:{a:h,b:p},backend:n});d.push(f);const m=Sum_sum({inputs:{x:f},backend:n,attrs:{axis:o,keepDims:i}});return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),m}};const Ri={kernelName:s.Pb,backendName:"cpu",kernelFunc:function Min_min(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o,keepDims:i}=r;assertNotComplex(a,"min");const u=s.of.parseAxisParam(o,a.shape);let c=u;const l=s.md.getAxesPermutation(c,a.shape.length);let d=a;null!=l&&(d=Transpose_transpose({inputs:{x:a},backend:n,attrs:{perm:l}}),c=s.md.getInnerMostAxes(c.length,a.shape.length)),s.md.assertAxesAreInnerMostDims("min",c,d.shape.length);const[p,h]=s.md.computeOutAndReduceShapes(d.shape,c),f=s.of.sizeFromShape(h),m=s.of.makeZerosTypedArray(s.of.sizeFromShape(p),d.dtype),g=n.data.get(d.dataId).values;for(let s=0;s<m.length;++s){const e=s*f;let t=g[e];for(let n=0;n<f;++n){const r=g[e+n];r<t&&(t=r)}m[s]=t}null!=l&&n.disposeIntermediateTensorInfo(d);const b=n.makeTensorInfo(p,d.dtype,m);if(i){const e=Reshape_reshape({inputs:{x:b},backend:n,attrs:{shape:s.md.expandShapeToKeepDim(p,u)}});return n.disposeIntermediateTensorInfo(b),e}return b}},$i=createSimpleBinaryKernelImpl(((e,t)=>Math.min(e,t))),Fi=binaryKernelFunc(s.Qb,$i),Di={kernelName:s.Qb,backendName:"cpu",kernelFunc:Fi};const zi={kernelName:s.Rb,backendName:"cpu",kernelFunc:function mirrorPad(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:o,mode:i}=r;assertNotComplex(a,"mirrorPad");const u=o.map(((e,t)=>e[0]+a.shape[t]+e[1])),c=o.map((e=>e[0])),l=o.map(((e,t)=>e[0]+a.shape[t])),d="reflect"===i?0:1,p=n.data.get(a.dataId).values,h=a.shape.length,f=s.of.computeStrides(a.shape),m=s.of.sizeFromShape(u),g=u.length,b=s.of.computeStrides(u),y=s.of.getTypedArrayFromDType(a.dtype,m);for(let x=0;x<m;x++){let e=s.of.indexToLoc(x,g,b);for(let n=0;n<g;n++)e[n]<c[n]?e[n]=2*c[n]-e[n]-d:e[n]>=l[n]&&(e[n]=2*(l[n]-1)-e[n]+d);e=e.map(((e,t)=>e-c[t]));const t=s.of.locToIndex(e,h,f);y[x]=p[t]}return{dataId:n.write(y,u,a.dtype),shape:u,dtype:a.dtype}}},Pi=createSimpleBinaryKernelImpl(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),Li=binaryKernelFunc(s.Sb,Pi),Mi={kernelName:s.Sb,backendName:"cpu",kernelFunc:Li};var Bi=n("e313");function Softmax_softmax(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:o}=r,i=a.shape.length;let u=o;if(-1===u&&(u=i-1),u!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${u}`);const c=s.of.parseAxisParam([u],a.shape),l=Max_max({inputs:{x:a},backend:n,attrs:{reductionIndices:c,keepDims:!1}}),d=s.md.expandShapeToKeepDim(l.shape,c),p=Reshape_reshape({inputs:{x:l},backend:n,attrs:{shape:d}}),h=So({inputs:{a:a,b:p},backend:n}),f=lo({inputs:{x:h},backend:n}),m=Sum_sum({inputs:{x:f},backend:n,attrs:{axis:c,keepDims:!1}}),g=Reshape_reshape({inputs:{x:m},backend:n,attrs:{shape:d}}),b=wo({inputs:{a:f,b:g},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),b}const Vi={kernelName:s.Fc,backendName:"cpu",kernelFunc:Softmax_softmax};const Wi={kernelName:s.Tb,backendName:"cpu",kernelFunc:function Multinomial_multinomial(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:o,seed:i,normalized:u}=r;assertNotComplex(a,"multinomial");const c=u?a:Softmax_softmax({inputs:{logits:a},backend:n,attrs:{dim:-1}}),l=c.shape[0],d=c.shape[1],p=n.data.get(c.dataId).values,h=[l,o],f=s.of.makeZerosTypedArray(s.of.sizeFromShape(h),"int32");for(let s=0;s<l;++s){const e=s*d,t=new Float32Array(d-1);t[0]=p[e];for(let a=1;a<t.length;++a)t[a]=t[a-1]+p[e+a];const n=Bi.alea(i.toString()),r=s*o;for(let a=0;a<o;++a){const e=n();f[r+a]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){f[r+a]=n;break}}}return u||n.disposeIntermediateTensorInfo(c),n.makeTensorInfo(h,"int32",f)}};function negImpl(e,t,n){const r=s.of.createScalarValue(-1,n);return bo([],t,r,e,n)}const Ui={kernelName:s.Vb,backendName:"cpu",kernelFunc:function Neg_neg(e){const{inputs:t,backend:n}=e,{x:r}=t;assertNotComplex(r,"neg");const a=n.data.get(r.dataId).values,[s,o]=negImpl(a,r.shape,r.dtype);return n.makeTensorInfo(o,r.dtype,s)}},Gi=s.Zd.nonMaxSuppressionV3Impl;const Hi={kernelName:s.Wb,backendName:"cpu",kernelFunc:function nonMaxSuppressionV3(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u}=r;assertNotComplex(a,"NonMaxSuppression");const c=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,{selectedIndices:d}=Gi(c,l,o,i,u);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},Ki=s.Zd.nonMaxSuppressionV4Impl;const qi={kernelName:s.Xb,backendName:"cpu",kernelFunc:function nonMaxSuppressionV4(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:c}=r;assertNotComplex(a,"NonMaxSuppressionPadded");const l=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,{selectedIndices:p,validOutputs:h}=Ki(l,d,o,i,u,c);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}},Xi=s.Zd.nonMaxSuppressionV5Impl;const Ji={kernelName:s.Yb,backendName:"cpu",kernelFunc:function nonMaxSuppressionV5(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,softNmsSigma:c}=r;assertNotComplex(a,"NonMaxSuppressionWithScore");const l=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,p=o,h=i,f=u,m=c,{selectedIndices:g,selectedScores:b}=Xi(l,d,p,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}},Yi=createSimpleBinaryKernelImpl(((e,t)=>e!==t?1:0)),Zi=binaryKernelFunc(s.Zb,Yi,null,"bool"),Qi={kernelName:s.Zb,backendName:"cpu",kernelFunc:Zi};const eu={kernelName:s.ac,backendName:"cpu",kernelFunc:function OneHot_oneHot(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:o,onValue:i,offValue:u}=r;assertNotComplex(a,"oneHot");const c=s.of.sizeFromShape(a.shape),l=new Float32Array(c*o);l.fill(u);const d=n.data.get(a.dataId).values;for(let s=0;s<c;++s)d[s]>=0&&d[s]<o&&(l[s*o+d[s]]=i);return n.makeTensorInfo([...a.shape,o],"int32",l)}};function ZerosLike_zerosLike(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=Real_real({inputs:{input:r},backend:n}),t=ZerosLike_zerosLike({inputs:{x:e},backend:n}),a=Imag_imag({inputs:{input:r},backend:n}),s=ZerosLike_zerosLike({inputs:{x:a},backend:n}),o=Complex_complex({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),o}return Fill_fill({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const tu={kernelName:s.cd,backendName:"cpu",kernelFunc:ZerosLike_zerosLike};const nu={kernelName:s.bc,backendName:"cpu",kernelFunc:function OnesLike_onesLike(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const e=Real_real({inputs:{input:r},backend:n}),t=OnesLike_onesLike({inputs:{x:e},backend:n}),a=Imag_imag({inputs:{input:r},backend:n}),s=ZerosLike_zerosLike({inputs:{x:a},backend:n}),o=Complex_complex({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),o}return Fill_fill({backend:n,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}};function pack(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return ExpandDims_expandDims({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const o=t[0].shape,i=t[0].dtype;t.forEach((e=>{s.of.assertShapesMatch(o,e.shape,"All tensors passed to stack must have matching shapes"),s.of.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const u=[],c=Concat_concat({inputs:t.map((e=>{const t=ExpandDims_expandDims({inputs:{input:e},backend:n,attrs:{dim:a}});return u.push(t),t})),backend:n,attrs:{axis:a}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const ru={kernelName:s.dc,backendName:"cpu",kernelFunc:pack};const au={kernelName:s.ec,backendName:"cpu",kernelFunc:function padV2(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:o,constantValue:i}=r;assertNotComplex(a,"pad");const u=o.map(((e,t)=>e[0]+a.shape[t]+e[1])),c=o.map((e=>e[0])),l=n.data.get(a.dataId).values,d=s.of.sizeFromShape(a.shape),p=a.shape.length,h=s.of.computeStrides(a.shape),f=s.of.sizeFromShape(u),m=u.length,g=s.of.computeStrides(u),b=s.of.getTypedArrayFromDType(a.dtype,f);0!==i&&b.fill(i);for(let y=0;y<d;y++){const e=s.of.indexToLoc(y,p,h).map(((e,t)=>e+c[t]));b[s.of.locToIndex(e,m,g)]=l[y]}return{dataId:n.write(b,u,a.dtype),shape:u,dtype:a.dtype}}},su=createSimpleBinaryKernelImpl(((e,t)=>Math.pow(e,t))),ou=binaryKernelFunc(s.fc,su),iu={kernelName:s.fc,backendName:"cpu",kernelFunc:ou};function prodImpl(e,t,n,r){const[a,o]=s.md.computeOutAndReduceShapes(e,r),i=Object(s.nf)(t,"int32"),u=s.of.makeZerosTypedArray(s.of.sizeFromShape(a),i),c=s.of.sizeFromShape(o);for(let s=0;s<u.length;++s){const e=s*c;let t=1;for(let r=0;r<c;++r)t*=n[e+r];u[s]=t}return{outVals:u,outShape:a,outDtype:i}}const uu={kernelName:s.hc,backendName:"cpu",kernelFunc:function Prod_prod(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o,keepDims:i}=r;assertNotComplex(a,"prod");const u=a.shape.length,c=s.of.parseAxisParam(o,a.shape),l=s.md.getAxesPermutation(c,u);let d=c,p=a;const h=[];null!=l&&(p=Transpose_transpose({inputs:{x:a},backend:n,attrs:{perm:l}}),h.push(p),d=s.md.getInnerMostAxes(d.length,u));const f=n.data.get(p.dataId).values,{outVals:m,outShape:g,outDtype:b}=prodImpl(p.shape,p.dtype,f,d);let y=g;return i&&(y=s.md.expandShapeToKeepDim(g,c)),h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,b,m)}};function rangeImpl(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return s.of.makeZerosTypedArray(0,r);const a=Math.abs(Math.ceil((t-e)/n)),o=s.of.makeZerosTypedArray(a,r);t<e&&1===n&&(n=-1),o[0]=e;for(let s=1;s<o.length;s++)o[s]=o[s-1]+n;return o}const cu={kernelName:s.ic,backendName:"cpu",kernelFunc:function Range_range(e){const{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:o}=n,i=rangeImpl(r,a,o,s);return t.makeTensorInfo([i.length],s,i)}},lu=unaryKernelFunc(s.lc,(e=>1/e)),du={kernelName:s.lc,backendName:"cpu",kernelFunc:lu};const pu={kernelName:s.pc,backendName:"cpu",kernelFunc:function resizeBilinear(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:o,halfPixelCenters:i,size:u}=r;assertNotComplex(a,"resizeBilinear");const c=s.of.computeStrides(a.shape),[l,d]=u,[p,h,f,m]=a.shape,g=n.data.get(a.dataId).values,b=new Float32Array(s.of.sizeFromShape([p,l,d,m])),y=[o&&l>1?h-1:h,o&&d>1?f-1:f],x=[o&&l>1?l-1:l,o&&d>1?d-1:d];let v=0;const k=y[0]/x[0],w=y[1]/x[1];for(let s=0;s<p;s++)for(let e=0;e<l;e++){let t;t=i?k*(e+.5)-.5:k*e;const n=Math.max(0,Math.floor(t)),r=t-n,a=Math.min(h-1,Math.ceil(t)),o=s*c[0]+n*c[1],u=s*c[0]+a*c[1];for(let e=0;e<d;e++){let t;t=i?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),a=t-n,s=Math.min(f-1,Math.ceil(t)),l=o+n*c[2],d=u+n*c[2],p=o+s*c[2],h=u+s*c[2];for(let e=0;e<m;e++){const t=g[l+e],n=g[d+e],s=t+(g[p+e]-t)*a,o=s+(n+(g[h+e]-n)*a-s)*r;b[v++]=o}}}return n.makeTensorInfo([p,l,d,m],"float32",b)}};const hu={kernelName:s.qc,backendName:"cpu",kernelFunc:function resizeBilinearGrad(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:o}=t,{alignCorners:i}=r;assertNotComplex([o,a],"resizeBilinearGrad");const u=s.of.computeStrides(a.shape),[c,l,d,p]=a.shape,[,h,f]=o.shape,m=new Float32Array(c*l*d*p),g=[i&&h>1?l-1:l,i&&f>1?d-1:d],b=[i&&h>1?h-1:h,i&&f>1?f-1:f],y=g[0]/b[0],x=g[1]/b[1],v=n.data.get(o.dataId).values;let k=0;for(let s=0;s<c;s++){const e=s*u[0];for(let t=0;t<h;t++){const n=t*y,r=Math.floor(n),a=Math.min(Math.ceil(n),l-1),s=e+r*u[1],o=e+a*u[1],i=n-r,c=1-i;for(let e=0;e<f;e++){const t=e*x,n=Math.floor(t),r=Math.min(Math.ceil(t),d-1),a=t-n,l=1-a,h=s+n*u[2],f=s+r*u[2],g=o+n*u[2],b=o+r*u[2],y=c*l,w=c*a,O=i*l,_=i*a;for(let e=0;e<p;e++){const t=v[k++];m[h+e]+=t*y,m[f+e]+=t*w,m[g+e]+=t*O,m[b+e]+=t*_}}}}return n.makeTensorInfo([c,d,l,p],"float32",m)}};const fu={kernelName:s.rc,backendName:"cpu",kernelFunc:function resizeNearestNeighbor(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:o,halfPixelCenters:i,size:u}=r;assertNotComplex(a,"resizeNearestNeighbor");const c=s.of.computeStrides(a.shape),[l,d]=u,[p,h,f,m]=a.shape,g=n.data.get(a.dataId).values,b=new Float32Array(p*l*d*m),y=[o&&l>1?h-1:h,o&&d>1?f-1:f],x=[o&&l>1?l-1:l,o&&d>1?d-1:d],v=y[0]/x[0],k=y[1]/x[1];let w=0;for(let s=0;s<p;s++){const e=s*c[0];for(let t=0;t<l;t++){const n=i?v*(t+.5):v*t;let r=Math.min(h-1,o?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));const a=e+r*c[1];for(let e=0;e<d;e++){const t=i?k*(e+.5):k*e;let n=Math.min(f-1,o?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const r=a+n*c[2];for(let e=0;e<m;e++){const t=g[r+e];b[w++]=t}}}}return n.makeTensorInfo([p,l,d,m],a.dtype,b)}};const mu={kernelName:s.sc,backendName:"cpu",kernelFunc:function resizeNearestNeighborGrad(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:o}=t,{alignCorners:i}=r;assertNotComplex([o,a],"resizeNearestNeighborGrad");const u=s.of.computeStrides(a.shape),c=s.of.computeStrides(o.shape),[l,d,p,h]=a.shape,[,f,m]=o.shape,g=new Float32Array(l*d*p*h),b=n.data.get(o.dataId).values,y=[i&&f>1?d-1:d,i&&m>1?p-1:p],x=[i&&f>1?f-1:f,i&&m>1?m-1:m],v=y[0]/x[0],k=y[1]/x[1],w=1/v,O=1/k,_=2*Math.ceil(w)+2,I=2*Math.ceil(O)+2;for(let s=0;s<l;s++){const e=s*u[0];for(let t=0;t<d;t++){const n=e+t*u[1],r=Math.floor(t*w),a=Math.floor(r-_/2);for(let s=0;s<p;s++){const r=n+s*u[2],o=Math.floor(s*O),l=Math.floor(o-I/2);for(let n=0;n<h;n++){let o=0;for(let r=0;r<_;r++){const u=r+a;if(u<0||u>=f)continue;const h=e+u*c[1],g=u*v;if(t===Math.min(d-1,i?Math.round(g):Math.floor(g)))for(let e=0;e<I;e++){const t=e+l;if(t<0||t>=m)continue;const r=h+t*c[2],a=t*k;s===Math.min(p-1,i?Math.round(a):Math.floor(a))&&(o+=b[r+n])}}g[r+n]=o}}}}return n.makeTensorInfo(a.shape,a.dtype,g)}};const gu={kernelName:s.tc,backendName:"cpu",kernelFunc:function Reverse_reverse(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:o}=r;assertNotComplex(a,"reverse");const i=a.shape.length,u=s.of.parseAxisParam(o,a.shape);if(0===i)return Identity_identity({inputs:{x:a},backend:n});const c=new s.Uc(a.shape,a.dtype),l=n.bufferSync(a);for(let s=0;s<c.size;s++){const e=c.indexToLoc(s),t=e.slice();u.forEach((e=>t[e]=a.shape[e]-1-t[e])),c.set(l.get(...t),...e)}return n.makeTensorInfo(c.shape,c.dtype,c.values)}},bu={kernelName:s.uc,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:o,center:i}=t,u=n,c=s.of.getTypedArrayFromDType(r.dtype,s.of.sizeFromShape(r.shape)),[l,d,p,h]=r.shape,[f,m]=s.md.getImageCenter(i,d,p),g=Math.sin(a),b=Math.cos(a),y=u.data.get(r.dataId).values;for(let s=0;s<l;s++){const e=s*p*d*h;for(let t=0;t<d;t++){const n=t*(p*h);for(let r=0;r<p;r++){const a=r*h;for(let s=0;s<h;s++){const i=[l,t,r,s],u=i[2],x=i[1];let v=(u-f)*b-(x-m)*g,k=(u-f)*g+(x-m)*b;v=Math.round(v+f),k=Math.round(k+m);let w=o;if("number"!=typeof o&&(w=3===s?255:o[s]),v>=0&&v<p&&k>=0&&k<d){w=y[e+k*(p*h)+v*h+s]}c[e+n+a+s]=w}}}}return{dataId:u.write(c,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},yu=unaryKernelFunc(s.vc,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),xu={kernelName:s.vc,backendName:"cpu",kernelFunc:yu},vu=createSimpleUnaryImpl((e=>1/Math.sqrt(e))),ku=unaryKernelFuncFromImpl(s.wc,vu),wu={kernelName:s.wc,backendName:"cpu",kernelFunc:ku};function scatterImpl(e,t,n,r,a,o,i,u,c,l){const d=[r/a,a],p=e.values,h=t.values;if(0===r)return Object(s.rd)(n,t.dtype);const f=Object(s.rd)(d,t.dtype);f.values.fill(c);for(let s=0;s<o;s++){const e=[];let o=0;for(let t=0;t<i;t++){const n=p[s*i+t];e.push(n),o+=n*u[t]}if(o<0||o>=r/a)throw new Error(`Invalid indices: ${e} does not index into ${n}`);for(let n=0;n<a;n++)l?f.values[o*a+n]+=h[s*a+n]:f.values[o*a+n]=0===t.rank?h[0]:h[s*a+n]}return f}const Ou={kernelName:s.xc,backendName:"cpu",kernelFunc:function scatterNd(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:o}=t,{shape:i}=r,{sliceRank:u,numUpdates:c,sliceSize:l,strides:d,outputSize:p}=s.md.calculateShapes(o,a,i),h=scatterImpl(n.bufferSync(a),n.bufferSync(o),i,p,l,c,u,d,0,!0);return n.makeTensorInfo(i,h.dtype,h.values)}};const _u={kernelName:s.yc,backendName:"cpu",kernelFunc:function Select_select(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:o}=t;assertNotComplex([r,a,o],"select");const i=r.shape.length,u=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,l=n.data.get(o.dataId).values,d=Object(s.nf)(a.dtype,o.dtype),p=s.of.makeZerosTypedArray(s.of.sizeFromShape(a.shape),d);let h=0;const f=0===i||i>1||1===a.shape.length?1:s.of.sizeFromShape(a.shape.slice(1));for(let s=0;s<u.length;s++)for(let e=0;e<f;e++)1===u[s]?p[h++]=c[s]:p[h++]=l[s];return n.makeTensorInfo(a.shape,d,p)}},Iu=s.md.SELU_SCALEALPHA,Su=s.md.SELU_SCALE,Nu=unaryKernelFunc(s.zc,(e=>e>=0?Su*e:Iu*(Math.exp(e)-1))),Cu={kernelName:s.zc,backendName:"cpu",kernelFunc:Nu},Tu=unaryKernelFunc(s.Ac,(e=>1/(1+Math.exp(-e)))),Au={kernelName:s.Ac,backendName:"cpu",kernelFunc:Tu},Eu=unaryKernelFunc(s.Bc,(e=>e<0?-1:e>0?1:0)),ju={kernelName:s.Bc,backendName:"cpu",kernelFunc:Eu},Ru=unaryKernelFunc(s.Cc,(e=>Math.sin(e))),$u={kernelName:s.Cc,backendName:"cpu",kernelFunc:Ru},Fu=unaryKernelFunc(s.Dc,(e=>Math.sinh(e))),Du={kernelName:s.Dc,backendName:"cpu",kernelFunc:Fu},zu=Math.log(1.1920928955078125e-7)+2,Pu=unaryKernelFunc(s.Gc,(e=>{const t=e>-zu,n=e<zu,r=Math.exp(e);let a;return a=n?r:t?e:Math.log(1+r),a})),Lu={kernelName:s.Gc,backendName:"cpu",kernelFunc:Pu};const Mu={kernelName:s.Hc,backendName:"cpu",kernelFunc:function spaceToBatchND(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:o,paddings:i}=r;assertNotComplex([a],"spaceToBatchND");const u=s.of.sizeFromShape(o),c=[[0,0]];c.push(...i);for(let s=1+o.length;s<a.shape.length;++s)c.push([0,0]);const l=au.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:c,constantValue:0}}),d=s.md.getReshaped(l.shape,o,u,!1),p=s.md.getPermuted(d.length,o.length,!1),h=s.md.getReshapedPermuted(l.shape,o,u,!1),f=Reshape_reshape({inputs:{x:l},backend:n,attrs:{shape:d}}),m=Transpose_transpose({inputs:{x:f},backend:n,attrs:{perm:p}}),g=Reshape_reshape({inputs:{x:m},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};const Bu={kernelName:s.Ic,backendName:"cpu",kernelFunc:function sparseToDense(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:o,defaultValue:i}=t,{outputShape:u}=r,{sliceRank:c,numUpdates:l,sliceSize:d,strides:p,outputSize:h}=s.md.calculateShapes(o,a,u),f=scatterImpl(n.bufferSync(a),n.bufferSync(o),u,h,d,l,c,p,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(u,f.dtype,f.values)}};const Vu={kernelName:s.Jc,backendName:"cpu",kernelFunc:function splitV(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:o,axis:i}=r,u=s.of.parseAxisParam(i,a.shape)[0],c=s.md.prepareSplitSize(a,o,u),l=new Array(a.shape.length).fill(0),d=a.shape.slice();return c.map((e=>{const t=[...d];t[u]=e;const r=Slice_slice({inputs:{x:a},backend:n,attrs:{begin:l,size:t}});return l[u]+=e,r}))}},Wu=unaryKernelFunc(s.Kc,(e=>Math.sqrt(e))),Uu={kernelName:s.Kc,backendName:"cpu",kernelFunc:Wu},Gu={kernelName:s.Lc,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;assertNotComplex(n,"square");const a=r.data.get(n.dataId).values,s=new Float32Array(a.length);for(let o=0;o<a.length;++o){const e=a[o];s[o]=e*e}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},Hu=createSimpleBinaryKernelImpl(((e,t)=>{const n=e-t;return n*n})),Ku=binaryKernelFunc(s.Mc,Hu),qu={kernelName:s.Mc,backendName:"cpu",kernelFunc:Ku},Xu=unaryKernelFunc(s.Nc,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),Ju={kernelName:s.Nc,backendName:"cpu",kernelFunc:Xu};function stridedSliceImpl(e,t,n,r){const a=Object(s.rd)(e,t.dtype);for(let s=0;s<a.size;s++){const e=a.indexToLoc(s),o=new Array(e.length);for(let t=0;t<o.length;t++)o[t]=e[t]*n[t]+r[t];a.set(t.get(...o),...e)}return a}const Yu={kernelName:s.Oc,backendName:"cpu",kernelFunc:function stridedSlice(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:o,end:i,strides:u,beginMask:c,endMask:l,ellipsisMask:d,newAxisMask:p,shrinkAxisMask:h}=r;assertNotComplex(a,"stridedSlice");const{nonStrided:f,$begin:m,$strides:g,size:b,newShape:y,outShape:x}=s.Re.sliceInfo(a.shape,o,i,u,c,l,d,p,h),v=Reshape_reshape({inputs:{x:a},backend:n,attrs:{shape:y}});let k;if(f){const e=Slice_slice({inputs:{x:v},backend:n,attrs:{begin:m,size:b}});k=Reshape_reshape({inputs:{x:e},backend:n,attrs:{shape:x}}),n.disposeIntermediateTensorInfo(e)}else if(x.some((e=>0===e)))k=n.makeTensorInfo(x,a.dtype,[]);else{const e=stridedSliceImpl(x,n.bufferSync(v),g,m);k=n.makeTensorInfo(e.shape,e.dtype,e.values)}const w=Reshape_reshape({inputs:{x:k},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(k),w}},Zu=unaryKernelFunc(s.Rc,(e=>Math.tan(e))),Qu={kernelName:s.Rc,backendName:"cpu",kernelFunc:Zu},ec=unaryKernelFunc(s.Sc,(e=>Math.tanh(e))),tc={kernelName:s.Sc,backendName:"cpu",kernelFunc:ec};function tileImpl(e,t){const n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=e.shape[a]*t[a];const r=Object(s.rd)(n,e.dtype);for(let a=0;a<r.values.length;++a){const t=r.indexToLoc(a),n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=t[r]%e.shape[r];const s=e.locToIndex(n);r.values[a]=e.values[s]}return r}const nc={kernelName:s.Vc,backendName:"cpu",kernelFunc:function Tile_tile(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;assertNotComplex(a,"tile");const o=tileImpl(n.bufferSync(a),s);return n.makeTensorInfo(o.shape,o.dtype,o.values)}};function topKImpl(e,t,n,r,a){const o=t[t.length-1],[i,u]=[e.length/o,o],c=s.of.getTypedArrayFromDType(n,i*r),l=s.of.getTypedArrayFromDType("int32",i*r);for(let s=0;s<i;s++){const t=s*u,n=e.subarray(t,t+u),a=[];for(let e=0;e<n.length;e++)a.push({value:n[e],index:e});a.sort(((e,t)=>t.value-e.value));const o=s*r,i=c.subarray(o,o+r),d=l.subarray(o,o+r);for(let e=0;e<r;e++)i[e]=a[e].value,d[e]=a[e].index}const d=t.slice();return d[d.length-1]=r,[Object(s.rd)(d,n,c),Object(s.rd)(d,"int32",l)]}const rc={kernelName:s.Wc,backendName:"cpu",kernelFunc:function topK(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:o}=r;assertNotComplex(a,"topk");const i=n.data.get(a.dataId).values,[u,c]=topKImpl(i,a.shape,a.dtype,s);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(c.shape,c.dtype,c.values)]}};const ac={kernelName:s.Xc,backendName:"cpu",kernelFunc:function Transform_transform(e){const{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:o}=t,{interpolation:i,fillMode:u,fillValue:c,outputShape:l}=n,[d,p,h,f]=a.shape,[m,g]=null!=l?l:[p,h],b=[d,m,g,f],y=s.of.computeStrides(a.shape),x=y[0],v=y[1],k=y[2],w=s.of.getTypedArrayFromDType(a.dtype,s.of.sizeFromShape(b));w.fill(c);const O=r.data.get(a.dataId).values,_=r.data.get(o.dataId).values;for(let s=0;s<d;++s){const e=1===o.shape[0]?_:_.subarray(8*s,8*s+8);for(let t=0;t<m;++t)for(let n=0;n<g;++n)for(let r=0;r<f;++r){let a;const o=e[6]*n+e[7]*t+1;if(0===o)continue;const l=(e[0]*n+e[1]*t+e[2])/o,d=(e[3]*n+e[4]*t+e[5])/o,f=mapCoord(l,h,u),m=mapCoord(d,p,u);switch(i){case"nearest":a=nearestInterpolation(O,p,h,x,v,k,s,m,f,r,c);break;case"bilinear":a=bilinearInterpolation(O,p,h,x,v,k,s,m,f,r,c);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}w[s*x+t*v+n*k+r]=a}return r.makeTensorInfo(b,a.dtype,w)}return{dataId:r.write(w,b,a.dtype),shape:a.shape,dtype:a.dtype}}};function mapCoord(e,t,n){switch(n){case"reflect":return function mapCoordReflect(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return s.of.clamp(0,n,t-1)}(e,t);case"wrap":return function mapCoordWrap(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return s.of.clamp(0,n,t-1)}(e,t);case"nearest":return function mapCoordNearest(e,t){return s.of.clamp(0,e,t-1)}(e,t);case"constant":default:return function mapCoordConstant(e,t){return e}(e)}}function readWithFillValue(e,t,n,r,a,s,o,i,u,c,l){return 0<=i&&i<t&&0<=u&&u<n?e[o*r+i*a+u*s+c]:l}function nearestInterpolation(e,t,n,r,a,s,o,i,u,c,l){return readWithFillValue(e,t,n,r,a,s,o,Math.round(i),Math.round(u),c,l)}function bilinearInterpolation(e,t,n,r,a,s,o,i,u,c,l){const d=Math.floor(i),p=Math.floor(u),h=d+1,f=p+1;return(h-i)*((f-u)*readWithFillValue(e,t,n,r,a,s,o,d,p,c,l)+(u-p)*readWithFillValue(e,t,n,r,a,s,o,d,f,c,l))+(i-d)*((f-u)*readWithFillValue(e,t,n,r,a,s,o,h,p,c,l)+(u-p)*readWithFillValue(e,t,n,r,a,s,o,h,f,c,l))}function uniqueImpl(e,t,n,r){const a=s.of.parseAxisParam(t,n)[0],o=[1,n[0],1];for(let s=0;s<a;s++)o[0]*=n[s];o[1]=n[a];for(let s=a+1;s<n.length;s++)o[2]*=n[s];const i={},u=new Int32Array(n[a]),c=new s.Uc(o,r,e),l=[],d=1===o[0]&&1===o[2];for(let s=0;s<n[a];s++){let t;if(d)t=e[s].toString();else{const e=[];for(let t=0;t<o[0];t++)for(let n=0;n<o[2];n++)e.push(c.get(t,s,n));t=e.join(",")}if(void 0!==i[t])u[s]=i[t];else{const e=Object.keys(i).length;i[t]=e,u[s]=e,l.push(s)}}const p=o.slice();p[1]=Object.keys(i).length;const h=new s.Uc(p,r);l.forEach(((e,t)=>{for(let n=0;n<o[0];n++)for(let r=0;r<o[2];r++)h.set(c.get(n,e,r),n,t,r)}));const f=n.slice();return f[a]=p[1],{outputValues:h.values,outputShape:f,indices:u}}const sc={kernelName:s.Zc,backendName:"cpu",kernelFunc:function Unique_unique(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;assertNotComplex(s,"unique");const o=r.data.get(s.dataId).values,{outputValues:i,outputShape:u,indices:c}=uniqueImpl(o,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,i),r.makeTensorInfo([c.length],"int32",c)]}};const oc={kernelName:s.ad,backendName:"cpu",kernelFunc:function unpack(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const o=a.shape.length,i=a.shape[s],u=new Array(o-1);let c=0;for(let h=0;h<o;h++)h!==s&&(u[c++]=a.shape[h]);const l=new Array(o).fill(0),d=a.shape.slice();d[s]=1;const p=new Array(i);for(let h=0;h<p.length;h++){l[s]=h;const e=Slice_slice({inputs:{x:a},backend:n,attrs:{begin:l,size:d}});p[h]=Reshape_reshape({inputs:{x:e},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(e)}return p}};const ic={kernelName:s.bd,backendName:"cpu",kernelFunc:function unsortedSegmentSum(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:o}=t,{numSegments:i}=r;assertNotComplex(a,"unsortedSegmentSum");const u=[],c=[],l=a.shape.length-o.shape.length;let d=o;for(let s=0;s<l;++s){const e=ExpandDims_expandDims({inputs:{input:d},backend:n,attrs:{dim:s+1}});d=e,c.push(e)}for(let h=0;h<i;++h){const e=s.of.createScalarValue(h,"int32"),t=n.makeTensorInfo([],"int32",e),r=Qs({inputs:{a:t,b:d},backend:n}),o=Cast_cast({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),i=xo({inputs:{a:o,b:a},backend:n}),l=Sum_sum({inputs:{x:i},backend:n,attrs:{axis:0,keepDims:!1}});u.push(l),c.push(t),c.push(r),c.push(o),c.push(i),c.push(l)}const p=pack({inputs:u,backend:n,attrs:{axis:0}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},uc=[Ga,Ha,qa,Ja,Va,Ya,Qa,es,ts,ns,as,os,us,ds,hs,fs,ms,gs,bs,Ua,ys,vs,ks,Pa,_s,Ss,Da,Ns,Ts,Es,js,As,$s,Fs,Rs,zs,Ls,Ms,Bs,Vs,Ws,Us,Gs,Hs,Ks,qs,Js,Xs,Oo,Na,Ys,eo,uo,po,ho,go,Co,To,Ao,Ro,Do,zo,Po,Lo,Mo,Wo,Ho,Ca,Ko,Cs,Xo,Yo,Qo,Ta,ni,si,oi,ci,di,fi,gi,xi,vi,ki,Ii,Si,Ni,Ci,Ti,Ai,wi,ji,Ri,Di,zi,Mi,Wi,vo,Ui,Hi,qi,Ji,Qi,eu,nu,ru,au,iu,Ea,uu,cu,za,du,Ra,Fa,Wa,pu,hu,fu,mu,gu,bu,xu,wu,Ou,_u,Cu,Au,ju,$u,Du,xs,Vi,Lu,Mu,Bu,Vu,Uu,Gu,qu,Ju,Yu,No,Ei,Qu,tc,nc,rc,Za,ac,sc,oc,ic,tu];for(const Jf of uc)Object(s.Ce)(Jf);const cc={},lc={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function getWebGLContext(e){if(!(e in cc)){const t=function getWebGLRenderingContext(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function createCanvas(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);if(t.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete cc[e]}),!1),1===e)return t.getContext("webgl",lc)||t.getContext("experimental-webgl",lc);return t.getContext("webgl2",lc)}(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;cc[e]=t}const t=cc[e];return t.isContextLost()?(delete cc[e],getWebGLContext(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),cc[e])}var dc,pc,hc;function getUnpackedMatrixTextureShapeWidthHeight(e,t){return[t,e]}function getDenseTexShape(e){const t=s.of.sizeFromShape(e),n=Math.ceil(t/4);return s.of.sizeToSquarishShape(n)}function getPackedMatrixTextureShapeWidthHeight(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function getTextureConfig(e,t){const n=e;let r,a,o,i,u,c,l,d,p,h;return 2===Object(s.Ld)().getNumber("WEBGL_VERSION")?(r=n.R32F,a=n.R16F,o=n.RGBA16F,i=n.RGBA32F,u=n.RED,l=4,d=1,p=n.HALF_FLOAT,h=n.FLOAT):(r=e.RGBA,a=e.RGBA,o=e.RGBA,i=n.RGBA,u=e.RGBA,l=4,d=4,p=null!=t?t.HALF_FLOAT_OES:null,h=e.FLOAT),c=e.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:i,textureFormatFloat:u,downloadTextureFormat:c,downloadUnpackNumChannels:l,defaultNumChannels:d,textureTypeHalfFloat:p,textureTypeFloat:h}}function callAndCheck(e,t){const n=t();return Object(s.Ld)().getBool("DEBUG")&&function checkWebGLError(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function getWebGLErrorMessage(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(dc||(dc={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(pc||(pc={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(hc||(hc={}));function canBeRepresented(e){return!!(Object(s.Ld)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function getExtensionOrThrow(e,t){return throwIfNull(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function createFragmentShader(e,t){const n=throwIfNull(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(callAndCheck(e,(()=>e.shaderSource(n,t))),callAndCheck(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function logShaderSourceAndInfoLog(e,t){const n=fc.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],a=e.split("\n"),o=a.length.toString().length+2,i=a.map(((e,t)=>s.of.rightPad((t+1).toString(),o)+e));let u=0;for(let s=0;s<i.length;s++)u=Math.max(i[s].length,u);const c=i.slice(0,r-1),l=i.slice(r-1,r),d=i.slice(r);console.log(c.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${s.of.rightPad(l[0],u)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const fc=/ERROR: [0-9]+:([0-9]+):/g;function validateProgram(e,t){if(callAndCheck(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function bindVertexBufferToProgramAttribute(e,t,n,r,a,s,o){const i=e.getAttribLocation(t,n);return-1!==i&&(callAndCheck(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),callAndCheck(e,(()=>e.vertexAttribPointer(i,a,e.FLOAT,!1,s,o))),callAndCheck(e,(()=>e.enableVertexAttribArray(i))),!0)}function bindTextureToProgramUniformSampler(e,t,n,r){callAndCheck(e,(()=>function bindTextureUnit(e,t,n){validateTextureUnit(e,n),callAndCheck(e,(()=>e.activeTexture(e.TEXTURE0+n))),callAndCheck(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),callAndCheck(e,(()=>e.uniform1i(n,r)))}function bindColorTextureToFramebuffer(e,t,n){callAndCheck(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),callAndCheck(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function unbindColorTextureFromFramebuffer(e,t){callAndCheck(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),callAndCheck(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function validateFramebuffer(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function getFramebufferErrorMessage(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function throwIfNull(e,t,n){const r=callAndCheck(e,(()=>t()));if(null==r)throw new Error(n);return r}function validateTextureUnit(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function getBatchDim(e,t=2){return s.of.sizeFromShape(e.slice(0,e.length-t))}function getRowsCols(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function getShapeAs3D(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[getBatchDim(e),...getRowsCols(e)]),t}function isEven(e){return e%2==0}function isReshapeFree(e,t){if(e=e.slice(-2),t=t.slice(-2),s.of.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(isEven(n)&&isEven(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&isEven(e[0])&&isEven(t[0])}let mc,gc;function hasExtension(e,t){return null!=e.getExtension(t)}function isWebGLVersionEnabled(e){try{if(null!=getWebGLContext(e))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function isDownloadFloatTextureEnabled(e){if(0===e)return!1;const t=getWebGLContext(e);if(1!==e){if(hasExtension(t,"EXT_color_buffer_float"))return createFloatTextureAndBindToFramebuffer(t);const e="EXT_color_buffer_half_float";if(hasExtension(t,e)){const n=t.getExtension(e);return function createHalfFloatTextureAndBindToFramebuffer(e,t){const n=getTextureConfig(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);const a=1,s=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,a,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(o),i}(t,n)}return!1}if(!hasExtension(t,"OES_texture_float"))return!1;if(!hasExtension(t,"WEBGL_color_buffer_float"))return!1;return createFloatTextureAndBindToFramebuffer(t)}function createFloatTextureAndBindToFramebuffer(e){const t=getTextureConfig(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function webgl_util_assertNotComplex(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&s.of.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const bc=Object(s.Ld)();function getGlslDifferences(){let e,t,n,r,a,o,i,u,c,l;return 2===Object(s.Ld)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",o="outputColor",i="out vec4 outputColor;",u="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",c="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",o="gl_FragColor",i="",u="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",c="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:o,defineOutput:i,defineSpecialNaN:u,defineSpecialInf:c,defineRound:l}}function getLogicalCoordinatesFromFlatIndex(e,t,n="index"){const r=s.of.computeStrides(t);return r.map(((t,a)=>`${`int ${e[a]} = ${n} / ${t}`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`};`)).join("")}function getFlatIndexFrom3D(e){const t=s.of.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}bc.registerFlag("HAS_WEBGL",(()=>bc.getNumber("WEBGL_VERSION")>0)),bc.registerFlag("WEBGL_VERSION",(()=>isWebGLVersionEnabled(2)?2:isWebGLVersionEnabled(1)?1:0)),bc.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),bc.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===bc.get("WEBGL_VERSION"))),bc.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),bc.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),bc.registerFlag("WEBGL_PACK",(()=>bc.getBool("HAS_WEBGL"))),bc.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>bc.getBool("WEBGL_PACK"))),bc.registerFlag("WEBGL_PACK_CLIP",(()=>bc.getBool("WEBGL_PACK"))),bc.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>!1)),bc.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>bc.getBool("WEBGL_PACK"))),bc.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>bc.getBool("WEBGL_PACK"))),bc.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>bc.getBool("WEBGL_PACK"))),bc.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>bc.getBool("WEBGL_PACK"))),bc.registerFlag("WEBGL_PACK_REDUCE",(()=>bc.getBool("WEBGL_PACK"))),bc.registerFlag("WEBGL_LAZILY_UNPACK",(()=>bc.getBool("WEBGL_PACK"))),bc.registerFlag("WEBGL_CONV_IM2COL",(()=>bc.getBool("WEBGL_PACK"))),bc.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function getWebGLMaxTextureSize(e){if(null==mc){const t=getWebGLContext(e);mc=t.getParameter(t.MAX_TEXTURE_SIZE)}return mc}(bc.getNumber("WEBGL_VERSION")))),bc.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function getMaxTexturesInShader(e){if(null==gc){const t=getWebGLContext(e);gc=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,gc)}(bc.getNumber("WEBGL_VERSION")))),bc.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=bc.getNumber("WEBGL_VERSION");return 0===e?0:function getWebGLDisjointQueryTimerVersion(e){if(0===e)return 0;let t;const n=getWebGLContext(e);return t=hasExtension(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:hasExtension(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),bc.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>bc.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!s.Fd.isMobile())),bc.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function isCapableOfRenderingToFloatTexture(e){if(0===e)return!1;const t=getWebGLContext(e);if(1===e){if(!hasExtension(t,"OES_texture_float"))return!1}else if(!hasExtension(t,"EXT_color_buffer_float"))return!1;return createFloatTextureAndBindToFramebuffer(t)}(bc.getNumber("WEBGL_VERSION")))),bc.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!bc.getBool("WEBGL_FORCE_F16_TEXTURES")&&bc.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),bc.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>isDownloadFloatTextureEnabled(bc.getNumber("WEBGL_VERSION")))),bc.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>function isWebGLFenceEnabled(e){return 2===e&&null!=getWebGLContext(e).fenceSync}(bc.getNumber("WEBGL_VERSION")))),bc.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>bc.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),bc.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),bc.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>s.Fd.isMobile()&&bc.getBool("IS_CHROME")?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)}));const yc="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";class decode_matrix_gpu_DecodeMatrixProgram{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=dc.DENSE;const t=getDenseTexShape(e),n=getGlslDifferences();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${getLogicalCoordinatesFromFlatIndex(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class decode_matrix_packed_gpu_DecodeMatrixPackedProgram{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=dc.DENSE;const t=getDenseTexShape(e),n=getGlslDifferences();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${getLogicalCoordinatesFromFlatIndex(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class encode_float_gpu_EncodeFloatProgram{constructor(e){this.variableNames=["A"],this.outTexUsage=pc.DOWNLOAD;const t=getGlslDifferences();this.outputShape=e,this.userCode=`\n      ${yc}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class encode_float_packed_gpu_EncodeFloatPackedProgram{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=pc.DOWNLOAD;const t=getGlslDifferences();this.outputShape=e,this.userCode=`\n      ${yc}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class encode_matrix_gpu_EncodeMatrixProgram{constructor(e,t,n=!1){this.variableNames=["A"];const r=getGlslDifferences(),[a,s]=t;this.outputShape=e;let o="result";n&&(o="floor(result * 255. + 0.5)"),this.userCode=`\n      ${getFlatIndexFrom3D(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${s};\n        int c = imod(flatIndex, ${s});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${a}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${o}, 0., 0., 0.);\n      }\n    `}}class encode_matrix_packed_gpu_EncodeMatrixPackedProgram{constructor(e,t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=getGlslDifferences(),[a,s]=t;this.outputShape=e;let o="",i="result";n&&(i="floor(result * 255. + 0.5)");for(let u=0;u<=1;u++)for(let t=0;t<=1;t++){const n=2*u+t;o+=`\n          localCoords = coords;\n          if(localCoords[2] + ${t} < ${e[2]}) {\n            localCoords[2] += ${t};\n            if(localCoords[1] + ${u} < ${e[1]}) {\n              localCoords[1] += ${u};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${s};\n              c = imod(flatIndex, ${s});\n              uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${a}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${n}] = values[0];\n              } else if(offset == 1) {\n                result[${n}] = values[1];\n              } else if(offset == 2) {\n                result[${n}] = values[2];\n              } else {\n                result[${n}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${getFlatIndexFrom3D(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${o}\n\n        ${r.output} = ${i};\n      }\n    `}}function gpgpu_util_createVertexShader(e){const t=getGlslDifferences();return function createVertexShader(e,t){const n=throwIfNull(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(callAndCheck(e,(()=>e.shaderSource(n,t))),callAndCheck(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function createVertexBuffer(e){return function createStaticVertexBuffer(e,t){const n=throwIfNull(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return callAndCheck(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),callAndCheck(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function createIndexBuffer(e){return function createStaticIndexBuffer(e,t){const n=throwIfNull(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return callAndCheck(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),callAndCheck(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}function createAndConfigureTexture(e,t,n,r,a,o){!function validateTextureSize(e,t){const n=Object(s.Ld)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function createTexture(e){return throwIfNull(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),u=e.TEXTURE_2D;return callAndCheck(e,(()=>e.bindTexture(u,i))),callAndCheck(e,(()=>e.texParameteri(u,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),callAndCheck(e,(()=>e.texParameteri(u,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),callAndCheck(e,(()=>e.texParameteri(u,e.TEXTURE_MIN_FILTER,e.NEAREST))),callAndCheck(e,(()=>e.texParameteri(u,e.TEXTURE_MAG_FILTER,e.NEAREST))),callAndCheck(e,(()=>e.texImage2D(u,0,r,t,n,0,a,o,null))),callAndCheck(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),i}function getInternalFormatForFloat32MatrixTexture(e){return e.internalFormatFloat}function getInternalFormatForFloat16MatrixTexture(e){return e.internalFormatHalfFloat}function getInternalFormatForUnsignedBytesMatrixTexture(e){return e.downloadTextureFormat}function getInternalFormatForPackedMatrixTexture(e){return e.internalFormatPackedFloat}function getInternalFormatForFloat16PackedMatrixTexture(e){return e.internalFormatPackedHalfFloat}function downloadPackedMatrixFromBuffer(e,t,n,r,a,s,o,i){const u=e,c=new Float32Array(function getPackedRGBAArraySizeFromMatrixShape(e,t){const[n,r]=getPackedMatrixTextureShapeWidthHeight(e,t);return n*r*4}(s,o));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,c),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),c}class gpgpu_context_GPGPUContext{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=Object(s.Ld)().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function setWebGLContext(e,t){cc[e]=t}(t,e)):this.gl=getWebGLContext(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===Object(s.Ld)().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=getExtensionOrThrow(this.gl,e),hasExtension(this.gl,t))this.textureHalfFloatExtension=getExtensionOrThrow(this.gl,t);else if(Object(s.Ld)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),hasExtension(this.gl,r))this.colorBufferHalfFloatExtension=getExtensionOrThrow(this.gl,r);else if(Object(s.Ld)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",hasExtension(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!hasExtension(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=createVertexBuffer(this.gl),this.indexBuffer=createIndexBuffer(this.gl),this.framebuffer=function createFramebuffer(e){return throwIfNull(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=getTextureConfig(this.gl,this.textureHalfFloatExtension)}get debug(){return Object(s.Ld)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;callAndCheck(e,(()=>e.finish())),callAndCheck(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),callAndCheck(e,(()=>e.deleteFramebuffer(this.framebuffer))),callAndCheck(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),callAndCheck(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),callAndCheck(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function createFloat32MatrixTexture(e,t,n,r){const[a,s]=getUnpackedMatrixTextureShapeWidthHeight(t,n);return createAndConfigureTexture(e,a,s,getInternalFormatForFloat32MatrixTexture(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function createFloat16MatrixTexture(e,t,n,r){const[a,s]=getUnpackedMatrixTextureShapeWidthHeight(t,n);return createAndConfigureTexture(e,a,s,getInternalFormatForFloat16MatrixTexture(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function createUnsignedBytesMatrixTexture(e,t,n,r){const[a,s]=getUnpackedMatrixTextureShapeWidthHeight(t,n);return createAndConfigureTexture(e,a,s,getInternalFormatForUnsignedBytesMatrixTexture(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function uploadPixelDataToTexture(e,t,n){callAndCheck(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?callAndCheck(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):callAndCheck(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),callAndCheck(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function uploadDenseMatrixToTexture(e,t,n,r,a,s){let o,i,u;callAndCheck(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(o=new Uint8Array(n*r*4),i=e.UNSIGNED_BYTE,u=e.RGBA):(o=new Float32Array(n*r*4),i=e.FLOAT,u=s.internalFormatPackedFloat),o.set(a),callAndCheck(e,(()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,i,o))),callAndCheck(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function createFloat16PackedMatrixTexture(e,t,n,r){const[a,s]=getPackedMatrixTextureShapeWidthHeight(t,n);return createAndConfigureTexture(e,a,s,getInternalFormatForFloat16PackedMatrixTexture(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function createPackedMatrixTexture(e,t,n,r){const[a,s]=getPackedMatrixTextureShapeWidthHeight(t,n);return createAndConfigureTexture(e,a,s,getInternalFormatForPackedMatrixTexture(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(unbindColorTextureFromFramebuffer(this.gl,this.framebuffer),this.outputTexture=null),callAndCheck(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n,r){const[a,s]=getUnpackedMatrixTextureShapeWidthHeight(t,n),o=new Uint8Array(function getUnpackedArraySizeFromMatrixSize(e,t){return e*t}(t*n,4));return callAndCheck(e,(()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,o))),new Float32Array(o.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return downloadPackedMatrixFromBuffer(this.gl,e,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function downloadFloat32MatrixFromBuffer(e,t,n){const r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function createBufferFromOutputTexture(e,t,n,r){const a=e.createBuffer();callAndCheck(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));const s=16*t*n;return callAndCheck(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),callAndCheck(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),callAndCheck(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Object(s.Ld)().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else Object(s.Ld)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Object(s.Ld)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function downloadMatrixFromPackedOutputTexture(e,t,n){const r=new Float32Array(t*n*4);return callAndCheck(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=createFragmentShader(t,e),r=gpgpu_util_createVertexShader(t),a=function createProgram(e){return throwIfNull(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return callAndCheck(t,(()=>t.attachShader(a,r))),callAndCheck(t,(()=>t.attachShader(a,n))),function linkProgram(e,t){if(callAndCheck(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,a),this.debug&&validateProgram(t,a),this.vertexAttrsAreBound||(this.setProgram(a),this.vertexAttrsAreBound=function bindVertexProgramAttributeStreams(e,t,n){return callAndCheck(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),bindVertexBufferToProgramAttribute(e,t,"clipSpacePos",n,3,20,0)&&bindVertexBufferToProgramAttribute(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),a}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&callAndCheck(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&validateProgram(this.gl,this.program),callAndCheck(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function getProgramUniformLocationOrThrow(e,t,n){return throwIfNull(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function getProgramUniformLocation(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),callAndCheck(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),bindTextureToProgramUniformSampler(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,a]=getPackedMatrixTextureShapeWidthHeight(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&validateProgram(this.gl,this.program),validateFramebuffer(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),callAndCheck(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),callAndCheck(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=getExtensionOrThrow(this.gl,2===Object(s.Ld)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Object(s.Ld)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Object(s.Ld)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await s.of.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,Object(s.Ld)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Object(s.Ld)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function linearSearchLastTrue(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||s.of.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),bindColorTextureToFramebuffer(this.gl,e,this.framebuffer),this.debug&&validateFramebuffer(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(bindColorTextureToFramebuffer(this.gl,this.outputTexture,this.framebuffer),this.debug&&validateFramebuffer(this.gl)):unbindColorTextureFromFramebuffer(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;bindColorTextureToFramebuffer(r,e,this.framebuffer),this.debug&&validateFramebuffer(r),this.outputTexture=e,callAndCheck(r,(()=>r.viewport(0,0,t,n))),callAndCheck(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),callAndCheck(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{getBroadcastDims:xc}=s.md;function makeShader(e,t,n,r){const a=[];e.forEach((e=>{const t=s.of.sizeFromShape(e.shapeInfo.logicalShape);e.shapeInfo.isUniform?a.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(a.push(`uniform sampler2D ${e.name};`),a.push(`uniform int offset${e.name};`))}));const o=a.join("\n"),i=e.map((e=>function getInputSamplingSnippet(e,t,n=!1){let r="";r+=n?getPackedSamplerFromInInfo(e):getSamplerFromInInfo(e);const a=e.shapeInfo.logicalShape,o=t.logicalShape;a.length<=o.length&&(r+=n?function getPackedSamplerAtOutputCoords(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",o=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,u=xc(e.shapeInfo.logicalShape,t.logicalShape),c=getCoordsDataType(i),l=i-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":i<2&&u.length>=1?"coords = 0;":u.map((e=>`coords.${p[e+l]} = 0;`)).join("\n");let h="";h=i<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+l]}`)).join(", ");let f="return outputValue;";const m=1===s.of.sizeFromShape(e.shapeInfo.logicalShape),g=1===s.of.sizeFromShape(t.logicalShape);if(1!==o||m||g){if(m&&!g)f=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(u.length){const e=o-2,t=o-1;u.indexOf(e)>-1&&u.indexOf(t)>-1?f="return vec4(outputValue.x);":u.indexOf(e)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":u.indexOf(t)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${c} coords = getOutputCoords();\n      ${d}\n      vec4 outputValue = get${r}(${h});\n      ${f}\n    }\n  `}(e,t):function getSamplerAtOutputCoords(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",o=t.texShape,i=e.shapeInfo.texShape,u=e.shapeInfo.logicalShape.length,c=t.logicalShape.length;if(!e.shapeInfo.isUniform&&u===c&&null==e.shapeInfo.flatOffset&&s.of.arraysEqual(i,o))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=getCoordsDataType(c),d=xc(e.shapeInfo.logicalShape,t.logicalShape),p=c-u;let h;const f=["x","y","z","w","u","v"];h=0===u?"":c<2&&d.length>=1?"coords = 0;":d.map((e=>`coords.${f[e+p]} = 0;`)).join("\n");let m="";m=c<2&&u>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${f[t+p]}`)).join(", ");return`\n    float ${a}() {\n      ${l} coords = getOutputCoords();\n      ${h}\n      return get${r}(${m});\n    }\n  `}(e,t));return r}(e,t,r))).join("\n"),u=t.texShape,c=getGlslDifferences(),l=function getFloatTextureSampleSnippet(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(c);let d,p,h=function getShaderPrefix(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${vc}\n    ${kc}\n    ${wc}\n  `}(c);t.isPacked?(d=function getPackedOutputSamplingSnippet(e,t){switch(e.length){case 0:return getOutputScalarCoords();case 1:return function getOutputPacked1DCoords(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===n[0])return`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `;if(1===n[1])return`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `;return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,t);case 2:return function getOutputPacked2DCoords(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(s.of.arraysEqual(e,t))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const r=Math.ceil(e[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function getOutputPacked3DCoords(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),a=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t);default:return function getOutputPackedNDCoords(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2);let s=a,o="",i="b, r, c";for(let u=2;u<e.length-1;u++)s*=e[e.length-u-1],o=`\n      int b${u} = index / ${s};\n      index -= b${u} * ${s};\n    `+o,i=`b${u}, `+i;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${i});\n    }\n  `}(e,t)}}(t.logicalShape,u),p=function getFloatTextureSetRGBASnippet(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(c)):(d=function getOutputSamplingSnippet(e,t){switch(e.length){case 0:return getOutputScalarCoords();case 1:return function getOutput1DCoords(e,t){if(1===t[0])return`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `;if(1===t[1])return`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `;return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t);case 2:return function getOutput2DCoords(e,t){if(s.of.arraysEqual(e,t))return`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `;if(1===e[1])return`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;if(1===e[0])return`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function getOutput3DCoords(e,t){const n=getLogicalCoordinatesFromFlatIndex(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(e,t);case 4:return function getOutput4DCoords(e,t){const n=getLogicalCoordinatesFromFlatIndex(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t);case 5:return function getOutput5DCoords(e,t){const n=getLogicalCoordinatesFromFlatIndex(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function getOutput6DCoords(e,t){const n=getLogicalCoordinatesFromFlatIndex(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,u),p=function getFloatTextureSetRSnippet(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(c)),r&&(h+=Oc);return[h,l,p,o,d,i,n].join("\n")}function getSamplerFromInInfo(e){const t=e.shapeInfo.logicalShape;switch(t.length){case 0:return function getSamplerScalar(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;const[r,a]=e.shapeInfo.texShape;if(1===r&&1===a)return`\n      float ${n}() {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const[s,o]=e.shapeInfo.texShape,i=getFlatOffsetUniformName(t);return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${s}, ${o}, ${i});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 1:return function getSampler1D(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${getUniformSampler(e)}\n      }\n    `;const r=e.shapeInfo.texShape,a=r[0],s=r[1];if(1===s&&1===a)return`\n      float ${n}(int index) {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const o=getFlatOffsetUniformName(t);if(1===s)return`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${a}.0);\n        return sampleTexture(${t}, uv);\n      }\n    `;if(1===a)return`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${s}.0, 0.5);\n        return sampleTexture(${t}, uv);\n      }\n    `;return`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${s}, index + ${o});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 2:return function getSampler2D(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape;if(null!=a&&s.of.arraysEqual(t,a)){const e=a[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${e}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:o,keptDims:i}=s.of.squeezeShape(t),u=o;if(u.length<t.length){const t=["row","col"];return`\n      ${getSamplerFromInInfo(squeezeInputInfo(e,u))}\n      float ${r}(int row, int col) {\n        return ${r}(${getSqueezedParams(t,i)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));\n        ${getUniformSampler(e)}\n      }\n    `;const c=a[0],l=a[1],d=getFlatOffsetUniformName(n);if(1===l)return`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${d}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;if(1===c)return`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${d}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${t[1]} + col + ${d};\n    vec2 uv = uvFromFlat(${c}, ${l}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(e);case 3:return function getSampler3D(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[1]*t[2],o=t[2],{newShape:i,keptDims:u}=s.of.squeezeShape(t),c=i;if(c.length<t.length){const t=["row","col","depth"];return`\n        ${getSamplerFromInInfo(squeezeInputInfo(e,c))}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${getSqueezedParams(t,u)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${o}, 1)));\n        ${getUniformSampler(e)}\n      }\n    `;const l=e.shapeInfo.texShape,d=l[0],p=l[1],h=e.shapeInfo.flatOffset;if(p===a&&null==h)return`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${o}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${p}.0, ${d}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(p===o&&null==h)return`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${d}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;const f=getFlatOffsetUniformName(n);return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${o} + depth + ${f};\n        vec2 uv = uvFromFlat(${d}, ${p}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(e);case 4:return function getSampler4D(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[3],o=t[2]*a,i=t[1]*o,{newShape:u,keptDims:c}=s.of.squeezeShape(t);if(u.length<t.length){const t=["row","col","depth","depth2"];return`\n      ${getSamplerFromInInfo(squeezeInputInfo(e,u))}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${getSqueezedParams(t,c)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${i}, ${o}, ${a}, 1)));\n        ${getUniformSampler(e)}\n      }\n    `;const l=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],h=d[1];if(h===i&&null==l)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${o}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${h}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(h===a&&null==l)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${t[1]*t[2]}, ${t[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${h}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const f=getFlatOffsetUniformName(n);return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${o} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${p}, ${h}, index + ${f});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 5:return function getSampler5D(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],o=t[3]*a,i=t[2]*o,u=t[1]*i,{newShape:c,keptDims:l}=s.of.squeezeShape(t);if(c.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${getSamplerFromInInfo(squeezeInputInfo(e,c))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${getSqueezedParams(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${u}, ${i}, ${o}, ${a})) +\n          depth3;\n        ${getUniformSampler(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,h=p[0],f=p[1];if(f===u&&null==d)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${o}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===a&&null==d)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const m=getFlatOffsetUniformName(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${u} + col * ${i} + depth * ${o} +\n          depth2 * ${a} + depth3 + ${m};\n      vec2 uv = uvFromFlat(${h}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function getSampler6D(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:o}=s.of.squeezeShape(t);if(a.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${getSamplerFromInInfo(squeezeInputInfo(e,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${getSqueezedParams(t,o)});\n      }\n    `}const i=t[5],u=t[4]*i,c=t[3]*u,l=t[2]*c,d=t[1]*l;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${d}, ${l}, ${c}, ${u})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${getUniformSampler(e)}\n      }\n    `;const p=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,f=h[0],m=h[1];if(m===d&&null==p)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${c}, ${u}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(m===i&&null==p)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const g=getFlatOffsetUniformName(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${d} + col * ${l} + depth * ${c} +\n          depth2 * ${u} + depth3 * ${i} + depth4 + ${g};\n      vec2 uv = uvFromFlat(${f}, ${m}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function getPackedSamplerFromInInfo(e){switch(e.shapeInfo.logicalShape.length){case 0:return function getPackedSamplerScalar(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=getGlslDifferences();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function getPackedSampler1D(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e.shapeInfo.texShape,a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],s=getGlslDifferences();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${a[0]}, ${a[1]}, index);\n      return ${s.texture2D}(${t}, uv);\n    }\n  `}(e);case 2:return function getPackedSampler2D(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,o=a[0],i=a[1],u=getGlslDifferences();if(null!=a&&s.of.arraysEqual(t,a))return`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${o}.0);\n\n        return ${u.texture2D}(${n}, uv);\n      }\n    `;const c=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],l=Math.ceil(t[1]/2);return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${l}, ${c[0]}, ${c[1]}, row, col);\n      return ${u.texture2D}(${n}, uv);\n    }\n  `}(e);case 3:return function getPackedSampler3D(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===t[0]){const n=[1,2],a=["b","row","col"];return`\n        ${getPackedSamplerFromInInfo(squeezeInputInfo(e,t.slice(1)))}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${getSqueezedParams(a,n)});\n        }\n      `}const o=s[0],i=s[1],u=Math.ceil(t[2]/2),c=u*Math.ceil(t[1]/2),l=getGlslDifferences();return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${o}, ${i}, ${c}, ${u}, b, row, col);\n      return ${l.texture2D}(${n}, uv);\n    }\n  `}(e);default:return function getPackedSamplerND(e){const t=e.shapeInfo.logicalShape,n=t.length,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,o=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],i=o[0],u=o[1],c=Math.ceil(t[n-1]/2);let l=c*Math.ceil(t[n-2]/2),d="int b, int row, int col",p=`b * ${l} + (row / 2) * ${c} + (col / 2)`;for(let f=2;f<n-1;f++)d=`int b${f}, `+d,l*=t[n-f-1],p=`b${f} * ${l} + `+p;const h=getGlslDifferences();return`\n    vec4 ${a}(${d}) {\n      int index = ${p};\n      int texR = index / ${u};\n      int texC = index - texR * ${u};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${i});\n      return ${h.texture2D}(${r}, uv);\n    }\n  `}(e)}}const vc="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",kc="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",wc="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Oc="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function getOutputScalarCoords(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function getFlatOffsetUniformName(e){return`offset${e}`}function getUniformSampler(e){const t=e.name,n=s.of.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function getCoordsDataType(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function squeezeInputInfo(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function getSqueezedParams(e,t){return t.map((t=>e[t])).join(", ")}function validateBinaryAndProgram(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,a=t[n],o=a.shape;if(!s.of.arraysEqual(r,o))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${o} must match`);if(e.isUniform&&a.isUniform)return;const i=e.texShape,u=a.isUniform?null:a.texData.texShape;if(!s.of.arraysEqual(i,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${u} must match`)}))}const{addImpl:_c,bincountImpl:Ic,bincountReduceImpl:Sc,ceilImpl:Nc,concatImpl:Cc,expImpl:Tc,expm1Impl:Ac,floorImpl:Ec,gatherV2Impl:jc,greaterImpl:Rc,lessImpl:$c,linSpaceImpl:Fc,logImpl:Dc,maxImpl:zc,maximumImpl:Pc,minimumImpl:Lc,multiplyImpl:Mc,negImpl:Bc,prodImpl:Vc,rangeImpl:Wc,rsqrtImpl:Uc,simpleAbsImpl:Gc,sliceImpl:Hc,stridedSliceImpl:Kc,subImpl:qc,tileImpl:Xc,topKImpl:Jc,transposeImpl:Yc,uniqueImpl:Zc}=a;function getVecChannels(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function getChannels(e,t){return 1===t?[e]:getVecChannels(e,t)}class pack_gpu_PackProgram{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=getChannels("rc",t),r=getCoordsDataType(t),a=function getOutOfBoundsCondition(e,t,n){if(1===e)return`rc > ${t[0]}`;let r="";for(let a=e-2;a<e;a++)r+=`${n[a]} >= ${t[a]}`,a<e-1&&(r+="||");return r}(t,e,n),s=function getSetup(e,t,n,r){if(1===e)return"";const a=r.slice(-2);return`\n    int r = ${a[0]};\n    int c = ${a[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}(t,e[e.length-1],e[e.length-2],n),o=function getOutput(e,t){const n=e.length,r=function getSourceCoordsArr(e,t){const n=[];for(let r=0;r<=1;r++)for(let a=0;a<=1;a++){let s=`${0===r?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let n=2;n<e;n++)s=`${t[t.length-1-n]},`+s;n.push(s)}return n}(n,t);if(1===n)return`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`;return`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(e,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${a}) {\n            setOutput(vec4(0));\n          } else {\n            ${s}\n\n            setOutput(vec4(${o}));\n          }\n        }\n      `}}}class reshape_packed_gpu_ReshapePackedProgram{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let n="";for(let r=0;r<4;r++){let e="thisRC = rc;";r%2==1&&(e+="thisRC.z += 1;"),r>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${r}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${r>0?"}":""}\n      `}this.userCode=`\n      ${function getReshapedInputCoords(e){return`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${getLogicalCoordinatesFromFlatIndex(["r","c","d"],e)}\n      return ivec3(r, c, d);\n    }\n  `}(t)}\n      ${getFlatIndexFrom3D(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${e[1]};\n        int cols = ${e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class texture_manager_TextureManager{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=getPhysicalFromLogicalTextureType(t,n),a=getKeyFromTextureShape(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const s=computeBytes(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}let o;return r===hc.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===hc.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===hc.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===hc.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===hc.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(o),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),o}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const a=getPhysicalFromLogicalTextureType(n,r),o=getKeyFromTextureShape(t,a,r);o in this.freeTextures||(this.freeTextures[o]=[]);const i=computeBytes(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),u=Object(s.Ld)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==u&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=i):(this.freeTextures[o].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const c=this.usedTextures[o],l=c.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c.splice(l,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function computeBytes(e,t,n,r,a){const s=function internalFormatForPhysicalTexType(e,t){switch(e){case hc.PACKED_2X2_FLOAT32:return getInternalFormatForPackedMatrixTexture(t);case hc.PACKED_2X2_FLOAT16:return getInternalFormatForFloat16PackedMatrixTexture(t);case hc.UNPACKED_FLOAT32:return getInternalFormatForFloat32MatrixTexture(t);case hc.UNPACKED_FLOAT16:return getInternalFormatForFloat16MatrixTexture(t);case hc.PACKED_4X1_UNSIGNED_BYTE:return getInternalFormatForUnsignedBytesMatrixTexture(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let o;if(a){const[t,n]=getPackedMatrixTextureShapeWidthHeight(e[0],e[1]);o=t*n}else{const[t,n]=getUnpackedMatrixTextureShapeWidthHeight(e[0],e[1]);o=t*n}return o*function numBytesForInternalFormat(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}(n,s)}function getPhysicalFromLogicalTextureType(e,t){if(e===pc.UPLOAD)return hc.PACKED_2X2_FLOAT32;if(e===pc.RENDER||null==e)return function getPhysicalTextureForRendering(e){return Object(s.Ld)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?hc.PACKED_2X2_FLOAT32:hc.UNPACKED_FLOAT32:e?hc.PACKED_2X2_FLOAT16:hc.UNPACKED_FLOAT16}(t);if(e===pc.DOWNLOAD||e===pc.PIXELS)return hc.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function getKeyFromTextureShape(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class UnaryOpProgram{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const Qc="return abs(x);";const el="return x;";class UnaryOpPackedProgram{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class unpack_gpu_UnpackProgram{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=getChannels("rc",t),r=getCoordsDataType(t),a=function getSourceCoords(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),o=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${o}));\n      }\n    `}}const tl=s.Zd.whereImpl,nl={};class backend_webgl_MathBackendWebGL extends s.vb{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!Object(s.Ld)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=getWebGLContext(Object(s.Ld)().getNumber("WEBGL_VERSION"));this.binaryCache=function getBinaryCache(e){return e in nl||(nl[e]={}),nl[e]}(Object(s.Ld)().getNumber("WEBGL_VERSION")),this.gpgpu=new gpgpu_context_GPGPUContext(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;this.textureManager=new texture_manager_TextureManager(this.gpgpu),this.numMBBeforeWarning=function numMBBeforeWarning(){return null==Object(s.Ld)().global.screen?1024:Object(s.Ld)().global.screen.height*Object(s.Ld)().global.screen.width*window.devicePixelRatio*600/1024/1024}(),this.texData=new s.L(this,Object(s.Kd)())}nextDataId(){return backend_webgl_MathBackendWebGL.nextDataId++}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(e,t,n){if((Object(s.Ld)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Object(s.Ld)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:pc.UPLOAD,refCount:1}),r}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,r,a){if(Object(s.Ld)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:pc.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:o,shape:i,isPacked:u}=t;if(null!=o){let t;t=u?new UnaryOpPackedProgram(i,el):new UnaryOpProgram(i,el);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const c=null!=this.activeTimers;let l,d;if(c&&(l=s.of.now()),"complex64"===r){const e=this.readSync(a.real.dataId),t=this.readSync(a.imag.dataId);d=s.md.mergeRealAndImagArrays(e,t)}else d=this.getValuesFromTexture(e);return c&&(this.downloadWaitMs+=s.of.now()-l),this.convertAndCacheOnCPU(e,d)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:o,complexTensorInfos:i,isPacked:u}=t;if(null!=a){let t;t=u?new UnaryOpPackedProgram(r,el):new UnaryOpProgram(r,el);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:o}],o),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(!Object(s.Ld)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Object(s.Ld)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c,l,d=null;if("complex64"!==o&&Object(s.Ld)().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(e);const t=this.texData.get(c.dataId);d=this.gpgpu.createBufferFromTexture(t.texture,...getDenseTexShape(r))}if(this.pendingRead.set(e,[]),"complex64"!==o&&await this.gpgpu.createAndWaitForFence(),"complex64"===o){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),t=e[0],n=e[1];l=s.md.mergeRealAndImagArrays(t,n)}else if(null==d)l=this.getValuesFromTexture(e);else{const e=s.of.sizeFromShape(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(d,e)}null!=c&&this.disposeIntermediateTensorInfo(c);const p=this.convertAndCacheOnCPU(e,l),h=this.pendingRead.get(e);return this.pendingRead.delete(e),h.forEach((e=>e(p))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Object(s.Kd)().removeDataId(e,this),this.pendingDeletes--),p}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>s.of.decodeString(e)))}catch(r){throw new Error("Failed to decode encoded string bytes into utf-8")}return Object(s.rd)(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!canBeRepresented(n)){if(Object(s.Ld)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=s.of.sizeFromShape(t);if(Object(s.Ld)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...getDenseTexShape(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}const o=Object(s.Ld)().getBool("WEBGL_PACK")&&!0===r,i=o?getShapeAs3D(t):t,u=o?new encode_float_packed_gpu_EncodeFloatPackedProgram(i):new encode_float_gpu_EncodeFloatProgram(i),c=this.runWebGLProgram(u,[{shape:i,dtype:n,dataId:e}],"float32"),l=this.texData.get(c.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture,l.texShape[0],l.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(c),d}timerAvailable(){return Object(s.Ld)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const a=s.of.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),o=s.of.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Object(s.Ld)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(a);i.kernelMs=s.of.sum(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:o[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Object(s.Ld)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:s.of.now(),endMs:null}}endTimer(e){return Object(s.Ld)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=s.of.now(),e)}async getQueryTime(e){if(Object(s.Ld)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:o}=this.texData.get(e),i=o&&o.origDataId||e,u=this.dataRefCount.get(i);u>1?this.dataRefCount.set(i,u-1):(this.dataRefCount.delete(i),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));const c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}getCPUBackend(){return Object(s.Ld)().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=Object(s.Kd)().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(e,t=128){const n=this.getCPUBackend();return Object(s.Ld)().getBool("IS_TEST")||this.warnedAboutCPUBackend||null!=n||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&e.every((e=>null==this.texData.get(e.dataId).texture&&s.of.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){s.md.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return tl(e.shape,t)}packedUnaryOp(e,t,n){const r=new UnaryOpPackedProgram(e.shape,t),a=this.compileAndRun(r,[e],n);return Object(s.Kd)().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=Gc(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Object(s.Ld)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Qc,e.dtype);const t=new UnaryOpProgram(e.shape,Qc),n=this.compileAndRun(t,[e]);return Object(s.Kd)().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&s.of.isString(n[0])){const a=n.map((e=>s.of.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return Object(s.Kd)().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new unpack_gpu_UnpackProgram(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new pack_gpu_PackProgram(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[getBatchDim(e.shape),...getRowsCols(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[getBatchDim(t),...getRowsCols(t)],s=new reshape_packed_gpu_ReshapePackedProgram(a,n),o=this.runWebGLProgram(s,[r],e.dtype,null,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:r,dtype:a}=t,s=getShapeAs3D(r);let o;o=n?new decode_matrix_packed_gpu_DecodeMatrixPackedProgram(s):new decode_matrix_gpu_DecodeMatrixProgram(s);return{dtype:a,shape:r,dataId:this.runWebGLProgram(o,[{shape:s,dtype:a,dataId:e}],a,null,!0).dataId}}runWebGLProgram(e,t,n,r,a=!1){const o=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(o.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===dc.DENSE){const t=getDenseTexShape(e.outputShape);i.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===s.of.sizeFromShape(o.shape))return i.values=s.of.getTypedArrayFromDType(o.dtype,0),o;const u=[],c=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&s.of.sizeFromShape(t.shape)<=Object(s.Ld)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!isReshapeFree(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),u.push(t),n=this.texData.get(t.dataId),e.shape=r}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(o.dataId);const l={shape:o.shape,texData:i,isUniform:!1},d=function makeShaderKey(e,t,n){let r="";t.concat(n).forEach((e=>{const t=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0,n=e.isUniform?"uniform":e.texData.texShape;r+=`${e.shape}_${n}_${t}`}));const a=e.userCode;let s=e.constructor.name;return s+="_"+r+"_"+a,s}(e,c,l),p=this.getAndSaveBinary(d,(()=>function compileProgram(e,t,n,r){const a=t.userCode,o=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),i=o.map((e=>e.shapeInfo)),u={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},c=makeShader(o,u,a,t.packedInputs),l=e.createProgram(c);let d=null;const p=e.getUniformLocation(l,"NAN",!1);1===Object(s.Ld)().getNumber("WEBGL_VERSION")&&(d=e.getUniformLocation(l,"INFINITY",!1));const h={};for(let s=0;s<t.variableNames.length;s++){const n=t.variableNames[s],r=!1;h[n]=e.getUniformLocation(l,n,r),h[`offset${n}`]=e.getUniformLocation(l,`offset${n}`,r)}return{program:t,source:c,webGLProgram:l,uniformLocations:h,inShapeInfos:i,outShapeInfo:u,infLoc:d,nanLoc:p}}(this.gpgpu,e,c,l))),h=null!=this.activeTimers;let f;h&&(f=this.startTimer()),function runProgram(e,t,n,r,a){validateBinaryAndProgram(t.inShapeInfos,n),validateBinaryAndProgram([t.outShapeInfo],[r]);const o=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(o,i[0],i[1]):e.setOutputMatrixTexture(o,i[0],i[1]),e.setProgram(t.webGLProgram),1===Object(s.Ld)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{const a=t.program.variableNames[r],o=t.uniformLocations[a],i=t.uniformLocations[`offset${a}`];if(null!=o)if(n.isUniform)if(s.of.sizeFromShape(n.shape)<2)e.gl.uniform1f(o,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(o,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,o,r)})),null!=a&&a(e,t.webGLProgram),e.executeProgram()}(this.gpgpu,p,c,l,r),u.forEach((e=>this.disposeIntermediateTensorInfo(e))),h&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=Object(s.Ld)().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=s.of.now();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Object(s.Ld)().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===a){const e=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),e}return o}compileAndRun(e,t,n,r,a=!1){n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!Object(s.Ld)().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Object(s.hf)((()=>{if(!Object(s.Ld)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Object(s.Ld)().getBool("DEBUG");Object(s.Ld)().set("DEBUG",!1);const t=this.abs(Object(s.Ge)(1e-8)).dataSync()[0];if(Object(s.Ld)().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:o,usage:i,isPacked:u}=t;if(null!=o)return;const c=null!=this.activeTimers;let l;c&&(l=s.of.now());let d=t.texShape;if(null==d&&(d=function getTextureShapeFromLogicalShape(e,t=!1){let n=Object(s.Ld)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?s.of.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=s.of.squeezeShape(e);e=t.newShape}let r=s.of.sizeFromShape(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=getBatchDim(e);let n=2,a=2;return e.length&&([n,a]=getRowsCols(e)),r=t*(n/2)*(a/2),s.of.sizeToSquarishShape(r).map((e=>2*e))}return s.of.sizeToSquarishShape(r)}(n,u),t.texShape=d),null!=a){const e=getShapeAs3D(n);let o,i=d[1],p=d[0];const h=a instanceof Uint8Array;u?([i,p]=getPackedMatrixTextureShapeWidthHeight(d[0],d[1]),o=new encode_matrix_packed_gpu_EncodeMatrixPackedProgram(e,[p,i],h)):o=new encode_matrix_gpu_EncodeMatrixProgram(e,[p,i],h);const f=this.makeTensorInfo([p,i],r);this.texData.get(f.dataId).usage=h?pc.PIXELS:pc.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,p,a);const m=!0,g=this.runWebGLProgram(o,[f],r,null,m),b=this.texData.get(g.dataId);t.texture=b.texture,t.texShape=b.texShape,t.isPacked=b.isPacked,t.usage=b.usage,this.disposeIntermediateTensorInfo(f),this.texData.delete(g.dataId),t.values=null,c&&(this.uploadWaitMs+=s.of.now()-l)}else{const e=this.acquireTexture(d,i,r,u);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function float32ToTypedArray(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*s.of.bytesPerElement(t)}}backend_webgl_MathBackendWebGL.nextDataId=0;s.Fd.isBrowser()&&Object(s.Be)("webgl",(()=>new backend_webgl_MathBackendWebGL),2);class binaryop_gpu_BinaryOpProgram{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=s.md.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class binaryop_packed_gpu_BinaryOpPackedProgram{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s.md.assertAndGetBroadcastShape(t,n);const a=this.outputShape.length;let o="";if(r)if(0===a||1===s.of.sizeFromShape(this.outputShape))o="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(o=`\n          ${getCoordsDataType(a)} coords = getOutputCoords();\n        `,1===a)o+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=getChannels("coords",a);o+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${o}\n\n        setOutput(result);\n      }\n    `}}function kernels_Identity_identity(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const rl={kernelName:s.qb,backendName:"webgl",kernelFunc:kernels_Identity_identity};function kernels_Complex_complex(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),o=n.texData.get(s.dataId),i=kernels_Identity_identity({inputs:{x:r},backend:n}),u=kernels_Identity_identity({inputs:{x:a},backend:n});return o.complexTensorInfos={real:i,imag:u},s}const al={kernelName:s.y,backendName:"webgl",kernelFunc:kernels_Complex_complex},sl="return (a < 0.) ? b * a : a;",ol="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const il={kernelName:s.yb,backendName:"webgl",kernelFunc:function LeakyRelu_leakyRelu(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:o}=r,i=n.makeTensorInfo([],"float32",s.of.createScalarValue(o,"float32")),u=Object(s.Ld)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new binaryop_packed_gpu_BinaryOpPackedProgram(ol,a.shape,i.shape):new binaryop_gpu_BinaryOpProgram(sl,a.shape,i.shape),c=n.runWebGLProgram(u,[a,i],a.dtype);return n.disposeIntermediateTensorInfo(i),c}},ul="return (a < 0.) ? b * a : a;",cl="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const ll={kernelName:s.gc,backendName:"webgl",kernelFunc:function kernels_Prelu_prelu(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,o=Object(s.Ld)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new binaryop_packed_gpu_BinaryOpPackedProgram(cl,r.shape,a.shape):new binaryop_gpu_BinaryOpProgram(ul,r.shape,a.shape);return n.runWebGLProgram(o,[r,a],r.dtype)}};function kernel_funcs_utils_unaryKernelFunc({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:o})=>{const{x:i}=a,u=o,c=r||i.dtype;if(u.shouldExecuteOnCPU([i])&&null!=n){const e=u.texData.get(i.dataId),t=n(e.values,c);return u.makeTensorInfo(i.shape,c,t)}let l;return l=Object(s.Ld)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new UnaryOpPackedProgram(i.shape,t):new UnaryOpProgram(i.shape,e),u.runWebGLProgram(l,[i],c)}}function kernel_funcs_utils_binaryKernelFunc({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:o}){return({inputs:i,backend:u})=>{const{a:c,b:l}=i,d=u;if(r&&"complex64"===c.dtype){const t=d.texData.get(c.dataId),n=d.texData.get(l.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:c.shape},o={dataId:r.dataId,dtype:r.dtype,shape:l.shape},i=new binaryop_gpu_BinaryOpProgram(e,c.shape,l.shape);return d.runWebGLProgram(i,[a,o],Object(s.nf)(n.dtype,r.dtype))})),o=kernels_Complex_complex({inputs:{real:r,imag:a},backend:d});return d.disposeIntermediateTensorInfo(r),d.disposeIntermediateTensorInfo(a),o}const p=o||Object(s.nf)(c.dtype,l.dtype);if(d.shouldExecuteOnCPU([c,l])&&null!=a){const e=d.texData.get(c.dataId),t=d.texData.get(l.dataId),[n,r]=a(c.shape,l.shape,e.values,t.values,p),s=d.makeTensorInfo(r,p);return d.texData.get(s.dataId).values=n,s}let h;return h=Object(s.Ld)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new binaryop_packed_gpu_BinaryOpPackedProgram(t,c.shape,l.shape,n):new binaryop_gpu_BinaryOpProgram(e,c.shape,l.shape),d.runWebGLProgram(h,[c,l],p)}}function mapActivationToShaderProgram(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?cl:ul;if("leakyrelu"===e)return t?ol:sl;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class MatMulPackedProgram{constructor(e,t,n,r=!1,a=!1,s=!1,o=null,i=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const c=r?e[1]:e[2],l=Math.ceil(c/2),d=r?"i * 2, rc.y":"rc.y, i * 2",p=a?"rc.z, i * 2":"i * 2, rc.z",h=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";o&&(m=i?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${o}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${o}\n        }`:`vec4 activation(vec4 x) {\n          ${o}\n        }`,g="result = activation(result);");const b=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let y="rc.x",x="rc.x";e[0]<t[0]?y=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n\n      const float sharedDimension = ${l}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${l}; i++) {\n          int batchA = ${y};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${d});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${h[0]} * ${f[0]});\n          result += (${h[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${b}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}const dl="return areal * breal - aimag * bimag;",pl="return areal * bimag + aimag * breal;";class binaryop_complex_gpu_BinaryOpComplexProgram{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=s.md.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const hl="return a * b;";function kernels_Multiply_multiply(e){const{inputs:t,backend:n}=e,{a:r,b:a}=t,o=s.md.upcastType(r.dtype,a.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),s=new binaryop_complex_gpu_BinaryOpComplexProgram(dl,r.shape,a.shape),o=new binaryop_complex_gpu_BinaryOpComplexProgram(pl,r.shape,a.shape),i=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape}],u=n.runWebGLProgram(s,i,"float32"),c=n.runWebGLProgram(o,i,"float32"),l=kernels_Complex_complex({inputs:{real:u,imag:c},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),l}if(n.shouldExecuteOnCPU([r,a])){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),[s,i]=Mc(r.shape,a.shape,e.values,t.values,o),u=n.makeTensorInfo(i,o);return n.texData.get(u.dataId).values=s,u}let i;return i=Object(s.Ld)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new binaryop_packed_gpu_BinaryOpPackedProgram(hl,r.shape,a.shape):new binaryop_gpu_BinaryOpProgram(hl,r.shape,a.shape),n.runWebGLProgram(i,[r,a],o)}const fl={kernelName:s.Ub,backendName:"webgl",kernelFunc:kernels_Multiply_multiply};function kernels_Reshape_reshape(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:o}=r,i=n,u=s.of.sizeFromShape(a.shape),c=s.of.inferFromImplicitShape(o,u),l=s.of.sizeFromShape(c);s.of.assert(u===l,(()=>`The new shape (${c}) has ${l} elements and the old shape (${a.shape}) has ${u} elements. The new shape and old shape must have the same number of elements.`));const d=i.texData.get(a.dataId);return!d.isPacked||isReshapeFree(a.shape,c)||null!==d.texture&&isReshapeFree(d.shape,c)?(i.incRef(a.dataId),{dataId:a.dataId,shape:c,dtype:a.dtype}):function packedReshape(e,t,n){const r=[getBatchDim(e.shape),...getRowsCols(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[getBatchDim(t),...getRowsCols(t)],o=new reshape_packed_gpu_ReshapePackedProgram(s,r),i=n.runWebGLProgram(o,[a],e.dtype,null,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}(a,c,i)}const ml={kernelName:s.oc,backendName:"webgl",kernelFunc:kernels_Reshape_reshape};class mean_gpu_MeanProgram{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:o}=e;this.outputShape=[r,o];const i=4*Math.floor(n/4),u=n%4;let c="sumValue += dot(values, ones);";if(null!=t){const e=1/t;c=`sumValue += dot(values * ${s.of.isInt(e)?e.toPrecision(2):e}, ones);`}let l="";a%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${c}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===u}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${c}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${c}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${c}\n        }\n        setOutput(sumValue);\n      }\n    `}}class ReduceProgram{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let o="0.0",i="";"prod"===t?o="1.0":"min"===t?(o="1.0 / 1e-20",i="min"):"max"===t&&(o="-1.0 / 1e-20",i="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const c=4*Math.floor(n/4),l=n%4;let d=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${i}(values, minMaxValue);\n      }\n    `,p="vec4";"all"===t?(o="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===t&&(o="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let h="";a%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${o};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${h}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${o});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${c}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${c};\n        if (${1===l}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${2===l}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${3===l}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${d}\n        }\n        setOutput(${u});\n      }\n    `}}function reduce(e,t,n,r){const a=function getReductionStages(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=s.md.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let o=e;for(let s=0;s<a.length;s++){const{inSize:i,windowSize:u,outSize:c}=a[s];let l,d;l="mean"===n?0===s?new mean_gpu_MeanProgram({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:c},i):new mean_gpu_MeanProgram({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:c}):new ReduceProgram({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:c},n),d=o,o=r.runWebGLProgram(l,[o],t),d.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(d)}return o}class transpose_gpu_TransposeProgram{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;const r=getCoordsDataType(this.rank),a=function getSwitchedCoords(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let a=0;a<e.length;a++)r[e[a]]=n[a];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}class transpose_packed_gpu_TransposePackedProgram{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let c=0;c<n.length;c++)n[c]=e[t[c]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=getCoordsDataType(this.rank),a=getVecChannels("rc",this.rank),s=new Array(this.rank);for(let c=0;c<t.length;c++)s[t[c]]=a[c];const o=`vec2(${s.slice(-2).join()})`,i=`++${a[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${s.join()}), ${o})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${i}) {\n        result[1] = ${u};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${i}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function Transpose_impl_transposeImpl(e,t,n){const r=Object(s.Ld)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new transpose_packed_gpu_TransposePackedProgram(e.shape,t):new transpose_gpu_TransposeProgram(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function kernels_Sum_sum(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o,keepDims:i}=r;return function sumImpl(e,t,n,r){const a=t,o=e.shape.length,i=s.of.parseAxisParam(a,e.shape);let u=i;const c=s.md.getAxesPermutation(u,o),l=null!=c;let d=e;l&&(d=Transpose_impl_transposeImpl(e,c,r),u=s.md.getInnerMostAxes(u.length,o)),s.md.assertAxesAreInnerMostDims("sum",u,o);const[p,h]=s.md.computeOutAndReduceShapes(d.shape,u);let f=p;n&&(f=s.md.expandShapeToKeepDim(p,i));const m=s.of.sizeFromShape(h),g=kernels_Reshape_reshape({inputs:{x:d},attrs:{shape:[s.of.sizeFromShape(e.shape)/m,m]},backend:r}),b=reduce(g,Object(s.bf)(e.dtype),"sum",r),y=kernels_Reshape_reshape({inputs:{x:b},attrs:{shape:f},backend:r});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(b),l&&r.disposeIntermediateTensorInfo(d),y}(a,o,i,n)}const gl={kernelName:s.Qc,backendName:"webgl",kernelFunc:kernels_Sum_sum};function kernels_Transpose_transpose(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:s}=r,o=n,i=a.shape.length,u=new Array(i);for(let l=0;l<u.length;l++)u[l]=a.shape[s[l]];let c;if(o.shouldExecuteOnCPU([a])){const e=o.texData.get(a.dataId).values,t=Yc(e,a.shape,a.dtype,s,u);c=o.makeTensorInfo(u,a.dtype);o.texData.get(c.dataId).values=t}else c=Transpose_impl_transposeImpl(a,s,o);return c}const bl={kernelName:s.Yc,backendName:"webgl",kernelFunc:kernels_Transpose_transpose};function batchMatMulImpl({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:u=0,activation:c=null}){const l=e.shape.length,d=t.shape.length,p=n?e.shape[l-2]:e.shape[l-1],h=r?t.shape[d-1]:t.shape[d-2],f=n?e.shape[l-1]:e.shape[l-2],m=r?t.shape[d-2]:t.shape[d-1],g=e.shape.slice(0,-2),b=t.shape.slice(0,-2),y=s.of.sizeFromShape(g),x=s.of.sizeFromShape(b),v=y===x||1===y||1===x;s.of.assert(l>=2&&d>=2&&v,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${g}) and (${b}).`));const k=(y>x?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([f,m]);s.of.assert(p===h,(()=>`Error in matMul: inner shapes (${p}) and (${h}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const w=n?[y,p,f]:[y,f,p],O=r?[x,m,h]:[x,h,m],_=kernels_Reshape_reshape({inputs:{x:e},backend:a,attrs:{shape:w}}),I=kernels_Reshape_reshape({inputs:{x:t},backend:a,attrs:{shape:O}}),S=[_,I],N=Math.max(y,x),C=n?_.shape[1]:_.shape[2],T=null!=o,A=null!=i,E="leakyrelu"===c,j=null!=c?mapActivationToShaderProgram(c,!0):null;let R;if((1===f||1===m)&&C>1e3&&!1===(T||A||E||null!=j)){let e=_,t=I;n&&(e=kernels_Transpose_transpose({inputs:{x:_},backend:a,attrs:{perm:[0,2,1]}}),S.push(e)),r&&(t=kernels_Transpose_transpose({inputs:{x:I},backend:a,attrs:{perm:[0,2,1]}}),S.push(t));const s=1===m;let o=e;1!==m&&(o=kernels_Reshape_reshape({inputs:{x:e},backend:a,attrs:{shape:[N,C,1]}}),S.push(o));const i=1===m?2:1;let u=t;s&&(u=kernels_Reshape_reshape({inputs:{x:t},backend:a,attrs:{shape:[N,1,C]}}),S.push(u));const c=kernels_Multiply_multiply({inputs:{a:o,b:u},backend:a});R=kernels_Sum_sum({inputs:{x:c},backend:a,attrs:{axis:i,keepDims:!0}}),S.push(c)}else{const c=Object(s.nf)(e.dtype,t.dtype),l=new MatMulPackedProgram(w,O,[N,f,m],n,r,T,j,A,E),d=[_,I];if(null!=o&&d.push(o),A&&d.push(i),E){const e=a.makeTensorInfo([],"float32",s.of.createScalarValue(u,"float32"));d.push(e),S.push(e)}R=a.runWebGLProgram(l,d,c)}const $=kernels_Reshape_reshape({inputs:{x:R},backend:a,attrs:{shape:k}});S.push(R);for(const s of S)a.disposeIntermediateTensorInfo(s);return $}const yl={kernelName:s.dd,backendName:"webgl",kernelFunc:function _FusedMatMul_fusedMatMul(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:o,preluActivationWeights:i}=t,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=r;return batchMatMulImpl({a:a,b:s,transposeA:u,transposeB:c,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:d,activation:l})}},xl="return abs(x);";const vl={kernelName:s.a,backendName:"webgl",kernelFunc:function kernels_Abs_abs(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=Gc(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let a;return a=Object(s.Ld)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new UnaryOpPackedProgram(r.shape,xl):new UnaryOpProgram(r.shape,xl),n.runWebGLProgram(a,[r],r.dtype)}},kl=kernel_funcs_utils_unaryKernelFunc({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),wl={kernelName:s.b,backendName:"webgl",kernelFunc:kl},Ol=kernel_funcs_utils_unaryKernelFunc({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),_l={kernelName:s.c,backendName:"webgl",kernelFunc:Ol},Il="return a + b;",Sl=kernel_funcs_utils_binaryKernelFunc({opSnippet:Il,packedOpSnippet:Il,supportsComplex:!0,cpuKernelImpl:_c}),Nl={kernelName:s.d,backendName:"webgl",kernelFunc:Sl};class AddNProgram{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class AddNPackedProgram{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const Cl={kernelName:s.e,backendName:"webgl",kernelFunc:function AddN_addN(e){const{inputs:t,backend:n}=e,r=t;if(1===r.length)return kernels_Identity_identity({inputs:{x:r[0]},backend:n});if(r.length>Object(s.Ld)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(r.length/2),t=AddN_addN({inputs:r.slice(0,e),backend:n}),a=AddN_addN({inputs:r.slice(e),backend:n});return AddN_addN({inputs:[t,a],backend:n})}const a=r.map((e=>e.dtype)).reduce(((e,t)=>Object(s.nf)(e,t))),o=r.map((e=>e.shape)),i=Object(s.Ld)().getBool("WEBGL_PACK")?new AddNPackedProgram(r[0].shape,o):new AddNProgram(r[0].shape,o);return n.runWebGLProgram(i,r,a)}};const Tl={kernelName:s.f,backendName:"webgl",kernelFunc:function kernels_All_all(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o,keepDims:i}=r,u=a.shape.length,c=s.of.parseAxisParam(o,a.shape);let l=c;const d=s.md.getAxesPermutation(l,u);let p=a;null!=d&&(p=kernels_Transpose_transpose({inputs:{x:a},backend:n,attrs:{perm:d}}),l=s.md.getInnerMostAxes(l.length,u)),s.md.assertAxesAreInnerMostDims("all",l,u);const[h,f]=s.md.computeOutAndReduceShapes(p.shape,l),m=kernels_Reshape_reshape({inputs:{x:p},backend:n,attrs:{shape:[-1,s.of.sizeFromShape(f)]}}),g=reduce(m,m.dtype,"all",n);let b;if(i){b=kernels_Reshape_reshape({inputs:{x:g},backend:n,attrs:{shape:s.md.expandShapeToKeepDim(h,c)}})}else b=kernels_Reshape_reshape({inputs:{x:g},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(p),b}};const Al={kernelName:s.g,backendName:"webgl",kernelFunc:function kernels_Any_any(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o,keepDims:i}=r,u=a.shape.length,c=s.of.parseAxisParam(o,a.shape);let l=c;const d=s.md.getAxesPermutation(l,u);let p=a;null!=d&&(p=kernels_Transpose_transpose({inputs:{x:a},backend:n,attrs:{perm:d}}),l=s.md.getInnerMostAxes(l.length,u)),s.md.assertAxesAreInnerMostDims("any",l,u);const[h,f]=s.md.computeOutAndReduceShapes(p.shape,l),m=kernels_Reshape_reshape({inputs:{x:p},backend:n,attrs:{shape:[-1,s.of.sizeFromShape(f)]}}),g=reduce(m,m.dtype,"any",n);let b;if(i){b=kernels_Reshape_reshape({inputs:{x:g},backend:n,attrs:{shape:s.md.expandShapeToKeepDim(h,c)}})}else b=kernels_Reshape_reshape({inputs:{x:g},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(p),b}};class ArgMinMaxProgram{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];const o="max"===t?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${i};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${o} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class argminmax_packed_gpu_ArgMinMaxPackedProgram{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,s.of.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const a=e[e.length-1],o=Math.ceil(a/t);this.outputShape=e.slice(0,-1),o>1&&this.outputShape.push(o),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,u=i.length,c=getCoordsDataType(u),l=getChannels("coords",u);let d,p;if(1===o){p=u+1;const e=getCoordsDataType(p);d=`\n        ${e} sourceLocR = ${e}(${l.join()}, 0);\n        ++${l[u-1]};\n        ${e} sourceLocG = ${e}(${l.join()}, 0);\n        ++${l[u-2]};\n        ${e} sourceLocA = ${e}(${l.join()}, 0);\n        --${l[u-1]};\n        ${e} sourceLocB = ${e}(${l.join()}, 0);\n        --${l[u-2]};`}else p=u,d=`\n        ${c} sourceLocR = coords;\n        ++${l[u-1]};\n        ${c} sourceLocG = coords;\n        ++${l[u-2]};\n        ${c} sourceLocA = coords;\n        --${l[u-1]};\n        ${c} sourceLocB = coords;\n        --${l[u-2]};`;const h=["x","y","z","w","u","v"].slice(0,p),f="."+h[p-1],m=h.map((e=>"int "+e)),g=getChannels("sourceLocR",p-1).concat("inIdx.r"),b=getChannels("sourceLocG",p-1).concat("inIdx.g"),y=getChannels("sourceLocB",p-1).concat("inIdx.b"),x=getChannels("sourceLocA",p-1).concat("inIdx.a"),v="max"===n?"greaterThan":"lessThan",k=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${x.join()})));`,w=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${b.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,O=r?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${h.join()}),\n                                          vec2(${h.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${h.join()}),\n                               vec2(${h.slice(-2).join()}));\n      }\n      ${O}\n      void main() {\n        ${c} coords = getOutputCoords();\n        bool hasNextCol = ${l[u-1]} < ${i[u-1]-1};\n        bool hasNextRow = ${l[u-2]} < ${i[u-2]-1};\n        ${d}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${k}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function argReduce(e,t,n,r=null){let a=t.shape[0],o=t.shape[1];null!=r&&(a=r.shape[0],o=r.shape[1]);const i=s.md.computeOptimalWindowSize(o),u={windowSize:i,inSize:o,batchSize:a,outSize:Math.ceil(o/i)},c=new ArgMinMaxProgram(u,n,null==r),l=[t];null!=r&&l.push(r);const d=e.runWebGLProgram(c,l,"int32");if(1===d.shape[1])return d;const p=argReduce(e,t,n,d);return e.disposeIntermediateTensorInfo(d),p}function argReducePacked(e,t,n,r=null){const a=null!=r?r.shape:t.shape,o=a[a.length-1],i=s.md.computeOptimalWindowSize(o),u=new argminmax_packed_gpu_ArgMinMaxPackedProgram(a,i,n,null==r),c=null==r?[t]:[t,r],l=e.runWebGLProgram(u,c,"int32");if(l.shape.length===t.shape.length){const r=argReducePacked(e,t,n,l);return e.disposeIntermediateTensorInfo(l),r}return l}function argMinMaxReduce(e,t,n,r){const a=[n];if(s.md.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!Object(s.Ld)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],[o,i]=s.md.computeOutAndReduceShapes(t.shape,a),u=s.of.sizeFromShape(i),c=kernels_Reshape_reshape({inputs:{x:t},backend:e,attrs:{shape:[-1,u]}});n.push(c);const l=argReduce(e,c,r);n.push(l);const d=kernels_Reshape_reshape({inputs:{x:l},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return argReducePacked(e,t,r)}const El={kernelName:s.h,backendName:"webgl",kernelFunc:function ArgMax_argMax(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o}=r;let i=s.of.parseAxisParam(o,a.shape);const u=s.md.getAxesPermutation(i,a.shape.length);let c=a;const l=[];null!=u&&(c=kernels_Transpose_transpose({inputs:{x:a},backend:n,attrs:{perm:u}}),l.push(c),i=s.md.getInnerMostAxes(i.length,c.shape.length)),s.md.assertAxesAreInnerMostDims("argMax",[i[0]],c.shape.length);const d=argMinMaxReduce(n,c,i[0],"max");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}};const jl={kernelName:s.i,backendName:"webgl",kernelFunc:function ArgMin_argMin(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o}=r;let i=s.of.parseAxisParam(o,a.shape);const u=s.md.getAxesPermutation(i,a.shape.length);let c=a;const l=[];null!=u&&(c=kernels_Transpose_transpose({inputs:{x:a},backend:n,attrs:{perm:u}}),l.push(c),i=s.md.getInnerMostAxes(i.length,c.shape.length)),s.md.assertAxesAreInnerMostDims("argMin",[i[0]],c.shape.length);const d=argMinMaxReduce(n,c,i[0],"min");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},Rl=kernel_funcs_utils_unaryKernelFunc({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),$l={kernelName:s.j,backendName:"webgl",kernelFunc:Rl},Fl=kernel_funcs_utils_unaryKernelFunc({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),Dl={kernelName:s.k,backendName:"webgl",kernelFunc:Fl},zl=kernel_funcs_utils_unaryKernelFunc({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),Pl={kernelName:s.l,backendName:"webgl",kernelFunc:zl},Ll=kernel_funcs_utils_binaryKernelFunc({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Ml={kernelName:s.m,backendName:"webgl",kernelFunc:Ll},Bl=kernel_funcs_utils_unaryKernelFunc({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),Vl={kernelName:s.n,backendName:"webgl",kernelFunc:Bl};class Pool2DProgram{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,o=e.strideHeight,i=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,l=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let b="0.0";if(f||(b="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${o}, ${i});\n        const ivec2 pads = ivec2(${p}, ${h});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${l};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d};\n                wC += ${c}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:g:`wR * ${d} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let y=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(y="avgValue / count");const x=4*Math.floor(s/4),v=s%4,k=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${o}, ${i});\n      const ivec2 pads = ivec2(${p}, ${h});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${l};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${c};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              getValue(batch, xR, xC + 3 * ${c}, d)\n            );\n\n            ${k}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${k}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${k}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              initializationValue\n            );\n\n            ${k}\n          }\n        }\n        setOutput(${y});\n      }\n    `}}class Pool3DProgram{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,o=e.strideDepth,i=e.strideHeight,u=e.strideWidth,c=e.dilationDepth,l=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterDepth,h=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;const y="avg"===t;let x="0.0";if(y||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${o}, ${i}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${b});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${c}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${h};\n                wR += ${l}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${d}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / count");const k=4*Math.floor(s/4),w=s%4,O=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${o}, ${i}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${b});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${c}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h};\n            wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${k}; wC += 4) {\n              int xC = xCCorner + wC * ${d};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${d}, ch)\n              );\n\n              ${O}\n            }\n\n            int xC = xCCorner + ${k};\n            if (${1===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${O}\n            } else if (${2===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${O}\n            } else if (${3===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                initializationValue\n              );\n\n              ${O}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}}const Wl={kernelName:s.o,backendName:"webgl",kernelFunc:function AvgPool_avgPool(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;webgl_util_assertNotComplex(a,"avgPool");const{filterSize:o,strides:i,pad:u,dimRoundingMode:c}=r;s.of.assert(s.md.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=s.md.computePool2DInfo(a.shape,o,i,1,u,c);if(1===l.filterWidth&&1===l.filterHeight&&s.of.arraysEqual(l.inShape,l.outShape))return kernels_Identity_identity({inputs:{x:a},backend:n});const d=new Pool2DProgram(l,"avg",!1);return n.runWebGLProgram(d,[a],"float32")}};const Ul={kernelName:s.p,backendName:"webgl",kernelFunc:function AvgPool3D_avgPool3D(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:o,strides:i,pad:u,dimRoundingMode:c,dataFormat:l}=r,d=s.md.computePool3DInfo(a.shape,o,i,[1,1,1],u,c,l),p=new Pool3DProgram(d,"avg",!1);return n.runWebGLProgram(p,[a],"float32")}};class AvgPool2DBackpropProgram{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=i-1-e.padInfo.top,l=u-1-e.padInfo.left,d=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${c}, ${l});\n      const float avgMultiplier = float(${d});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${i};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${o}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class AvgPool3DBackpropProgram{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,l=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,h=l-1-e.padInfo.front,f=d-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${h}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${l};\n            wD += ${i}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${d};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${c}) {\n              float dyC = float(dyCCorner + wC) / ${o}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Gl={kernelName:s.q,backendName:"webgl",kernelFunc:function AvgPool3DGrad_avgPool3DGrad(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:o}=t,i=o,{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=r,p=s.md.computePool3DInfo(i.shape,u,c,[1,1,1],l,d),h=new AvgPool3DBackpropProgram(p);return n.runWebGLProgram(h,[a],i.dtype)}};const Hl={kernelName:s.r,backendName:"webgl",kernelFunc:function kernels_AvgPoolGrad_avgPoolGrad(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:o}=t,i=o;webgl_util_assertNotComplex([a,o],"avgPoolGrad");const{filterSize:u,strides:c,pad:l}=r,d=s.md.computePool2DInfo(i.shape,u,c,1,l),p=new AvgPool2DBackpropProgram(d);return n.runWebGLProgram(p,[a],i.dtype)}};const Kl={kernelName:s.s,backendName:"webgl",kernelFunc:function BatchMatMul_batchMatMul(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:o,transposeB:i}=r;return batchMatMulImpl({a:a,b:s,transposeA:o,transposeB:i,backend:n})}};class batchnorm_gpu_BatchNormProgram{constructor(e,t,n,r,a,o){this.outputShape=[],this.variableNames=["x","mean","variance"],s.md.assertAndGetBroadcastShape(e,t),s.md.assertAndGetBroadcastShape(e,n);let i="0.0";null!=r&&(s.md.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="1.0";null!=a&&(s.md.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${u};\n        float inv = scale * inversesqrt(variance + float(${o}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class batchnorm_packed_gpu_BatchNormPackedProgram{constructor(e,t,n,r,a,o){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],s.md.assertAndGetBroadcastShape(e,t),s.md.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=r&&(s.md.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="vec4(1.0)";null!=a&&(s.md.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${u};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${o}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const ql={kernelName:s.ib,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:a,variance:o,offset:i,scale:u}=e;s.of.assert(a.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),s.of.assert(null==i||a.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),s.of.assert(null==u||a.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:c}=n;null==c&&(c=.001);const l=[r,a,o];let d=null;null!=i&&(d=i.shape,l.push(i));let p=null;null!=u&&(p=u.shape,l.push(u));const h=Object(s.Ld)().getBool("WEBGL_PACK_NORMALIZATION")?new batchnorm_packed_gpu_BatchNormPackedProgram(r.shape,a.shape,o.shape,d,p,c):new batchnorm_gpu_BatchNormProgram(r.shape,a.shape,o.shape,d,p,c);return t.runWebGLProgram(h,l,l[0].dtype)}};class slice_gpu_SliceProgram{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=getCoordsDataType(this.rank),n=`uniform int start[${this.rank}];`,r=function getCoords(e){if(1===e)return"sourceLoc";if(e<=6)return Xl.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let a;a=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${Xl[t]} = start[${t}] + coords.${Xl[t]};`)).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${a}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}const Xl=["x","y","z","w","u","v"];class slice_packed_gpu_SlicePackedProgram{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;const t=getCoordsDataType(this.rank),n=getChannels("coords",this.rank),r=getChannels("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,o=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,i=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${o}\n        ${i}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}function kernels_Slice_slice(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:o,size:i}=r,[u,c]=s.Re.parseSliceParams(a,o,i);if(s.Re.assertParamsValid(a,u,c),0===s.of.sizeFromShape(c))return n.makeTensorInfo(c,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){const e=n.texData.get(a.dataId),t=Hc(e.values,u,c,a.shape,a.dtype);return n.makeTensorInfo(c,a.dtype,t)}const{isPacked:l}=n.texData.get(a.dataId),d=s.Re.isSliceContinous(a.shape,u,c);if(l||!d){const e=Object(s.Ld)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new slice_packed_gpu_SlicePackedProgram(c):new slice_gpu_SliceProgram(c),t=e.getCustomSetupFunc(u);return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function shallowSlice(e,t,n,r){const a=r.texData.get(e.dataId),o=r.makeTensorInfo(n,e.dtype),i=r.texData.get(o.dataId);Object.assign(i,a),i.refCount=1,i.shape=n,i.dtype=e.dtype;let u=s.Re.computeFlatOffset(t,s.of.computeStrides(e.shape));a.slice&&(u+=a.slice.flatOffset),i.slice={flatOffset:u,origDataId:a.slice&&a.slice.origDataId||e.dataId};const c=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,c+1),o}(a,u,c,n)}const Jl={kernelName:s.Ec,backendName:"webgl",kernelFunc:kernels_Slice_slice},Yl={kernelName:s.t,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:o,crops:i}=r;s.of.assert(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const u=o.reduce(((e,t)=>e*t)),c=s.md.getReshaped(a.shape,o,u),l=s.md.getPermuted(c.length,o.length),d=s.md.getReshapedPermuted(a.shape,o,u),p=s.md.getSliceBeginCoords(i,o.length),h=s.md.getSliceSize(d,i,o.length),f=[],m=kernels_Reshape_reshape({inputs:{x:a},backend:n,attrs:{shape:c}}),g=kernels_Transpose_transpose({inputs:{x:m},backend:n,attrs:{perm:l}}),b=kernels_Reshape_reshape({inputs:{x:g},backend:n,attrs:{shape:d}}),y=kernels_Slice_slice({inputs:{x:b},backend:n,attrs:{begin:p,size:h}});return f.push(m),f.push(g),f.push(b),f.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}};const Zl={kernelName:s.u,backendName:"webgl",kernelFunc:function kernels_Bincount_bincount(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:o}=r,i=n.readSync(a.dataId),u=n.readSync(s.dataId),c=Ic(i,u,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,c)}},Ql=kernel_funcs_utils_binaryKernelFunc({opSnippet:"return float(a != b);",dtype:"bool"}),ed={kernelName:s.Zb,backendName:"webgl",kernelFunc:Ql};function kernels_Real_real(e){const{inputs:t,backend:n}=e,{input:r}=t;return kernels_Identity_identity({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const td={kernelName:s.jc,backendName:"webgl",kernelFunc:kernels_Real_real};const nd={kernelName:s.v,backendName:"webgl",kernelFunc:function kernels_Cast_cast(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:o}=r;if("complex64"===o){if("complex64"===a.dtype)return kernels_Identity_identity({inputs:{x:a},backend:n});const e=s.tf(a.shape),t=kernels_Cast_cast({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=kernels_Complex_complex({inputs:{real:t,imag:e},backend:n});return e.dispose(),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){const e=kernels_Real_real({inputs:{input:a},backend:n}),t=kernels_Cast_cast({inputs:{x:e},backend:n,attrs:{dtype:o}});return n.disposeIntermediateTensorInfo(e),t}if(!s.of.hasEncodingLoss(a.dtype,o)){const e=kernels_Identity_identity({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:o}}if("int32"===o)return function int_int(e,t){const n=new UnaryOpProgram(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(a,n);if("bool"===o){const e=n.makeTensorInfo([],"bool",s.of.getTypedArrayFromDType("bool",1)),t=Ql({inputs:{a:a,b:e},backend:n});return n.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${o}`)}},rd="return ceil(x);",ad=kernel_funcs_utils_unaryKernelFunc({opSnippet:rd,packedOpSnippet:rd,cpuKernelImpl:Nc}),sd={kernelName:s.w,backendName:"webgl",kernelFunc:ad};class ClipProgram{constructor(e){this.variableNames=["A"],this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}class ClipPackedProgram{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}const od={kernelName:s.x,backendName:"webgl",kernelFunc:function clipByValue(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:o,clipValueMax:i}=r;let u;u=Object(s.Ld)().getBool("WEBGL_PACK_CLIP")?new ClipPackedProgram(a.shape):new ClipProgram(a.shape);const c=u.getCustomSetupFunc(o,i);return n.runWebGLProgram(u,[a],a.dtype,c)}};class ComplexAbsProgram{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function makeComplexComponentTensorInfo(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const id={kernelName:s.z,backendName:"webgl",kernelFunc:function ComplexAbs_complexAbs(e){const{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new ComplexAbsProgram(r.shape),o=[makeComplexComponentTensorInfo(r,a.complexTensorInfos.real),makeComplexComponentTensorInfo(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,o,o[0].dtype)}};class concat_gpu_ConcatProgram{constructor(e){this.outputShape=[],this.outputShape=s.md.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let s=1;s<t.length;s++)t[s]=t[s-1]+e[s][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let s=1;s<t.length;s++){const e=t[s-1];n.push(`else if (yC < ${t[s]}) setOutput(getT${s}(yR, yC-${e}));`)}const r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class concat_packed_gpu_ConcatPackedProgram{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=s.md.computeOutShape(e,t);const n=this.outputShape,r=n.length,a=getCoordsDataType(r),o=getChannels("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const u=new Array(e.length-1);u[0]=e[0][t];for(let s=1;s<u.length;s++)u[s]=u[s-1]+e[s][t];const c=i[t],l=i.slice(-2),d=i.join();let p=`if (${c} < ${u[0]}) {\n        return getChannel(\n            getT0(${d}), vec2(${l.join()}));\n        }`;for(let s=1;s<u.length;s++){const e=u[s-1];p+=`\n        if (${c} < ${u[s]}  && ${c} >= ${u[s-1]}) {\n          return getChannel(\n            getT${s}(${shiftedChannels(i,c,e)}),\n            vec2(${shiftedChannels(l,c,e)}));\n        }`}const h=u.length,f=u[u.length-1];p+=`\n        return getChannel(\n          getT${h}(${shiftedChannels(i,c,f)}),\n          vec2(${shiftedChannels(l,c,f)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${p}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${o}), 0., 0., 0.);\n\n        ${o[r-1]} = ${o[r-1]} + 1;\n        if (${o[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${o});\n        }\n\n        ${o[r-2]} = ${o[r-2]} + 1;\n        if (${o[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${o});\n        }\n\n        ${o[r-1]} = ${o[r-1]} - 1;\n        if (${o[r-2]} < ${n[r-2]} &&\n            ${o[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${o});\n        }\n        setOutput(result);\n      }\n    `}}function shiftedChannels(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function kernels_Imag_imag(e){const{inputs:t,backend:n}=e,{input:r}=t;return kernels_Identity_identity({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const ud={kernelName:s.rb,backendName:"webgl",kernelFunc:kernels_Imag_imag};function Concat_impl_concatImpl(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>kernels_Real_real({inputs:{input:e},backend:n}))),a=e.map((e=>kernels_Imag_imag({inputs:{input:e},backend:n}))),s=Concat_impl_concatImpl(r,t,n),o=Concat_impl_concatImpl(a,t,n),i=kernels_Complex_complex({inputs:{real:s,imag:o},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),i}if("string"===r){const{tensors2D:a,outShape:o}=computeTensors2D(e,t,n),i=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),u=1===a[0].shape[0],c=Cc(i,o,r,u),l=s.md.computeOutShape(e.map((e=>e.shape)),t),d=n.makeTensorInfo(l,r,c);return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}if(e.length>Object(s.Ld)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),a=Concat_impl_concatImpl(e.slice(0,r),t,n),s=Concat_impl_concatImpl(e.slice(r),t,n),o=Concat_impl_concatImpl([a,s],t,n);return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),o}if(Object(s.Ld)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const a=new concat_packed_gpu_ConcatPackedProgram(e.map((e=>e.shape)),t);return n.runWebGLProgram(a,e,r)}const{tensors2D:a,outShape:o}=computeTensors2D(e,t,n),i=new concat_gpu_ConcatProgram(a.map((e=>e.shape))),u=n.runWebGLProgram(i,a,r);a.forEach((e=>n.disposeIntermediateTensorInfo(e)));const c=kernels_Reshape_reshape({inputs:{x:u},attrs:{shape:o},backend:n});return n.disposeIntermediateTensorInfo(u),c}function computeTensors2D(e,t,n){const r=s.md.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>kernels_Reshape_reshape({inputs:{x:e},attrs:{shape:[-1,s.of.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:r}}function kernels_Concat_concat(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,o=s.of.parseAxisParam(a,t[0].shape)[0],i=s.md.computeOutShape(t.map((e=>e.shape)),o);if(0===s.of.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const u=t.filter((e=>s.of.sizeFromShape(e.shape)>0));if(1===u.length)return kernels_Identity_identity({inputs:{x:u[0]},backend:n});const c=u.map((e=>e.shape));return s.md.assertParamsConsistent(c,o),Concat_impl_concatImpl(u,o,n)}const cd={kernelName:s.A,backendName:"webgl",kernelFunc:kernels_Concat_concat};class Conv2DProgram{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,o=e.padInfo.left,i=e.strideHeight,u=e.strideWidth,c=e.dilationHeight,l=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,b=m?2:3,y=m?3:1;let x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const k=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${i}, ${u});\n      const ivec2 pads = ivec2(${s}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${b}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${c};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${l};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${h}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${h}) *\n                    getW(wR, wC, ${h}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${h}, xR, xC) *\n                    getW(wR, wC, ${h}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2),\n                getW(wR, wC, ${h} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1),\n                  getX(batch, xR, xC, ${h} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC),\n                  getX(batch, ${h} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${k}\n        ${v}\n        setOutput(result);\n      }\n    `}}class Conv3DProgram{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,l=e.filterDepth,d=e.filterHeight,p=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${o});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${l}; wF++) {\n          int xF = xFCorner + wF * ${i};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${c};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${h}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${h}) *\n                  getW(wF, wR, wC, ${h}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1),\n                  getX(batch, xF, xR, xC, ${h} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2),\n                  getW(wF, wR, wC, ${h} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class im2col_packed_gpu_Im2ColPackedProgram{constructor(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const{filterWidth:r,inChannels:a,strideWidth:s,strideHeight:o,padInfo:i,outWidth:u,dilationWidth:c,dilationHeight:l,dataFormat:d}=n,{left:p,top:h}=i,f=a*r,m=getGlslDifferences(),g="channelsLast"===d,b=g?0:1,y=g?1:2;let x="";for(let v=0;v<=1;v++)for(let n=0;n<=1;n++)x+=`\n          blockIndex = rc.y + ${n};\n          pos = rc.x + ${v};\n\n          if(blockIndex < ${e[1]} && pos < ${e[0]}) {\n            offsetY = int(blockIndex / (${u})) * ${o} - ${h};\n            d0 = offsetY + ${l} * (pos / ${f});\n\n            if(d0 < ${t[b]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${u}.) * ${s}. - ${p}.);\n              d1 = offsetX + ${c} * (int(mod(float(pos), ${f}.) / ${a}.));\n\n              if(d1 < ${t[y]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${a}.));\n\n                if (${g}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*v+n}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*v+n}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${m.output} = result;\n      }\n    `}}function conv2dByMatMul({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:u=null}){const c=e.shape,l=r.texData.get(e.dataId),d=n.inChannels,p=c[0]*c[1]*c[2],h=n.outChannels,f="channelsLast"===n.dataFormat;let m;const g=[],b=(1===p||1===h)&&d>1e3,y=c[2]%2!=0&&!!l.isPacked;if(!b&&Object(s.Ld)().getBool("WEBGL_LAZILY_UNPACK")&&Object(s.Ld)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&y){const d=f?c[0]*c[1]*(c[2]+1):c[0]*c[2]*(c[3]+1),p={dataId:e.dataId,shape:[1,d,n.inChannels],dtype:e.dtype},h=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,s.of.assert(isReshapeFree(l.shape,p.shape),(()=>`packed reshape ${l.shape} to ${p.shape} isn't free`));const b=kernels_Reshape_reshape({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push(b);const y=batchMatMulImpl({a:p,b:b,backend:r,transposeA:false,transposeB:false,bias:a,activation:u,preluActivationWeights:o,leakyreluAlpha:i}),x=r.texData.get(y.dataId);s.of.assert(x.isPacked,(()=>"batchMatMul result is expected to be packed")),l.shape=h,x.shape=n.outShape,m=kernels_Identity_identity({inputs:{x:y},backend:r}),m.shape=n.outShape,g.push(y)}else{const s=kernels_Reshape_reshape({inputs:{x:e},backend:r,attrs:{shape:[1,f?c[0]*c[1]*c[2]:c[0]*c[2]*c[3],n.inChannels]}}),l=kernels_Reshape_reshape({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),d=batchMatMulImpl({a:s,b:l,transposeA:false,transposeB:false,backend:r,bias:a,activation:u,preluActivationWeights:o,leakyreluAlpha:i});m=kernels_Reshape_reshape({inputs:{x:d},backend:r,attrs:{shape:n.outShape}}),g.push(s),g.push(l),g.push(d)}for(const s of g)r.disposeIntermediateTensorInfo(s);return m}function conv2dWithIm2Row({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:u=null}){const{filterWidth:c,filterHeight:l,inChannels:d,outWidth:p,outHeight:h,dataFormat:f}=n,m="channelsLast"===f,g=c*l*d,b=h*p,y=[g,b],x=[],v=kernels_Reshape_reshape({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),k=kernels_Reshape_reshape({inputs:{x:t},backend:r,attrs:{shape:[1,g,s.of.sizeFromShape(t.shape)/g]}});x.push(v),x.push(k);const w=new im2col_packed_gpu_Im2ColPackedProgram(y,v.shape,n),O=r.runWebGLProgram(w,[v],"float32"),_=kernels_Reshape_reshape({inputs:{x:O},backend:r,attrs:{shape:[1,y[0],y[1]]}});x.push(O),x.push(_);const I=null!=a,S=null!=o,N="leakyrelu"===u,C=u?mapActivationToShaderProgram(u,!0):null,T=new MatMulPackedProgram(_.shape,k.shape,[1,b,n.outChannels],!0,!1,I,C,S,N),A=[_,k];if(a&&A.push(a),S&&A.push(o),N){const e=r.makeTensorInfo([],"float32",s.of.createScalarValue(i,"float32"));A.push(e),x.push(e)}const E=r.runWebGLProgram(T,A,"float32"),j=kernels_Reshape_reshape({inputs:{x:E},backend:r,attrs:{shape:m?[1,h,p,n.outChannels]:[1,n.outChannels,h,p]}});x.push(E);for(const s of x)r.disposeIntermediateTensorInfo(s);return j}const ld={kernelName:s.B,backendName:"webgl",kernelFunc:function Conv2D_conv2d(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:o}=t,{strides:i,pad:u,dataFormat:c,dilations:l,dimRoundingMode:d}=r,p=s.md.convertConv2DDataFormat(c),h=s.md.computeConv2DInfo(a.shape,o.shape,i,l,u,d,!1,p);let f;if(1!==h.filterHeight||1!==h.filterWidth||1!==h.dilationHeight||1!==h.dilationWidth||1!==h.strideHeight||1!==h.strideWidth||"SAME"!==h.padInfo.type&&"VALID"!==h.padInfo.type)if(Object(s.Ld)().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])f=conv2dWithIm2Row({x:a,filter:o,convInfo:h,backend:n});else{const e=new Conv2DProgram(h);f=n.runWebGLProgram(e,[a,o],"float32")}else f=conv2dByMatMul({x:a,filter:o,convInfo:h,backend:n});const m=kernels_Reshape_reshape({inputs:{x:f},backend:n,attrs:{shape:h.outShape}});return n.disposeIntermediateTensorInfo(f),m}};class Conv2DDerFilterProgram{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Conv2DDerInputProgram{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,o=t-1-e.padInfo.top,i=n-1-e.padInfo.left,u=s?1:2,c=s?2:3,l=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${l}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${c}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Conv3DDerFilterProgram{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,o=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${o};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Conv3DDerInputProgram{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.front,u=n-1-e.padInfo.top,c=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${i}, ${u}, ${c});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${o}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const dd={kernelName:s.C,backendName:"webgl",kernelFunc:function Conv2DBackpropFilter_conv2DBackpropFilter(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:o}=t,{strides:i,pad:u,dataFormat:c,dimRoundingMode:l,filterShape:d}=r,p=s.md.convertConv2DDataFormat(c),h=s.md.computeConv2DInfo(a.shape,d,i,1,u,l,!1,p),f=new Conv2DDerFilterProgram(h);return n.runWebGLProgram(f,[a,o],"float32")}};const pd={kernelName:s.D,backendName:"webgl",kernelFunc:function Conv2DBackpropInput_conv2DBackpropInput(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:o}=t,{inputShape:i,strides:u,pad:c,dataFormat:l,dimRoundingMode:d}=r,p=s.md.convertConv2DDataFormat(l),h=s.md.computeConv2DInfo(i,o.shape,u,1,c,d,!1,p),f=new Conv2DDerInputProgram(h);return n.runWebGLProgram(f,[a,o],"float32")}};const hd={kernelName:s.E,backendName:"webgl",kernelFunc:function Conv3D_conv3D(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:o}=t,{strides:i,pad:u,dilations:c}=r,l=s.md.computeConv3DInfo(a.shape,o.shape,i,c,u),d=new Conv3DProgram(l);return n.runWebGLProgram(d,[a,o],"float32")}};const fd={kernelName:s.F,backendName:"webgl",kernelFunc:function Conv3DBackpropFilterV2_conv3DBackpropFilterV2(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:o}=t,{strides:i,pad:u,filterShape:c}=r,l=s.md.computeConv3DInfo(a.shape,c,i,1,u),d=new Conv3DDerFilterProgram(l);return n.runWebGLProgram(d,[a,o],"float32")}};const md={kernelName:s.G,backendName:"webgl",kernelFunc:function Conv3DBackpropInputV2_conv3DBackpropInput(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:o}=t,{pad:i,strides:u,inputShape:c}=r,l=s.md.computeConv3DInfo(c,o.shape,u,1,i),d=new Conv3DDerInputProgram(l);return n.runWebGLProgram(d,[a,o],"float32")}},gd=kernel_funcs_utils_unaryKernelFunc({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),bd={kernelName:s.H,backendName:"webgl",kernelFunc:gd},yd=kernel_funcs_utils_unaryKernelFunc({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),xd={kernelName:s.I,backendName:"webgl",kernelFunc:yd};class CropAndResizeProgram{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,o,i,u]=e,[c]=t,[l,d]=n;this.outputShape=[c,l,d,u];const p="bilinear"===r?1:0,[h,f]=[o-1+".0",i-1+".0"],[m,g,b]=l>1?[""+(o-1)/(l-1),"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[y,x,v]=d>1?[""+(i-1)/(d-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${b};\n        if( in_y < 0.0 || in_y > ${h} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const vd={kernelName:s.J,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:o}=t,{cropSize:i,method:u,extrapolationValue:c}=r,l=new CropAndResizeProgram(a.shape,s.shape,i,u,c);return n.runWebGLProgram(l,[a,s,o],"float32")}};class cumsum_gpu_CumSumProgram{constructor(e,t,n){this.variableNames=["x"],this.outputShape=e;const r=e.length,a=t?"0.0":`getX(${cumsum_gpu_getCoords(r,"coords")})`,s=e[e.length-1];let o="",i="";t?(o=n?"end != "+(s-1):"end != 0",i=n?"end + 1":"end - 1"):(o=n?`end + pow2 < ${s}`:"end >= pow2",i=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${getCoordsDataType(r)} coords = getOutputCoords();\n        int end = ${getFinalCoord(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${o}) {\n          int idx = ${i};\n          ${getFinalCoord(r,"coords")} = idx;\n          val += getX(${cumsum_gpu_getCoords(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.index&&(this.index=t.getUniformLocation(n,"index")),t.gl.uniform1f(this.index,e)}}}function cumsum_gpu_getCoords(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function getFinalCoord(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const kd={kernelName:s.K,backendName:"webgl",kernelFunc:function kernels_Cumsum_cumsum(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o,exclusive:i,reverse:u}=r,c=a.shape.length,l=s.md.getAxesPermutation([o],c);let d=a;null!=l&&(d=kernels_Transpose_transpose({inputs:{x:a},backend:n,attrs:{perm:l}}));const p=s.md.getInnerMostAxes(1,c)[0];if(p!==c-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${a.shape.length-1} but got axis=${o}`);const h=d.shape[p];let f=kernels_Identity_identity({inputs:{x:d},backend:n});for(let s=0;s<=Math.ceil(Math.log2(h))-1;s++){const e=new cumsum_gpu_CumSumProgram(d.shape,!1,u),t=e.getCustomSetupFunc(s),r=f;f=n.runWebGLProgram(e,[f],f.dtype,t),n.disposeIntermediateTensorInfo(r)}if(i){const e=new cumsum_gpu_CumSumProgram(d.shape,i,u),t=f;f=n.runWebGLProgram(e,[f],f.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=l){const e=kernels_Transpose_transpose({inputs:{x:f},backend:n,attrs:{perm:s.md.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(d),e}return f}};const wd={kernelName:s.M,backendName:"webgl",kernelFunc:function DenseBincount_denseBincount(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:o,binaryOutput:i}=r;if(1===a.shape.length){const e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=Ic(e,t,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(s),r=Sc(e,t,o,i);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};class DepthToSpaceProgram{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const Od={kernelName:s.N,backendName:"webgl",kernelFunc:function DepthToSpace_depthToSpace(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:o,dataFormat:i}=r;s.of.assert(o>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${o}`));const u=a.shape[0],c="NHWC"===i?a.shape[1]:a.shape[2],l="NHWC"===i?a.shape[2]:a.shape[3],d="NHWC"===i?a.shape[3]:a.shape[1],p=c*o,h=l*o,f=d/(o*o),m=new DepthToSpaceProgram("NHWC"===i?[u,p,h,f]:[u,f,p,h],o,i);return n.runWebGLProgram(m,[a],a.dtype)}};class DepthwiseConv2DProgram{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.inHeight,o=e.inWidth,i=e.padInfo.top,u=e.padInfo.left,c=e.strideHeight,l=e.strideWidth,d=e.dilationHeight,p=e.dilationWidth,h=e.filterHeight,f=e.filterWidth,m=e.outChannels/e.inChannels;let g="",b="";n&&(g=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,b="result = activation(result);");const y=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${g}\n\n      const ivec2 strides = ivec2(${c}, ${l});\n      const ivec2 pads = ivec2(${i}, ${u});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${m};\n        int q = d2 - d1 * ${m};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${d};\n\n          if (xR < 0 || xR >= ${s}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${f}; wC++) {\n            int xC = xCCorner + wC * ${p};\n\n            if (xC < 0 || xC >= ${o}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${y}\n        ${b}\n        setOutput(result);\n      }\n    `}}class conv_packed_gpu_depthwise_DepthwiseConvPacked2DProgram{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;const o=e.inHeight,i=e.inWidth,u=e.padInfo.top,c=e.padInfo.left,l=e.strideHeight,d=e.strideWidth,p=e.dilationHeight,h=e.dilationWidth,f=e.filterHeight,m=e.filterWidth,g=m;let b="int xR; int xC; int xCOffset;";for(let s=0;s<f;s++)for(let e=0;e<m;e++)b+=`\n          vec4 xTexelR${s}C${2*e} = vec4(0.);\n          vec4 wR${s}C${e} = vec4(0.);\n          vec4 xR${s}C${e} = vec4(0.);`;for(let k=0;k<f;k++)for(let e=0;e<g;e++){const t=2*e;if(b+=`\n          xR = xRCorner + ${k*p};\n          xC = xCCorner + ${t*h};\n        `,1===d){if(t<m&&(b+=c%2==1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${o} && xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${k}C${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    xTexelR${k}C${t}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${k}C${t} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${o} && xCOffset >= 0 && xCOffset < ${i}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${k}C${t} = vec4(previous.zw, xTexelR${k}C${t}.xy);\n                } else {\n                  xR${k}C${t} = vec4(0, 0, xTexelR${k}C${t}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${o} && xC >= 0 && xC < ${i}) {\n                  xTexelR${k}C${t} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${k}C${t} = vec4(0.);\n                }\n\n                xR${k}C${t} = xTexelR${k}C${t};\n              `,t+1<m)){const e=c%2==0?s.of.nearestLargerEven(h):h;h%2==0&&c%2==1||h%2!=0&&c%2!=1?(b+=`\n                  xCOffset = xC + ${c%2} + ${e};\n\n                  if(xR >= 0 && xR < ${o} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${k}C${t+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,h>1&&(b+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${o} &&\n                      xCOffset >= 0 && xCOffset < ${i}) {\n                      xTexelR${k}C${t} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${k}C${t} = vec4(0.);\n                    }\n                  `),b+=`\n                  xR${k}C${t+1} = vec4(\n                    xTexelR${k}C${t}.zw, xTexelR${k}C${t+2}.xy);\n                `):b+=`\n                  xCOffset = xC + ${e};\n\n                  if(xR >= 0 && xR < ${o} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${k}C${t+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${k}C${t+1} = xTexelR${k}C${t+2};\n                `}}else t<m&&(b+=`\n              if(xR >= 0 && xR < ${o}) {\n            `,c%2==1?(b+=`\n                xCOffset = xC + 1 - ${d};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${k}C${t} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${k}C${t} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${i}) {\n                  xTexelR${k}C${t+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${k}C${t+2} = vec4(0.);\n                }\n\n                xR${k}C${t} = vec4(\n                  xTexelR${k}C${t}.zw, xTexelR${k}C${t+2}.zw);\n              `,t+1<m&&(b+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${d};\n                  if(xCOffset >= 0 && xCOffset < ${i}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${k}C${t+1} = vec4(xTexelR${k}C${t+2}.xy, final.xy);\n                `)):(b+=`\n                if(xC >= 0 && xC < ${i}) {\n                  xTexelR${k}C${t} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${k}C${t} = vec4(0.);\n                }\n\n                xCOffset = xC + ${d};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${k}C${t+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${k}C${t+2} = vec4(0.);\n                }\n\n                xR${k}C${t} = vec4(\n                  xTexelR${k}C${t}.xy, xTexelR${k}C${t+2}.xy);\n              `,t+1<m&&(b+=`\n                  xR${k}C${t+1} = vec4(\n                    xTexelR${k}C${t}.zw, xTexelR${k}C${t+2}.zw);\n                `)),b+="}");t<m&&(b+=`\n            vec4 wTexelR${k}C${t} = getW(${k}, ${t}, d1, q);\n            wR${k}C${t} = vec4(wTexelR${k}C${t}.xz, wTexelR${k}C${t}.xz);\n          `,t+1<m&&(b+=`\n              vec4 wTexelR${k}C${t+1} = getW(${k}, ${t+1}, d1, q);\n              wR${k}C${t+1} =\n                vec4(wTexelR${k}C${t+1}.xz, wTexelR${k}C${t+1}.xz);`))}for(let s=0;s<f;s++)for(let e=0;e<m;e++)b+=`dotProd += xR${s}C${e} * wR${s}C${e};`;let y="",x="";n&&(y=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,x="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${l}, ${d});\n      const ivec2 pads = ivec2(${u}, ${c});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${b}\n\n        vec4 result = dotProd;\n        ${v}\n        ${x}\n        setOutput(result);\n      }\n    `}}const _d={kernelName:s.O,backendName:"webgl",kernelFunc:function DepthwiseConv2dNative_depthwiseConv2dNative(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:o}=t,{strides:i,pad:u,dilations:c,dimRoundingMode:l}=r;let d=c;null==d&&(d=[1,1]),s.of.assert(s.md.eitherStridesOrDilationsAreOne(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));const p=s.md.computeConv2DInfo(a.shape,o.shape,i,d,u,l,!0);let h;return h=Object(s.Ld)().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels==1?new conv_packed_gpu_depthwise_DepthwiseConvPacked2DProgram(p):new DepthwiseConv2DProgram(p),n.runWebGLProgram(h,[a,o],"float32")}};class DepthwiseConv2DDerFilterProgram{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class DepthwiseConv2DDerInputProgram{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,o=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${i}; dm++) {\n              int d2 = d1 * ${i} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Id={kernelName:s.P,backendName:"webgl",kernelFunc:function DepthwiseConv2dNativeBackpropFilter_depthwiseConv2dNativeBackpropFilter(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:o}=t,{strides:i,dilations:u,pad:c,dimRoundingMode:l,filterShape:d}=r,p=s.md.computeConv2DInfo(a.shape,d,i,u,c,l,!0),h=new DepthwiseConv2DDerFilterProgram(p);return n.runWebGLProgram(h,[a,o],"float32")}};const Sd={kernelName:s.Q,backendName:"webgl",kernelFunc:function DepthwiseConv2dNativeBackpropInput_depthwiseConv2dNativeBackpropInput(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:o}=t,{strides:i,dilations:u,pad:c,dimRoundingMode:l,inputShape:d}=r,p=s.md.computeConv2DInfo(d,o.shape,i,u,c,l,!0),h=new DepthwiseConv2DDerInputProgram(p);return n.runWebGLProgram(h,[a,o],"float32")}};class DiagProgram{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const Nd={kernelName:s.R,backendName:"webgl",kernelFunc:function Diag_diag(e){const{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],o=s.of.sizeFromShape(r.shape),i=kernels_Reshape_reshape({inputs:{x:r},backend:n,attrs:{shape:[o]}}),u=new DiagProgram(o),c=n.runWebGLProgram(u,[i],i.dtype),l=kernels_Reshape_reshape({inputs:{x:c},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),l}};class Dilation2DProgram{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:o,filterWidth:i,dilationHeight:u,dilationWidth:c}=e,{top:l,left:d}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${l}, ${d});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${o}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${i}; w++) {\n              int wIn = wBeg + w * ${c};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const Cd={kernelName:s.S,backendName:"webgl",kernelFunc:function dilation2D(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:o}=t,{strides:i,pad:u,dilations:c}=r,l=s.md.computeDilation2DInfo(a.shape,o.shape,i,u,"NHWC",c);let d;const p=new Dilation2DProgram(l);d=n.runWebGLProgram(p,[a,o],"float32");const h=kernels_Reshape_reshape({inputs:{x:d},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(d),h}},Td=kernel_funcs_utils_unaryKernelFunc({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),Ad={kernelName:s.V,backendName:"webgl",kernelFunc:Td},Ed={kernelName:s.W,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:a}=t,o=Object(s.Ld)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new binaryop_packed_gpu_BinaryOpPackedProgram("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,a.shape):new binaryop_gpu_BinaryOpProgram("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(o,[r,a],r.dtype)}},jd=kernel_funcs_utils_binaryKernelFunc({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool"}),Rd={kernelName:s.X,backendName:"webgl",kernelFunc:jd},$d=kernel_funcs_utils_unaryKernelFunc({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${s.md.ERF_P};\n  float a1 = ${s.md.ERF_A1};\n  float a2 = ${s.md.ERF_A2};\n  float a3 = ${s.md.ERF_A3};\n  float a4 = ${s.md.ERF_A4};\n  float a5 = ${s.md.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),Fd={kernelName:s.Y,backendName:"webgl",kernelFunc:$d},Dd="return exp(x);",zd=kernel_funcs_utils_unaryKernelFunc({opSnippet:Dd,packedOpSnippet:Dd,cpuKernelImpl:Tc}),Pd={kernelName:s.Z,backendName:"webgl",kernelFunc:zd};function kernels_ExpandDims_expandDims(e){const{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:o}=t,i=o.shape.length,u=o.shape.slice();let c=a;return a<0&&(s.of.assert(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),c=i+a+1),u.splice(c,0,1),kernels_Reshape_reshape({inputs:{x:o},backend:r,attrs:{shape:u}})}const Ld={kernelName:s.ab,backendName:"webgl",kernelFunc:kernels_ExpandDims_expandDims},Md="return exp(x) - 1.0;",Bd=kernel_funcs_utils_unaryKernelFunc({opSnippet:Md,packedOpSnippet:Md,cpuKernelImpl:Ac}),Vd={kernelName:s.bb,backendName:"webgl",kernelFunc:Bd};class FFTProgram{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${r}.0`:"1.0";let o;if("real"===e)o="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);o="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${o}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function FFT_impl_fftImpl(e,t,n){const r=n.texData.get(e.dataId),a=s.of.sizeFromShape(e.shape),o=e.shape[e.shape.length-1],i=kernels_Reshape_reshape({inputs:{x:e},backend:n,attrs:{shape:[a/o,o]}}),u=i.shape,c=new FFTProgram("real",u,t),l=new FFTProgram("imag",u,t),d=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:u},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:u}],p=n.runWebGLProgram(c,d,"float32"),h=n.runWebGLProgram(l,d,"float32"),f=kernels_Complex_complex({inputs:{real:p,imag:h},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h);const m=kernels_Reshape_reshape({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(f),m}const Wd={kernelName:s.cb,backendName:"webgl",kernelFunc:function kernels_FFT_fft(e){const{inputs:t,backend:n}=e,{input:r}=t;return FFT_impl_fftImpl(r,!1,n)}};class FillProgram{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}function kernels_Fill_fill(e){const{backend:t,attrs:n}=e,{shape:r,value:a}=n;let{dtype:o}=n;if(o=o||s.of.inferDtype(a),"string"===o){const e=s.of.getArrayFromDType(o,s.of.sizeFromShape(r));return e.fill(a),t.makeTensorInfo(r,o,e)}{const e=new FillProgram(r,a),n=e.getCustomSetupFunc(a);return t.runWebGLProgram(e,[],o,n)}}const Ud={kernelName:s.db,backendName:"webgl",kernelFunc:kernels_Fill_fill};class FlipLeftRightProgram{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Gd={kernelName:s.eb,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,a=new FlipLeftRightProgram(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},Hd="return floor(x);",Kd=kernel_funcs_utils_unaryKernelFunc({opSnippet:Hd,packedOpSnippet:Hd,cpuKernelImpl:Ec}),qd={kernelName:s.fb,backendName:"webgl",kernelFunc:Kd},Xd=kernel_funcs_utils_binaryKernelFunc({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),Jd={kernelName:s.gb,backendName:"webgl",kernelFunc:Xd};class from_pixels_gpu_FromPixelsProgram{constructor(e){this.variableNames=["A"];const t=getGlslDifferences(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class from_pixels_packed_gpu_FromPixelsPackedProgram{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=getGlslDifferences(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const Yd={kernelName:s.hb,backendName:"webgl",kernelFunc:function fromPixels(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:a}=t;const{numChannels:o}=r,i="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,u="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[c,l]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],d=[l,c],p=[l,c,o];(u||i)&&(null==Zd&&(Zd=document.createElement("canvas").getContext("2d")),Zd.canvas.width=c,Zd.canvas.height=l,Zd.drawImage(a,0,0,c,l),a=Zd.canvas);const h=n.makeTensorInfo(d,"int32");n.texData.get(h.dataId).usage=pc.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(h.dataId),a);const f=Object(s.Ld)().getBool("WEBGL_PACK")?new from_pixels_packed_gpu_FromPixelsPackedProgram(p):new from_pixels_gpu_FromPixelsProgram(p),m=n.runWebGLProgram(f,[h],"int32");return n.disposeData(h.dataId),m}};let Zd;const Qd={kernelName:s.jb,backendName:"webgl",kernelFunc:function fusedConv2d(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:o,bias:i,preluActivationWeights:u}=t,{strides:c,pad:l,dataFormat:d,dilations:p,dimRoundingMode:h,activation:f,leakyreluAlpha:m}=r,g=s.md.convertConv2DDataFormat(d),b=s.md.computeConv2DInfo(a.shape,o.shape,c,p,l,h,!1,g);let y;const x=[];if(1!==b.filterHeight||1!==b.filterWidth||1!==b.dilationHeight||1!==b.dilationWidth||1!==b.strideHeight||1!==b.strideWidth||"SAME"!==b.padInfo.type&&"VALID"!==b.padInfo.type)if(Object(s.Ld)().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])y=conv2dWithIm2Row({x:a,filter:o,convInfo:b,backend:n,bias:i,activation:f,preluActivationWeights:u,leakyreluAlpha:m});else{const e=null!=i,t=null!=u,r="leakyrelu"===f,c=f?mapActivationToShaderProgram(f,!1):null,l=new Conv2DProgram(b,e,c,t,r),d=[a,o];if(i&&d.push(i),u&&d.push(u),r){const e=n.makeTensorInfo([],"float32",s.of.createScalarValue(m,"float32"));d.push(e),x.push(e)}y=n.runWebGLProgram(l,d,"float32")}else y=conv2dByMatMul({x:a,filter:o,convInfo:b,backend:n,bias:i,activation:f,preluActivationWeights:u,leakyreluAlpha:m});const v=kernels_Reshape_reshape({inputs:{x:y},backend:n,attrs:{shape:b.outShape}});return x.push(y),x.forEach((e=>n.disposeIntermediateTensorInfo(e))),v}};const ep={kernelName:s.kb,backendName:"webgl",kernelFunc:function FusedDepthwiseConv2D_fusedDepthwiseConv2D(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:o,bias:i,preluActivationWeights:u}=t,{strides:c,pad:l,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=r,m=[];let g=d;null==g&&(g=[1,1]),s.of.assert(s.md.eitherStridesOrDilationsAreOne(c,g),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${c} and dilations '${g}'`));const b=s.md.computeConv2DInfo(a.shape,o.shape,c,g,l,p,!0),y=Object(s.Ld)().getBool("WEBGL_PACK_DEPTHWISECONV")&&b.strideWidth<=2&&b.outChannels/b.inChannels==1,x=h?mapActivationToShaderProgram(h,y):null,v=[a,o],k=null!=i,w=null!=u,O="leakyrelu"===h;if(k&&v.push(i),w&&v.push(u),O){const e=n.makeTensorInfo([],"float32",s.of.createScalarValue(f,"float32"));v.push(e),m.push(e)}let _;_=y?new conv_packed_gpu_depthwise_DepthwiseConvPacked2DProgram(b,k,x,w,O):new DepthwiseConv2DProgram(b,k,x,w,O);const I=n.runWebGLProgram(_,v,"float32");return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}};class gather_nd_gpu_GatherNDProgram{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=getCoordsDataType(t.length),a=getCoordsDataType(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${s};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const tp={kernelName:s.lb,backendName:"webgl",kernelFunc:function GatherNd_gatherNd(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,o=a.shape,i=o[o.length-1],[u,c,l,d]=s.md.prepareAndValidate(r,a),p=kernels_Reshape_reshape({inputs:{x:a},backend:n,attrs:{shape:[c,i]}}),h=kernels_Reshape_reshape({inputs:{x:r},backend:n,attrs:{shape:[s.of.sizeFromShape(r.shape)/l,l]}}),f=new gather_nd_gpu_GatherNDProgram(i,d,[c,l]),m=n.runWebGLProgram(f,[h,p],h.dtype),g=kernels_Reshape_reshape({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),g}};class gather_gpu_GatherProgram{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=getCoordsDataType(this.rank),r=function gather_gpu_getSourceCoords(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let a=0;a<e.length;a++)2===a?r.push("int(getIndices(resRC.x, resRC.z))"):r.push(`${n[a]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}const np={kernelName:s.mb,backendName:"webgl",kernelFunc:function GatherV2_gatherV2(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:o}=t,{axis:i,batchDims:u}=r,c=s.of.parseAxisParam(i,a.shape)[0],l=s.md.segment_util.collectGatherOpShapeInfo(a,o,c,u),d=s.of.sizeFromShape(o.shape),p=[],h=kernels_Reshape_reshape({inputs:{x:a},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),f=kernels_Reshape_reshape({inputs:{x:o},backend:n,attrs:{shape:[l.batchSize,d/l.batchSize]}});p.push(h),p.push(f);const m=[l.batchSize,l.outerSize,d/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([a,o])||"string"===a.dtype){const e=n.bufferSync(f),t=n.bufferSync(h),r=jc(t,e,m);return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const g=new gather_gpu_GatherProgram(h.shape,m),b=n.runWebGLProgram(g,[h,f],h.dtype);p.push(b);const y=kernels_Reshape_reshape({inputs:{x:b},backend:n,attrs:{shape:l.outputShape}});return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},rp=kernel_funcs_utils_binaryKernelFunc({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:Rc,dtype:"bool"}),ap={kernelName:s.nb,backendName:"webgl",kernelFunc:rp},sp=kernel_funcs_utils_binaryKernelFunc({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool"}),ip={kernelName:s.ob,backendName:"webgl",kernelFunc:sp};const up={kernelName:s.pb,backendName:"webgl",kernelFunc:function kernels_IFFT_ifft(e){const{inputs:t,backend:n}=e,{input:r}=t;return FFT_impl_fftImpl(r,!0,n)}},cp=kernel_funcs_utils_unaryKernelFunc({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),lp={kernelName:s.sb,backendName:"webgl",kernelFunc:cp},dp=kernel_funcs_utils_unaryKernelFunc({opSnippet:"return float(isinf(x));",dtype:"bool"}),pp={kernelName:s.tb,backendName:"webgl",kernelFunc:dp},hp=kernel_funcs_utils_unaryKernelFunc({opSnippet:"return float(isnan(x));",dtype:"bool"}),fp={kernelName:s.ub,backendName:"webgl",kernelFunc:hp},mp=kernel_funcs_utils_binaryKernelFunc({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:$c,dtype:"bool"}),gp={kernelName:s.zb,backendName:"webgl",kernelFunc:mp},bp=kernel_funcs_utils_binaryKernelFunc({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",dtype:"bool"}),yp={kernelName:s.Ab,backendName:"webgl",kernelFunc:bp};const xp={kernelName:s.Bb,backendName:"webgl",kernelFunc:function LinSpace_linSpace(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,o=Fc(r,a,s);return t.makeTensorInfo([o.length],"float32",o)}},vp=kernel_funcs_utils_unaryKernelFunc({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Dc}),kp={kernelName:s.Cb,backendName:"webgl",kernelFunc:vp},wp=kernel_funcs_utils_unaryKernelFunc({opSnippet:"return log(1.0 + x);"}),Op={kernelName:s.Db,backendName:"webgl",kernelFunc:wp},_p=kernel_funcs_utils_binaryKernelFunc({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),Ip={kernelName:s.Eb,backendName:"webgl",kernelFunc:_p},Sp=kernel_funcs_utils_unaryKernelFunc({opSnippet:"return float(!(x >= 1.0));"}),Np={kernelName:s.Fb,backendName:"webgl",kernelFunc:Sp},Cp=kernel_funcs_utils_binaryKernelFunc({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),Tp={kernelName:s.Gb,backendName:"webgl",kernelFunc:Cp};class LRNProgram{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];const s=t,o=e[3]-1;let i;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;i=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${o}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${i};\n        setOutput(val);\n      }\n    `}}class LRNPackedProgram{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,o=e[3]-1;let i;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;i=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${i};\n        setOutput(result);\n      }\n    `}}const Ap={kernelName:s.wb,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:o,bias:i,alpha:u,beta:c}=r,l=Object(s.Ld)().getBool("WEBGL_PACK_NORMALIZATION")?new LRNPackedProgram(a.shape,o,i,u,c):new LRNProgram(a.shape,o,i,u,c);return n.runWebGLProgram(l,[a],a.dtype)}};class LRNGradProgram{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const Ep={kernelName:s.xb,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:o}=t,{depthRadius:i,bias:u,alpha:c,beta:l}=r,d=new LRNGradProgram(a.shape,i,u,c,l);return n.runWebGLProgram(d,[a,s,o],a.dtype)}};function kernels_Max_max(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:o,keepDims:i}=r,u=a.shape.length,c=s.of.parseAxisParam(o,a.shape);let l=c;const d=s.md.getAxesPermutation(l,u),p=null!=d,h=n.shouldExecuteOnCPU([a]);let f=a;if(p){if(h){const e=n.texData.get(f.dataId).values,t=new Array(u);for(let n=0;n<t.length;n++)t[n]=a.shape[d[n]];const r=Yc(e,a.shape,a.dtype,d,t);f=n.makeTensorInfo(t,a.dtype);n.texData.get(f.dataId).values=r}else f=Transpose_impl_transposeImpl(a,d,n);l=s.md.getInnerMostAxes(l.length,u)}s.md.assertAxesAreInnerMostDims("max",l,u);const[m,g]=s.md.computeOutAndReduceShapes(f.shape,l);let b,y=m;if(i&&(y=s.md.expandShapeToKeepDim(m,c)),h){const e=n.texData.get(f.dataId).values,t=zc(e,s.of.sizeFromShape(g),y,a.dtype);b=n.makeTensorInfo(y,a.dtype);n.texData.get(b.dataId).values=t}else b=function Max_impl_maxImpl(e,t,n,r){const a=s.of.sizeFromShape(t),o=kernels_Reshape_reshape({inputs:{x:e},attrs:{shape:[s.of.sizeFromShape(e.shape)/a,a]},backend:r}),i=reduce(o,e.dtype,"max",r),u=kernels_Reshape_reshape({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(i),u}(f,g,y,n);return p&&n.disposeIntermediateTensorInfo(f),b}const jp={kernelName:s.Hb,backendName:"webgl",kernelFunc:kernels_Max_max},Rp=kernel_funcs_utils_binaryKernelFunc({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Pc}),$p={kernelName:s.Nb,backendName:"webgl",kernelFunc:Rp};const Fp={kernelName:s.Ib,backendName:"webgl",kernelFunc:function MaxPool_maxPool(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;webgl_util_assertNotComplex(a,"maxPool");const{filterSize:o,strides:i,pad:u,dimRoundingMode:c}=r;s.of.assert(s.md.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=s.md.computePool2DInfo(a.shape,o,i,1,u,c);if(1===l.filterWidth&&1===l.filterHeight&&s.of.arraysEqual(l.inShape,l.outShape))return kernels_Identity_identity({inputs:{x:a},backend:n});const d=new Pool2DProgram(l,"max",!1);return n.runWebGLProgram(d,[a],a.dtype)}};const Dp={kernelName:s.Jb,backendName:"webgl",kernelFunc:function maxPool3d(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:o,strides:i,pad:u,dataFormat:c,dimRoundingMode:l}=r,d=s.md.computePool3DInfo(a.shape,o,i,[1,1,1],u,l,c),p=new Pool3DProgram(d,"max",!1);return n.runWebGLProgram(p,[a],a.dtype)}};class MaxPool2DBackpropProgram{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,o=a-1-e.padInfo.top,i=s-1-e.padInfo.left,u=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class MaxPool3DBackpropProgram{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterDepth,u=e.effectiveFilterHeight,c=e.effectiveFilterWidth,l=i-1-e.padInfo.front,d=u-1-e.padInfo.top,p=c-1-e.padInfo.left,h=i*u*c-1;this.userCode=`\n      const ivec3 pads = ivec3(${l}, ${d}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${i};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${c};\n                wC += ${o}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${h} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${c} +\n                  wR * ${c} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const zp={kernelName:s.Kb,backendName:"webgl",kernelFunc:function MaxPool3DGrad_maxPool3DGrad(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:o}=t,i=o,{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=r,p=s.md.computePool3DInfo(i.shape,u,c,[1,1,1],l,d),h=new Pool3DProgram(p,"max",!0),f=n.runWebGLProgram(h,[i],i.dtype),m=new MaxPool3DBackpropProgram(p),g=n.runWebGLProgram(m,[a,f],i.dtype);return n.disposeIntermediateTensorInfo(f),g}};const Pp={kernelName:s.Lb,backendName:"webgl",kernelFunc:function kernels_MaxPoolGrad_maxPoolGrad(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:o,output:i}=t,u=o;webgl_util_assertNotComplex([o,i],"maxPoolGrad");const{filterSize:c,strides:l,pad:d,dimRoundingMode:p}=r,h=s.md.computePool2DInfo(u.shape,c,l,1,d,p),f=new Pool2DProgram(h,"max",!0),m=n.runWebGLProgram(f,[u],u.dtype),g=new MaxPool2DBackpropProgram(h),b=n.runWebGLProgram(g,[a,m],u.dtype);return n.disposeIntermediateTensorInfo(m),b}};const Lp={kernelName:s.Mb,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:o,pad:i,includeBatchInIndex:u}=t,c=n;s.of.assert(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const l=[1,1];s.of.assert(s.md.eitherStridesOrDilationsAreOne(o,l),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${l}'`));const d=s.md.computePool2DInfo(r.shape,a,o,l,i),[p,h]=function MaxPoolWithArgmax_impl_maxPoolWithArgmaxImpl(e,t,n,r){let a=new Pool2DProgram(n,"max",!1);const s=r.runWebGLProgram(a,[e],"float32");return a=new Pool2DProgram(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(r,u,d,c);return[p,h]}};const Mp={kernelName:s.Ob,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:a,axis:o}=t,i=n,u=r.shape.length,c=s.of.parseAxisParam(o,r.shape);let l=c;const d=s.md.getAxesPermutation(l,u),p=null!=d,h=i.shouldExecuteOnCPU([r]),f=[];let m=r;if(p){if(h){const e=i.texData.get(m.dataId).values,t=new Array(u);for(let a=0;a<t.length;a++)t[a]=r.shape[d[a]];const n=Yc(e,r.shape,r.dtype,d,t);m=i.makeTensorInfo(t,r.dtype);i.texData.get(m.dataId).values=n}else m=Transpose_impl_transposeImpl(r,d,i);f.push(m),l=s.md.getInnerMostAxes(l.length,u)}s.md.assertAxesAreInnerMostDims("sum",l,u);const[g,b]=s.md.computeOutAndReduceShapes(m.shape,l);let y=g;a&&(y=s.md.expandShapeToKeepDim(g,c));const x=function meanImpl(e,t,n,r){const a=s.of.sizeFromShape(t),o=kernels_Reshape_reshape({inputs:{x:e},attrs:{shape:[s.of.sizeFromShape(e.shape)/a,a]},backend:r}),i=reduce(o,"float32","mean",r),u=kernels_Reshape_reshape({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(i),u}(m,b,y,i);for(const s of f)i.disposeIntermediateTensorInfo(s);return x}};const Bp={kernelName:s.Pb,backendName:"webgl",kernelFunc:function kernels_Min_min(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o,keepDims:i}=r,u=a.shape.length,c=s.of.parseAxisParam(o,a.shape);let l=c;const d=s.md.getAxesPermutation(l,u);let p=a;null!=d&&(p=kernels_Transpose_transpose({inputs:{x:a},backend:n,attrs:{perm:d}}),l=s.md.getInnerMostAxes(l.length,a.shape.length)),s.md.assertAxesAreInnerMostDims("min",l,u);const[h,f]=s.md.computeOutAndReduceShapes(p.shape,l),m=kernels_Reshape_reshape({inputs:{x:p},backend:n,attrs:{shape:[-1,s.of.sizeFromShape(f)]}}),g=reduce(m,m.dtype,"min",n);let b;if(i){b=kernels_Reshape_reshape({inputs:{x:g},backend:n,attrs:{shape:s.md.expandShapeToKeepDim(h,c)}})}else b=kernels_Reshape_reshape({inputs:{x:g},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(p),b}},Vp=kernel_funcs_utils_binaryKernelFunc({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Lc}),Wp={kernelName:s.Qb,backendName:"webgl",kernelFunc:Vp};class mirror_pad_gpu_MirrorPadProgram{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=getCoordsDataType(r),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${o});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${i}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${o};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class mirror_pad_packed_gpu_MirrorPadPackedProgram{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=getCoordsDataType(r),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=getChannels("rc",r),u=getChannels("source",r),c=`${i[r-1]} < ${this.outputShape[r-1]}`,l=1===r?"source":`vec2(${u.slice(-2).join()})`,d="reflect"===n?0:1;let p="";if(1===r){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${d};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${d};\n        }\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${l});\n        ${i[r-1]} += 1;\n        if(${c}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${l});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${d}) +\n                gte * ((end - 1) * 2 - source + ${d});\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${l});\n        ${i[r-1]} += 1;\n        if(${c}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${l});\n        }\n        rc = outputLoc;\n        ${i[r-2]} += 1;\n        if(${i[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${l});\n          ${i[r-1]} += 1;\n          if(${c}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${l});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${o});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const Up={kernelName:s.Rb,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:a,mode:o}=n,i=Object(s.Ld)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new mirror_pad_packed_gpu_MirrorPadPackedProgram(r.shape,a,o):new mirror_pad_gpu_MirrorPadProgram(r.shape,a,o);return t.runWebGLProgram(i,[r],r.dtype)}},Gp=kernel_funcs_utils_binaryKernelFunc({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Hp={kernelName:s.Sb,backendName:"webgl",kernelFunc:Gp};class MultinomialProgram{constructor(e,t,n){this.variableNames=["probs"],this.outputShape=[e,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.seedLoc&&(this.seedLoc=t.getUniformLocation(n,"seed")),t.gl.uniform1f(this.seedLoc,e)}}}const Kp=kernel_funcs_utils_binaryKernelFunc({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),qp={kernelName:s.kc,backendName:"webgl",kernelFunc:Kp},Xp="return a - b;",Jp=kernel_funcs_utils_binaryKernelFunc({opSnippet:Xp,packedOpSnippet:Xp,supportsComplex:!0,cpuKernelImpl:qc}),Yp={kernelName:s.Pc,backendName:"webgl",kernelFunc:Jp};function kernels_Softmax_softmax(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:o}=r,i=s.of.parseAxisParam([o],a.shape),u=kernels_Max_max({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),c=s.md.expandShapeToKeepDim(u.shape,i),l=kernels_Reshape_reshape({inputs:{x:u},backend:n,attrs:{shape:c}}),d=Jp({inputs:{a:a,b:l},backend:n}),p=zd({inputs:{x:d},backend:n}),h=kernels_Sum_sum({inputs:{x:p},backend:n,attrs:{axis:i,keepDims:!1}}),f=kernels_Reshape_reshape({inputs:{x:h},backend:n,attrs:{shape:c}}),m=Kp({inputs:{a:p,b:f},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}const Zp={kernelName:s.Fc,backendName:"webgl",kernelFunc:kernels_Softmax_softmax};const Qp={kernelName:s.Tb,backendName:"webgl",kernelFunc:function kernels_Multinomial_multinomial(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:o,normalized:i}=r,u=i?a:kernels_Softmax_softmax({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),c=u.shape[0],l=u.shape[1],d=new MultinomialProgram(c,l,s),p=d.getCustomSetupFunc(o),h=n.runWebGLProgram(d,[u],"int32",p);return i||n.disposeIntermediateTensorInfo(u),h}},eh="return -x;";const th={kernelName:s.Vb,backendName:"webgl",kernelFunc:function kernels_Neg_neg(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,a]=Bc(e.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,t)}let a;return a=Object(s.Ld)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new UnaryOpPackedProgram(r.shape,eh):new UnaryOpProgram(r.shape,eh),n.runWebGLProgram(a,[r],r.dtype)}},nh=s.Zd.nonMaxSuppressionV3Impl;const rh={kernelName:s.Wb,backendName:"webgl",kernelFunc:function NonMaxSuppressionV3_nonMaxSuppressionV3(e){s.md.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:o}=t,{maxOutputSize:i,iouThreshold:u,scoreThreshold:c}=r,l=n.readSync(a.dataId),d=n.readSync(o.dataId),{selectedIndices:p}=nh(l,d,i,u,c);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},ah=s.Zd.nonMaxSuppressionV4Impl;const sh={kernelName:s.Xb,backendName:"webgl",kernelFunc:function NonMaxSuppressionV4_nonMaxSuppressionV4(e){s.md.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:o}=t,{maxOutputSize:i,iouThreshold:u,scoreThreshold:c,padToMaxOutputSize:l}=r,d=n.readSync(a.dataId),p=n.readSync(o.dataId),{selectedIndices:h,validOutputs:f}=ah(d,p,i,u,c,l);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},oh=s.Zd.nonMaxSuppressionV5Impl;const ih={kernelName:s.Yb,backendName:"webgl",kernelFunc:function NonMaxSuppressionV5_nonMaxSuppressionV5(e){s.md.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:o}=t,{maxOutputSize:i,iouThreshold:u,scoreThreshold:c,softNmsSigma:l}=r,d=n.readSync(a.dataId),p=n.readSync(o.dataId),h=i,f=u,m=c,g=l,{selectedIndices:b,selectedScores:y}=oh(d,p,h,f,m,g);return[n.makeTensorInfo([b.length],"int32",new Int32Array(b)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class OneHotProgram{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const uh={kernelName:s.ac,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:o,onValue:i,offValue:u}=r,c=s.of.sizeFromShape(a.shape),l=new OneHotProgram(c,o,i,u),d=kernels_Reshape_reshape({inputs:{x:a},backend:n,attrs:{shape:[c]}}),p=n.runWebGLProgram(l,[d],a.dtype);n.disposeIntermediateTensorInfo(d);const h=kernels_Reshape_reshape({inputs:{x:p},backend:n,attrs:{shape:[...a.shape,o]}});return n.disposeIntermediateTensorInfo(p),h}};function kernels_ZerosLike_zerosLike(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=kernels_Real_real({inputs:{input:r},backend:n}),t=kernels_ZerosLike_zerosLike({inputs:{x:e},backend:n}),a=kernels_Imag_imag({inputs:{input:r},backend:n}),s=kernels_ZerosLike_zerosLike({inputs:{x:a},backend:n}),o=kernels_Complex_complex({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),o}return kernels_Fill_fill({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const ch={kernelName:s.cd,backendName:"webgl",kernelFunc:kernels_ZerosLike_zerosLike};const lh={kernelName:s.bc,backendName:"webgl",kernelFunc:function kernels_OnesLike_onesLike(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const e=kernels_Real_real({inputs:{input:r},backend:n}),t=kernels_OnesLike_onesLike({inputs:{x:e},backend:n}),a=kernels_Imag_imag({inputs:{input:r},backend:n}),s=kernels_ZerosLike_zerosLike({inputs:{x:a},backend:n}),o=kernels_Complex_complex({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),o}return kernels_Fill_fill({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:n})}};const dh={kernelName:s.dc,backendName:"webgl",kernelFunc:function Pack_pack(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return kernels_ExpandDims_expandDims({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const o=t[0].shape,i=t[0].dtype;t.forEach((e=>{s.of.assertShapesMatch(o,e.shape,"All tensors passed to stack must have matching shapes"),s.of.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const u=[],c=kernels_Concat_concat({inputs:t.map((e=>{const t=kernels_ExpandDims_expandDims({inputs:{input:e},backend:n,attrs:{dim:a}});return u.push(t),t})),backend:n,attrs:{axis:a}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}};class pad_gpu_PadProgram{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=getCoordsDataType(r),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${o});\n      uniform float value;\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${i}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${o};\n        uniform float value;\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}class pad_packed_gpu_PadPackedProgram{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=getCoordsDataType(r),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=getChannels("rc",r),u=getChannels("source",r),c=`${i[r-1]} < ${this.outputShape[r-1]}`,l=1===r?"source":`vec2(${u.slice(-2).join()})`,d=[`${a} rc = outputLoc;`,`${i[r-1]} += 1;\n       if(${c}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${i[r-2]} += 1;\n       if(${i[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${i[r-1]} += 1;\n         if(${c}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let h="";for(let f=0,m=1===r?2:4;f<m;f++)h+=`\n        ${d[f]}\n        if (${p}) {\n          result[${f}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${f}] = getChannel(getX(${u.join()}), ${l});\n        }\n      `;h+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${o});\n      uniform float value;\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}const PadV2_padV2=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:o,constantValue:i}=r,u=Object(s.Ld)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new pad_packed_gpu_PadPackedProgram(a.shape,o,i):new pad_gpu_PadProgram(a.shape,o,i),c=u.getCustomSetupFunc(i);return n.runWebGLProgram(u,[a],a.dtype,c)},ph={kernelName:s.ec,backendName:"webgl",kernelFunc:PadV2_padV2},hh=kernel_funcs_utils_binaryKernelFunc({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),fh={kernelName:s.fc,backendName:"webgl",kernelFunc:hh};const mh={kernelName:s.hc,backendName:"webgl",kernelFunc:function kernels_Prod_prod(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o,keepDims:i}=r,u=a.shape.length,c=[],l=s.of.parseAxisParam(o,a.shape);let d=l;const p=s.md.getAxesPermutation(d,u);let h,f=a;if(null!=p&&(f=kernels_Transpose_transpose({inputs:{x:a},backend:n,attrs:{perm:p}}),d=s.md.getInnerMostAxes(d.length,u),c.push(f)),s.md.assertAxesAreInnerMostDims("prod",d,u),n.shouldExecuteOnCPU([f])){const e=n.texData.get(f.dataId).values,{outVals:t,outShape:r,outDtype:a}=Vc(f.shape,f.dtype,e,d);h=n.makeTensorInfo(r,a,t)}else{const[e,t]=s.md.computeOutAndReduceShapes(f.shape,d),r=s.of.sizeFromShape(t),o=kernels_Reshape_reshape({inputs:{x:f},backend:n,attrs:{shape:[-1,r]}}),i=reduce(o,Object(s.bf)(a.dtype),"prod",n);h=kernels_Reshape_reshape({inputs:{x:i},backend:n,attrs:{shape:e}}),c.push(o),c.push(i)}if(i){c.push(h);const e=s.md.expandShapeToKeepDim(h.shape,l);h=kernels_Reshape_reshape({inputs:{x:h},backend:n,attrs:{shape:e}})}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},kernels_Range_range=e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:o}=n,i=Wc(r,a,s,o);return t.makeTensorInfo([i.length],o,i)},gh={kernelName:s.ic,backendName:"webgl",kernelFunc:kernels_Range_range},bh=kernel_funcs_utils_unaryKernelFunc({opSnippet:"return 1.0 / x;"}),yh={kernelName:s.lc,backendName:"webgl",kernelFunc:bh},xh=kernel_funcs_utils_unaryKernelFunc({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),vh={kernelName:s.mc,backendName:"webgl",kernelFunc:xh},kh=kernel_funcs_utils_unaryKernelFunc({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),wh={kernelName:s.nc,backendName:"webgl",kernelFunc:kh};class ResizeBilinearProgram{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,o,i,u]=e;this.outputShape=[s,t,n,u];const c=[r&&t>1?o-1:o,r&&n>1?i-1:i],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class ResizeBilinearPackedProgram{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,o,i,u]=e;this.outputShape=[s,t,n,u];const c=[r&&t>1?o-1:o,r&&n>1?i-1:i],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]},\n          ${c[1]/l[1]});\n      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const Oh={kernelName:s.pc,backendName:"webgl",kernelFunc:function ResizeBilinear_resizeBilinear(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:o,halfPixelCenters:i,size:u}=r,[c,l]=u,d=Object(s.Ld)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new ResizeBilinearPackedProgram(a.shape,c,l,o,i):new ResizeBilinearProgram(a.shape,c,l,o,i);return n.runWebGLProgram(d,[a],"float32")}};class ResizeBilinearBackpropProgram{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,o]=e,i=[n&&s>1?r-1:r,n&&o>1?a-1:a],u=[n&&s>1?s-1:s,n&&o>1?o-1:o],c=i[0]/u[0],l=i[1]/u[1],d=1/c,p=1/l,h=2*Math.ceil(d)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${l});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const _h={kernelName:s.qc,backendName:"webgl",kernelFunc:function ResizeBilinearGrad_resizeBilinearGrad(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:o}=r,i=new ResizeBilinearBackpropProgram(s.shape,a.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}};class ResizeNearestNeighborProgram{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,o,i,u]=e;this.outputShape=[s,t,n,u];const c=[r&&t>1?o-1:o,r&&n>1?i-1:i],l=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";let p;p=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}const Ih={kernelName:s.rc,backendName:"webgl",kernelFunc:function ResizeNearestNeighbor_resizeNearestNeighbor(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:o,size:i}=r,[u,c]=i,l=new ResizeNearestNeighborProgram(a.shape,u,c,s,o);return n.runWebGLProgram(l,[a],a.dtype)}};class ResizeNearestNeigborBackpropProgram{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,o]=e,i=[n&&s>1?r-1:r,n&&o>1?a-1:a],u=[n&&s>1?s-1:s,n&&o>1?o-1:o],c=i[0]/u[0],l=i[1]/u[1],d=1/c,p=1/l,h=2*Math.ceil(d)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${l});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${i[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${i[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const Sh={kernelName:s.sc,backendName:"webgl",kernelFunc:function ResizeNearestNeighborGrad_resizeNearestNeighborGrad(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:o}=r,i=new ResizeNearestNeigborBackpropProgram(s.shape,a.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}};class reverse_gpu_ReverseProgram{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),a=getCoordsDataType(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class reverse_packed_gpu_ReversePackedProgram{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=getChannels("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,o=getCoordsDataType(n);function getChannel(n){const r=e.map(((r,a)=>function getInCoord(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${o} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function getR(e){return getChannel(e)}(r.slice())};\n          if(${a}){\n            result.g = ${function getG(e){return e[n-1]="("+e[n-1]+" + 1)",getChannel(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function getB(e){return e[n-2]="("+e[n-2]+" + 1)",getChannel(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function getA(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",getChannel(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const Nh={kernelName:s.tc,backendName:"webgl",kernelFunc:function kernels_Reverse_reverse(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:o}=r,i=a.shape.length,u=s.of.parseAxisParam(o,a.shape);if(0===i)return kernels_Identity_identity({inputs:{x:a},backend:n});const c=Object(s.Ld)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new reverse_packed_gpu_ReversePackedProgram(a.shape,u):new reverse_gpu_ReverseProgram(a.shape,u);return n.runWebGLProgram(c,[a],a.dtype)}};class RotateProgram{constructor(e,t){this.variableNames=["Image"],this.outputShape=[];const n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        uniform vec4 params;\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}getCustomSetupFunc(e,t,n,r){return(a,s)=>{null==this.paramsLoc&&(this.paramsLoc=a.getUniformLocationNoThrow(s,"params")),a.gl.uniform4f(this.paramsLoc,e,t,n,r)}}}const Ch={kernelName:s.uc,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:o,center:i}=t,u=n,c=new RotateProgram(r.shape,o),[l,d]=s.md.getImageCenter(i,r.shape[1],r.shape[2]),p=c.getCustomSetupFunc(l,d,Math.sin(a),Math.cos(a));return u.runWebGLProgram(c,[r],r.dtype,p)}},Th=kernel_funcs_utils_unaryKernelFunc({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),Ah={kernelName:s.vc,backendName:"webgl",kernelFunc:Th},Eh=kernel_funcs_utils_unaryKernelFunc({opSnippet:"return inversesqrt(x);",cpuKernelImpl:Uc}),jh={kernelName:s.wc,backendName:"webgl",kernelFunc:Eh};class scatter_gpu_ScatterProgram{constructor(e,t,n,r,a,s,o=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const i=getCoordsDataType(a.length),u=getCoordsDataType(s.length);let c="";1===n?c="i":2===n&&(c="i, j");const l=`getIndices(${c})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const p=`getUpdates(${d})`,h=t>1?"strides[j]":"strides";this.userCode=`\n        ${i} strides = ${i}(${a});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${l});\n              flattenedIndex += index * ${h};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const Rh={kernelName:s.xc,backendName:"webgl",kernelFunc:function ScatterNd_scatterNd(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:o}=t,{shape:i}=r,{sliceRank:u,numUpdates:c,sliceSize:l,strides:d,outputSize:p}=s.md.calculateShapes(o,a,i),h=[p/l,l];if(0===p)return n.makeTensorInfo(i,a.dtype);const f=kernels_Reshape_reshape({inputs:{x:a},backend:n,attrs:{shape:[c,u]}}),m=kernels_Reshape_reshape({inputs:{x:o},backend:n,attrs:{shape:[c,l]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0])),b=new scatter_gpu_ScatterProgram(c,u,f.shape.length,m.shape.length,d,h),y=n.runWebGLProgram(b,[m,f,g],m.dtype),x=kernels_Reshape_reshape({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(g),x}};class select_gpu_SelectProgram{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],o=[];for(let r=0;r<t.length;r++)o.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),a=o.join()}const s=getCoordsDataType(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}const $h={kernelName:s.yc,backendName:"webgl",kernelFunc:function kernels_Select_select(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:o}=t,i=new select_gpu_SelectProgram(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,o],Object(s.nf)(a.dtype,o.dtype))}},Fh=kernel_funcs_utils_unaryKernelFunc({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${s.md.SELU_SCALEALPHA};\n  float scale = ${s.md.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),Dh={kernelName:s.zc,backendName:"webgl",kernelFunc:Fh},zh=kernel_funcs_utils_unaryKernelFunc({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),Ph={kernelName:s.Ac,backendName:"webgl",kernelFunc:zh},Lh=kernel_funcs_utils_unaryKernelFunc({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),Mh={kernelName:s.Bc,backendName:"webgl",kernelFunc:Lh},Bh=kernel_funcs_utils_unaryKernelFunc({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),Vh={kernelName:s.Cc,backendName:"webgl",kernelFunc:Bh},Wh=kernel_funcs_utils_unaryKernelFunc({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),Uh={kernelName:s.Dc,backendName:"webgl",kernelFunc:Wh},Gh=kernel_funcs_utils_unaryKernelFunc({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),Hh={kernelName:s.Gc,backendName:"webgl",kernelFunc:Gh},Kh={kernelName:s.Hc,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:o,paddings:i}=r;s.of.assert(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const u=o.reduce(((e,t)=>e*t)),c=[[0,0]];c.push(...i);for(let s=1+o.length;s<a.shape.length;++s)c.push([0,0]);const l=[],d=PadV2_padV2({inputs:{x:a},backend:n,attrs:{paddings:c,constantValue:0}}),p=s.md.getReshaped(d.shape,o,u,!1),h=s.md.getPermuted(p.length,o.length,!1),f=s.md.getReshapedPermuted(d.shape,o,u,!1),m=kernels_Reshape_reshape({inputs:{x:d},backend:n,attrs:{shape:p}}),g=kernels_Transpose_transpose({inputs:{x:m},backend:n,attrs:{perm:h}}),b=kernels_Reshape_reshape({inputs:{x:g},backend:n,attrs:{shape:f}});return l.push(d),l.push(m),l.push(g),l.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}};const qh={kernelName:s.Ic,backendName:"webgl",kernelFunc:function SparseToDense_sparseToDense(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:o,defaultValue:i}=t,{outputShape:u}=r,{sliceRank:c,numUpdates:l,strides:d,outputSize:p}=s.md.calculateShapes(o,a,u),h=new scatter_gpu_ScatterProgram(l,c,a.shape.length,o.shape.length,d,[p,1],!1),f=n.runWebGLProgram(h,[o,a,i],o.dtype),m=kernels_Reshape_reshape({inputs:{x:f},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(f),m}};const Xh={kernelName:s.Jc,backendName:"webgl",kernelFunc:function SplitV_splitV(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:o,axis:i}=r,u=s.of.parseAxisParam(i,a.shape)[0],c=s.md.prepareSplitSize(a,o,u),l=a.shape.length,d=new Array(l).fill(0),p=a.shape.slice();return c.map((e=>{const t=[...p];t[u]=e;const r=kernels_Slice_slice({inputs:{x:a},backend:n,attrs:{begin:d,size:t}});return d[u]+=e,r}))}},Jh=kernel_funcs_utils_unaryKernelFunc({opSnippet:"return sqrt(x);"}),Yh={kernelName:s.Kc,backendName:"webgl",kernelFunc:Jh},Zh=kernel_funcs_utils_unaryKernelFunc({opSnippet:"return x * x;"}),Qh={kernelName:s.Lc,backendName:"webgl",kernelFunc:Zh},ef="return (a - b) * (a - b);",tf=kernel_funcs_utils_binaryKernelFunc({opSnippet:ef,packedOpSnippet:ef}),nf={kernelName:s.Mc,backendName:"webgl",kernelFunc:tf};const rf={kernelName:s.Nc,backendName:"webgl",kernelFunc:function kernels_Step_step({inputs:e,attrs:t,backend:n}){const{x:r}=e,a=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,s=new UnaryOpProgram(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}};class strided_slice_gpu_StridedSliceProgram{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=getCoordsDataType(n.length),s=getCoordsDataType(n.length);let o="";if(1===r)o="coords * strides + begin";else{let e=0;o=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${o}));\n      }\n    `}}const af={kernelName:s.Oc,backendName:"webgl",kernelFunc:function StridedSlice_stridedSlice(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:o,end:i,strides:u,beginMask:c,endMask:l,ellipsisMask:d,newAxisMask:p,shrinkAxisMask:h}=r,{nonStrided:f,$begin:m,$strides:g,size:b,newShape:y,outShape:x}=s.Re.sliceInfo(a.shape,o,i,u,c,l,d,p,h),v=kernels_Reshape_reshape({inputs:{x:a},backend:n,attrs:{shape:y}});let k;if(f){const e=kernels_Slice_slice({inputs:{x:v},backend:n,attrs:{begin:m,size:b}});k=kernels_Reshape_reshape({inputs:{x:e},backend:n,attrs:{shape:x}}),n.disposeIntermediateTensorInfo(e)}else if(x.some((e=>0===e)))k=n.makeTensorInfo(x,a.dtype,[]);else{if(n.shouldExecuteOnCPU([v])){const e=n.texData.get(v.dataId).values,t=Object(s.rd)(v.shape,v.dtype,e),r=Kc(x,t,g,m);k=n.makeTensorInfo(x,v.dtype,r.values)}else{const e=new strided_slice_gpu_StridedSliceProgram(m,g,x);k=n.runWebGLProgram(e,[v],v.dtype)}}const w=kernels_Reshape_reshape({inputs:{x:k},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(k),w}},sf=kernel_funcs_utils_unaryKernelFunc({opSnippet:"return tan(x);"}),of={kernelName:s.Rc,backendName:"webgl",kernelFunc:sf},uf=kernel_funcs_utils_unaryKernelFunc({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),cf={kernelName:s.Sc,backendName:"webgl",kernelFunc:uf};class tile_gpu_TileProgram{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;const r=getCoordsDataType(this.rank),a=function tile_gpu_getSourceCoords(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let a=0;a<e.length;a++)r.push(`imod(${n[a]}, ${e[a]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}function kernels_Tile_tile(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:o}=r;if("string"===a.dtype){const e=n.readSync(a.dataId).map((e=>s.of.decodeString(e))),t=Object(s.rd)(a.shape,a.dtype,e),r=Xc(t,o);return n.makeTensorInfo(r.shape,r.dtype,r.values)}const i=new tile_gpu_TileProgram(a.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}const lf={kernelName:s.Vc,backendName:"webgl",kernelFunc:kernels_Tile_tile};const df={kernelName:s.Wc,backendName:"webgl",kernelFunc:function TopK_topK(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:o}=r,i=n.readSync(a.dataId),[u,c]=Jc(i,a.shape,a.dtype,s,o);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(c.shape,c.dtype,c.values)]}};class TransformProgram{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const o="nearest"===n?1:2;let i;switch(r){case"constant":i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4;break;default:i=1}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${i} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${o} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const pf={kernelName:s.Xc,backendName:"webgl",kernelFunc:function kernels_Transform_transform(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:o,fillMode:i,fillValue:u,outputShape:c}=r,[l,d,p,h]=a.shape,[f,m]=null!=c?c:[d,p],g=new TransformProgram(d,p,o,i,u,[l,f,m,h]);return n.runWebGLProgram(g,[a,s],"float32")}};const hf={kernelName:s.Zc,backendName:"webgl",kernelFunc:function kernels_Unique_unique(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;webgl_util_assertNotComplex(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=r.readSync(s.dataId),{outputValues:i,outputShape:u,indices:c}=Zc(o,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,i),r.makeTensorInfo([c.length],"int32",c)]}};const ff={kernelName:s.ad,backendName:"webgl",kernelFunc:function Unpack_unpack(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const o=a,i=o.shape.length,u=a.shape[s],c=new Array(i-1);let l=0;for(let m=0;m<i;m++)m!==s&&(c[l++]=o.shape[m]);const d=[],p=new Array(i).fill(0),h=o.shape.slice();h[s]=1;const f=new Array(u);for(let m=0;m<f.length;m++){p[s]=m;const e=kernels_Slice_slice({inputs:{x:o},backend:n,attrs:{begin:p,size:h}}),t=kernels_Reshape_reshape({inputs:{x:e},backend:n,attrs:{shape:c}});f[m]=t,d.push(e)}return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class SegmentOpProgram{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,o=s*Math.ceil(a/n);this.outputShape=[r,o];const i=4*Math.floor(n/4),u=n%4,c="\n        sumValue += dot(values, segFilter);\n    ";let l="";a%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let d="";a%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${d}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${c}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${c}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${c}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${c}\n        }\n        setOutput(sumValue);\n      }\n    `}}const mf=[Ap,Ep,yl,vl,wl,_l,Nl,Cl,Tl,Al,El,jl,$l,Dl,Ml,Pl,Vl,Ul,Wl,Gl,Hl,Kl,ql,Yl,Zl,nd,sd,od,id,al,cd,dd,pd,ld,fd,md,hd,bd,xd,vd,kd,wd,Od,Id,Sd,_d,Nd,Cd,Ad,Ed,Rd,Fd,Pd,Ld,Vd,Wd,Ud,Gd,qd,Jd,Yd,Qd,ep,tp,np,ap,ip,rl,up,ud,lp,pp,fp,il,gp,yp,xp,Op,kp,Ip,Np,Tp,jp,Dp,Fp,zp,Pp,Lp,$p,Mp,Bp,Wp,Up,Hp,Qp,fl,th,rh,sh,ih,ed,uh,lh,dh,ph,fh,ll,mh,gh,td,qp,yh,wh,vh,ml,Oh,_h,Ih,Sh,Nh,Ch,Ah,jh,Rh,$h,Dh,Ph,Mh,Vh,Uh,Jl,Zp,Hh,Kh,qh,Xh,Yh,Qh,nf,rf,af,Yp,gl,of,cf,lf,df,pf,bl,hf,ff,{kernelName:s.bd,backendName:"webgl",kernelFunc:function UnsortedSegmentSum_unsortedSegmentSum(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:o}=t,{numSegments:i}=r,u=a.shape.length,c=[];let l=0;const d=s.md.getAxesPermutation([l],u);let p=a;null!=d&&(p=kernels_Transpose_transpose({inputs:{x:a},backend:n,attrs:{perm:d}}),c.push(p),l=s.md.getInnerMostAxes(1,u)[0]);const h=s.md.segment_util.computeOutShape(p.shape,l,i),f=s.of.sizeFromShape([p.shape[l]]),m=kernels_Reshape_reshape({inputs:{x:p},backend:n,attrs:{shape:[-1,f]}});c.push(m);const g=Object(s.bf)(a.dtype),segOpCompute=(e,t,r,a,o)=>{const i=e.shape[0],u=e.shape[1],l=s.md.segment_util.segOpComputeOptimalWindowSize(u,o),d=new SegmentOpProgram({windowSize:l,inSize:u,batchSize:i,numSegments:o},t),p=n.compileAndRun(d,[e,r],a);if(c.push(p),p.shape[1]===o)return p;const h=kernels_Range_range({backend:n,attrs:{start:0,stop:o,step:1,dtype:"float32"}}),f=kernels_Tile_tile({inputs:{x:h},backend:n,attrs:{reps:[u/l]}});c.push(h),c.push(f);return segOpCompute(p,t,f,a,o)},b=kernels_Reshape_reshape({inputs:{x:segOpCompute(m,"unsortedSegmentSum",o,g,i)},backend:n,attrs:{shape:h}});let y=b;if(null!=d){c.push(b);const e=s.md.getUndoAxesPermutation(d);y=kernels_Transpose_transpose({inputs:{x:y},backend:n,attrs:{perm:e}})}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},ch];for(const Jf of mf)Object(s.Ce)(Jf);s.rf;var gf=function getDatasetById(e){var t=null;switch(e){case 0:t={title:"Monthly totals of international airline passengers.",lambda_:.14802265137037945,description:"International airline passengers (in thousands). January 1949 - December 1960.",frequency:12,data:[112,118,132,129,121,135,148,148,136,119,104,118,115,126,141,135,125,149,170,170,158,133,114,140,145,150,178,163,172,178,199,199,184,162,146,166,171,180,193,181,183,218,230,242,209,191,172,194,196,196,236,235,229,243,264,272,237,211,180,201,204,188,235,227,234,264,302,293,259,229,203,229,242,233,267,269,270,315,364,347,312,274,237,278,284,277,317,313,318,374,413,405,355,306,271,306,315,301,356,348,355,422,465,467,404,347,305,336,340,318,362,348,363,435,491,505,404,359,310,337,360,342,406,396,420,472,548,559,463,407,362,405,417,391,419,461,472,535,622,606,508,461,390,432],start:"1949-01",end:"1960-12"};break;case 1:t={lambda_:null,title:"US Electricity Monthly Total Net Generation",description:"US Electricity monthly total net generation (in billions of kilowatt hours). January 1973 - June 2013.",frequency:12,data:[160.218,143.539,148.158,139.589,147.395,161.244,173.733,177.365,156.875,154.197,148.138,153.605,157.555,142.748,150.342,142.312,153.813,156.44,178.247,174.119,152.467,152.196,150.071,160.009,164.623,147.349,155.76,146.495,153.531,162.717,177.057,179.931,155.441,155.188,153.035,169.628,178.609,156.966,164.467,153.467,157.664,173.674,186.691,186.639,165.237,164.009,169.346,184.144,196.665,162.949,169.437,157.117,169.596,181.031,199.168,196.363,176.498,166.645,167.388,184.589,198.108,173.746,173.461,160.013,175.549,188.585,202.947,206.659,185.802,176.013,176.389,192.105,209.987,186.587,183.154,170.26,178.409,186.976,202.522,205.101,180.975,179.953,177.77,188.97,200.296,188.961,187.745,169.017,176.066,189.748,217.058,215.629,191.698,178.761,178.771,195.849,206.758,179.86,185.834,172.841,178.139,203.021,220.655,210.639,187.051,181.558,175.792,195.826,209.694,180.546,187.968,172.877,177.48,186.447,210.865,205.892,180.875,173.172,173.599,184.958,195.871,172.725,182.769,170.669,174.725,191.367,220.447,230.193,195.817,183.137,183.171,212.555,216.924,189.81,200.387,181.381,192.55,209.967,221.526,229.532,195.411,191.142,190.602,200.232,228.148,198.488,195.25,185.173,197.123,205.682,227.004,226.286,202.712,194.995,192.649,219.49,217.761,192.582,197.115,186.37,197.647,215.334,242.954,225.402,206.905,197.96,196.654,213.787,223.041,194.281,202.13,189.792,206.407,225.908,248.196,247.881,213.221,203.215,200.479,220.736,238.188,217.183,214.294,196.297,208.704,233.066,257.742,267.929,220.392,210.814,209.815,232.988,246.766,233.783,241.946,222.869,234.825,250.919,273.458,275.42,242.794,235.669,234.25,274.448,255.187,229.499,244.761,229.77,241.774,268.992,287.448,290.655,258.357,244.372,231.242,255.77,269.214,228.29,240.561,227.799,254.873,269.099,294.648,292.159,256.027,245.378,241.661,254.089,267.773,239.514,247.733,233.406,242.412,261.077,293.617,281.927,259.925,244.994,244.162,267.343,271.021,248.015,261.248,234.695,244.326,275.36,312.225,311.45,264.032,250.553,252.102,272.165,289.768,249.172,257.998,240.637,252.745,294.162,311.257,307.605,266.262,256.528,251.868,269.52,279.773,252.307,261.343,244.736,264.288,286.258,330.416,345.78,277.575,263.978,261.478,285.554,296.923,270.685,275.019,251.613,282.266,302.717,327.708,329.286,283.151,271.446,269.122,284.25,300.574,258.131,272.258,258.284,272.914,299.092,344.516,332.899,301.057,284.971,271.121,296.356,295.26,260.59,286.878,261.23,299.64,328.903,361.936,357.366,318.924,284.446,267.136,297.986,315.814,274.82,298.145,280.719,300.098,328.924,376.538,364.031,305.516,283.935,271.096,295.174,327.994,294.169,301.58,285.578,322.954,339.054,356.528,368.669,312.447,289.452,284.67,319.011,332.493,282.94,300.707,278.079,300.492,327.694,357.614,370.533,306.929,294.734,278.934,305.496,319.941,281.826,302.549,289.848,307.675,341.023,381.542,374.586,331.279,307.059,296.29,324.834,341.989,299.249,304.317,285.756,307.545,328.694,374.396,381.816,323.136,306.741,297.867,331.68,346.546,314.28,308.812,290.56,327.38,345.085,377.332,368.439,335.622,312.45,302.101,341.948,343.121,298.5,317.458,289.562,315.062,363.672,402.274,404.941,350.218,316.398,306.115,348.101,328.658,307.333,318.73,297.858,330.616,364.26,410.421,407.763,332.055,321.567,309.159,336.283,353.531,323.23,320.471,303.129,330.203,362.755,393.226,421.797,355.394,332.615,314.103,346.29,362.998,325.106,324.63,305.865,325.245,373.109,402.9,388.987,338.056,318.547,310.046,343.898,354.993,300.887,310.603,289.537,311.306,347.658,372.542,381.221,327.401,307.04,296.635,350.507,360.957,319.735,312.168,287.8,327.936,375.759,409.725,408.884,346.045,307.921,306.01,362.119,363.105,313.293,318.71,302.4,323.627,367.727,418.693,406.541,337.961,308.727,304.119,335.753,340.919,310.151,309.04,295.94,337.53,361.506,416.515,396.108,334.735,312.157,305.548,334.335,348.642,309.601,325.372,298.261,322.118,356.4],start:"1973-01",end:"2013-06"};break;case 2:t={title:"UK Quarterly Gas Consumption",lambda_:-.29438615381988975,description:"Quarterly UK gas consumption (in millions of therms). 1960 Q1 - 1986 Q4",frequency:4,data:[160.1,129.7,84.8,120.1,160.1,124.9,84.8,116.9,169.7,140.9,89.7,123.3,187.3,144.1,92.9,120.1,176.1,147.3,89.7,123.3,185.7,155.3,99.3,131.3,200.1,161.7,102.5,136.1,204.9,176.1,112.1,140.9,227.3,195.3,115.3,142.5,244.9,214.5,118.5,153.7,244.9,216.1,188.9,142.5,301,196.9,136.1,267.3,317,230.5,152.1,336.2,371.4,240.1,158.5,355.4,449.9,286.6,179.3,403.4,491.5,321.8,177.7,409.8,593.9,329.8,176.1,483.5,584.3,395.4,187.3,485.1,669.2,421,216.1,509.1,827.7,467.5,209.7,542.7,840.5,414.6,217.7,670.8,848.5,437,209.7,701.2,925.3,443.4,214.5,683.6,917.3,515.5,224.1,694.8,989.4,477.1,233.7,730,1087,534.7,281.8,787.6,1163.9,613.1,347.4,782.8],start:"1960-01",end:"1986-10"};break;case 3:t={title:"Quarterly Australian Beer Production",lambda_:null,description:"Total quarterly beer production in Australia (in megalitres). 1956 Q1 - 2008 Q3.",frequency:4,data:[284,213,227,308,262,228,236,320,272,233,237,313,261,227,250,314,286,227,260,311,295,233,257,339,279,250,270,346,294,255,278,363,313,273,300,370,331,288,306,386,335,288,308,402,353,316,325,405,393,319,327,442,383,332,361,446,387,357,374,466,410,370,379,487,419,378,393,506,458,387,427,565,465,445,450,556,500,452,435,554,510,433,453,548,486,453,457,566,515,464,431,588,503,443,448,555,513,427,473,526,548,440,469,575,493,433,480,576,475,405,435,535,453,430,417,552,464,417,423,554,459,428,429,534,481,416,440,538,474,440,447,598,467,439,446,567,485,441,429,599,464,424,436,574,443,410,420,532,433,421,410,512,449,381,423,531,426,408,416,520,409,398,398,507,432,398,406,526,428,397,403,517,435,383,424,521,421,402,414,500,451,380,416,492,428,408,406,506,435,380,421,490,435,390,412,454,416,403,408,482,438,386,405,491,427,383,394,473,420,390,410,488,415,398,419,488,414,374],start:"1956-01",end:"2010-04"}}return t},bf=function boxCoxInvTransform(e,t){return s.of.assert(e instanceof s.Tc,"Input time series must be a Tensor Object."),console.assert("number"==typeof t,{value:t,errorMsg:"Input lambda parameter must be of type number:"}),s.hf((function(){return 0===t?s.Nd(e):s.we(s.fd(s.oe(e,t),1),s.Hd(1,t))}))},yf=function getStd(e,t){return s.hf((function(){return s.Ve(s.je(s.We(s.Ze(e,t))))}))},xf=function zIndexTransform(e,t,n){return s.hf((function(){return s.Hd(s.Ze(e,t),n)}))},vf=function formatDataset(e,t,n,r){var a=Math.max(n*r,t);return s.hf((function(){var o=s.Me(e,[a],[e.shape[0]-a]),i=e.shape[0]-a,u=a-t,c=s.Ae(u,u+t),l=s.Ee(s.if(c,[i]),[i,c.shape[0]]),d=s.Ae(0,l.shape[0]);l=s.fd(s.Ee(d,[d.shape[0],1]),l);var p=s.Td(e,s.sd(l,"int32")),h=e.shape[0]-n*r,f=Math.ceil((n*r-t)/r);if(f>0){var m=s.Ae(0,f*r,r);m=s.if(m,[h]),m=s.Ee(m,[h,f]);var g=s.Ee(s.Ae(0,h),[h,1]),b=s.Td(e,s.sd(s.fd(g,m),"int32"));p=s.vd([b,p],-1)}return{X:p,y:o}}))};function me(e,t){return s.hf((function(){return s.je(s.Ze(e,t))}))}var kf,wf,Of,_f,If,Sf,Nf,Cf,Tf,Af=void 0,Ef=0,jf=1,Rf=2,$f=function setup(e){kf=e.datasetParameters,wf=e.modelHyperparameters,Of=e.inputFormat,If=gf(kf.dataset),Vf(),_f=Ef},Ff=function(){var e=_asyncToGenerator(regeneratorRuntime.mark((function _callee(){return regeneratorRuntime.wrap((function _callee$(e){for(;;)switch(e.prev=e.next){case 0:e.t0=_f,e.next=e.t0===Ef?3:e.t0===Rf?9:e.t0===jf?14:17;break;case 3:return postMessage({type:"action",name:"resetLoss"}),e.next=6,Hf();case 6:return postMessage({type:"mutation",name:"updateTraining",payload:!0}),postMessage({type:"mutation",name:"updatePaused",payload:!1}),e.abrupt("break",17);case 9:return e.next=11,Hf();case 11:return postMessage({type:"mutation",name:"updateTraining",payload:!0}),postMessage({type:"mutation",name:"updatePaused",payload:!1}),e.abrupt("break",17);case 14:return postMessage({type:"mutation",name:"updatePaused",payload:!0}),Gf(),e.abrupt("break",17);case 17:case"end":return e.stop()}}),_callee)})));return function play(){return e.apply(this,arguments)}}(),Df=function changeDataSetId(e){Mf(),kf.dataset=e,s.Gd([Nf.xTrain,Nf.yTrain,Nf.xTest,Nf.yTest]),If=gf(kf.dataset),Vf()},zf=function changeDataSplit(e){Mf(),kf.split=e,Vf()},Pf=function changeInputFormat(e){Object.assign(Of,e),Mf(),Vf()},Lf=function changeHyperparameters(e){Object.assign(wf,e)},Mf=function reset(){Sf&&(Sf.stopTraining=!0),_f=Ef},Bf=function _createNeuralNet(){var e=[Of.autoregressiveLags+Of.seasonLags];Sf&&s.Gd(Sf),Sf=function getSingleModel(e,t,n,a){var o=sequential({layers:[r.dense({inputShape:e,units:t,activation:n}),r.dense({units:1})]});return o.compile({optimizer:s.jf.adam(a),loss:"meanSquaredError",metrics:["mse","mae","mape",me]}),o.summary(),console.log("Model created with success."),o}(e,wf.neurons,wf.activation,wf.learningRate)},Vf=function _prepareDataSet(){Nf=Kf(),Cf=[{onTrainBegin:Wf.bind(Af),onEpochEnd:Uf.bind(Af)}]},Wf=function onTrainBegin(){_f!==Rf&&(postMessage({type:"action",name:"resetMetrics"}),postMessage({type:"action",name:"resetPredictions"})),_f=jf},Uf=function onEpochEnd(e,t){Tf--,_f===jf&&postMessage({type:"mutation",name:"updateEpochsLeft",payload:Tf}),s.hf((function(){t.rmse=Math.sqrt(t.mse);var e=Sf.predict(Nf.xTrain),n=s.Ze(e.squeeze(),Nf.yTrain),r=Sf.evaluate(Nf.xTest,Nf.yTest,{batch_size:64});Promise.all([r[0].data(),r[1].data(),r[2].data(),r[3].data(),r[4].data(),n.data()]).then((function(e){if(_f===jf){var n={mse:e[1][0],mae:e[2][0],mape:e[3][0],me:e[4][0],rmse:Math.sqrt(e[1][0])};postMessage({type:"action",name:"onEpochEnd",payload:{metrics:t,metricsLoss:t.loss,testMetrics:n,testMetricsLoss:e[0][0],residuals:e[5]}})}})).catch((function(e){console.log("error".concat(e))}))}))},Gf=function _pauseTraining(){_f===jf&&(console.log("Model is training. We can pause it."),Sf.stopTraining=!0,_f=Rf)},Hf=function(){var e=_asyncToGenerator(regeneratorRuntime.mark((function _callee3(){return regeneratorRuntime.wrap((function _callee3$(e){for(;;)switch(e.prev=e.next){case 0:_f===Ef&&(_f=jf,Bf(),Tf=wf.epochs,postMessage({type:"mutation",name:"updateEpochsLeft",payload:Tf})),Sf.fit(Nf.xTrain,Nf.yTrain,{epochs:Tf,batchSize:wf.batchSize,validationData:[Nf.xTest,Nf.yTest],callbacks:Cf,shuffle:!0}).then(_asyncToGenerator(regeneratorRuntime.mark((function _callee2(){return regeneratorRuntime.wrap((function _callee2$(e){for(;;)switch(e.prev=e.next){case 0:if(_f===Ef){e.next=3;break}return e.next=3,qf();case 3:_f!==Ef&&_f!==jf||(_f=Ef,postMessage({type:"mutation",name:"updateTraining",payload:!1}),console.log("****** End of experiement. ******"));case 4:case"end":return e.stop()}}),_callee2)}))));case 2:case"end":return e.stop()}}),_callee3)})));return function _train(){return e.apply(this,arguments)}}(),Kf=function _getTrainTestDataset(){console.log("Reformatting dataset.");var e=If.lambda_,t=If.frequency,n=Math.max(Of.autoregressiveLags,Of.seasonLags*t)+1;return s.hf((function(){var r=s.ef(If.data);null!==e&&(r=function boxCoxTransform(e,t){return s.of.assert(e instanceof s.Tc,"Input time series must be a Tensor Object."),console.assert("number"==typeof t,{value:t,errorMsg:"Input lambda parameter must be of type number:"}),s.hf((function(){return 0===t?s.ce(e):s.Hd(s.Ze(s.we(e,t),1),t)}))}(r,e));var a=function trainTestSplit(e,t,n){return console.assert(t>=0,"The value for parameter [minLength] has to be greater than 0"),console.assert(n>0&&n<1,"The test size percentage has to be between [0-1]"),s.hf((function(){var r=parseInt(n*e.shape[0],10),a=e.shape[0]-r,o=s.sd(s.Ae(0,r),"int32"),i=s.sd(s.Ae(e.shape[0]-(a+t-1),e.shape[0]),"int32");return{xTrain:s.Td(e,o),xTest:s.Td(e,i)}}))}(r,n,kf.split/100),o=a.xTrain,i=a.xTest,u=s.je(o),c=yf(o,u),l=vf(o,Of.autoregressiveLags,Of.seasonLags,t);o=l.X,o=xf(o,u,c);var d=l.y,p=vf(i,Of.autoregressiveLags,Of.seasonLags,t);return i=p.X,{xTrain:o,yTrain:d,xTest:i=xf(i,u,c),yTest:p.y}}))},qf=function(){var e=_asyncToGenerator(regeneratorRuntime.mark((function _callee4(){return regeneratorRuntime.wrap((function _callee4$(e){for(;;)switch(e.prev=e.next){case 0:s.hf((function(){var e=Sf.predict(Nf.xTrain),t=s.Ze(e.squeeze(),Nf.yTrain),n=s.je(t),r=yf(t,n),a=Sf.predict(Nf.xTest),o=Xf(a,n,r),i=o.lowerBound,u=o.upperBound;null!==If.lambda_&&(a=bf(a,If.lambda_),i=bf(o.lowerBound,If.lambda_),u=bf(o.upperBound,If.lambda_)),Promise.resolve(t.data()).then((function(e){postMessage({type:"mutation",name:"updateResiduals",payload:e})})),Promise.all([i.data(),u.data(),a.data()]).then((function(e){var t,n={},r=_slicedToArray(e,3);n.upperBound=r[0],n.lowerBound=r[1],t=r[2],postMessage({type:"mutation",name:"updatePredictionIntervals",payload:n}),postMessage({type:"mutation",name:"updatePredictions",payload:t})})),console.log("Tensorflow memory after training"),console.log(s.ke())}));case 1:case"end":return e.stop()}}),_callee4)})));return function _forecast(){return e.apply(this,arguments)}}(),Xf=function _getPredictionIntervals(e,t,n){return s.hf((function(){var r=[500,e.shape[0]],a=s.lf(r,t=t.dataSync()[0],n=n.dataSync()[0]),o=s.fd(s.oe(e.squeeze(),s.te(r)),a);return{upperBound:s.fe(o,0),lowerBound:s.le(o,0),avgPrediction:s.je(o,0)}}))};onmessage=function(){var e=_asyncToGenerator(regeneratorRuntime.mark((function _callee5(e){return regeneratorRuntime.wrap((function _callee5$(t){for(;;)switch(t.prev=t.next){case 0:t.t0=e.data.type,t.next="setup"===t.t0?3:"start"===t.t0?5:"reset"===t.t0?8:"updateDatasetId"===t.t0?10:"updateDatasetSplit"===t.t0?12:"updateModelHyperparameters"===t.t0?14:"updateinputFormat"===t.t0?16:18;break;case 3:return $f(e.data.payload),t.abrupt("break",19);case 5:return t.next=7,Ff();case 7:return t.abrupt("break",19);case 8:return Mf(),t.abrupt("break",19);case 10:return Df(e.data.payload),t.abrupt("break",19);case 12:return zf(e.data.payload),t.abrupt("break",19);case 14:return Lf(e.data.payload),t.abrupt("break",19);case 16:return Pf(e.data.payload),t.abrupt("break",19);case 18:return t.abrupt("break",19);case 19:case"end":return t.stop()}}),_callee5)})));return function onmessage(t){return e.apply(this,arguments)}}()},ac1f:function(e,t,n){"use strict";var r=n("23e7"),a=n("9263");r({target:"RegExp",proto:!0,forced:/./.exec!==a},{exec:a})},ad6d:function(e,t,n){"use strict";var r=n("825a");e.exports=function(){var e=r(this),t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.dotAll&&(t+="s"),e.unicode&&(t+="u"),e.sticky&&(t+="y"),t}},ae6d:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({min_:function min_(e,t=null,n=!1){const o={x:Object(s.a)(e,"x","min")},i={axis:t,keepDims:n};return r.a.runKernel(a.Pb,o,i)}})},ae93:function(e,t,n){"use strict";var r,a,s,o=n("d039"),i=n("e163"),u=n("9112"),c=n("5135"),l=n("b622"),d=n("c430"),p=l("iterator"),h=!1;[].keys&&("next"in(s=[].keys())?(a=i(i(s)))!==Object.prototype&&(r=a):h=!0);var f=null==r||o((function(){var e={};return r[p].call(e)!==e}));f&&(r={}),d&&!f||c(r,p)||u(r,p,(function(){return this})),e.exports={IteratorPrototype:r,BUGGY_SAFARI_ITERATORS:h}},aeab:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},afda:function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n("a3f7"),a=n("6ad5"),s=n("9117"),o=n("36e5"),i=n("4f20"),u=n("1359"),c=n("c021"),l=n("54ef"),d=n("35c9"),p=n("a009"),h=n("e053");const f=Object(l.a)({logSumExp_:function logSumExp_(e,t=null,n=!1){const l=Object(r.a)(e,"x","logSumExp"),f=Object(a.I)(t,l.shape),m=Object(c.a)(l,f,!0),g=Object(p.a)(l,m),b=Object(i.a)(g),y=Object(h.a)(b,f),x=Object(u.a)(y),v=Object(s.a)(Object(d.a)(m,x.shape),x);if(n){const e=Object(o.e)(v.shape,f);return Object(d.a)(v,e)}return v}})},b041:function(e,t,n){"use strict";var r=n("00ee"),a=n("f5df");e.exports=r?{}.toString:function toString(){return"[object "+a(this)+"]"}},b0c0:function(e,t,n){var r=n("83ab"),a=n("9bf2").f,s=Function.prototype,o=s.toString,i=/^\s*function ([^ (]*)/,u="name";r&&!(u in s)&&a(s,u,{configurable:!0,get:function(){try{return o.call(this).match(i)[1]}catch(e){return""}}})},b21c:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),o=n("a3f7"),i=n("526f"),u=n("54ef");const c=Object(u.a)({lessEqual_:function lessEqual_(e,t){let n=Object(o.a)(e,"a","lessEqual"),u=Object(o.a)(t,"b","lessEqual");[n,u]=Object(s.makeTypesMatch)(n,u),Object(i.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernel(a.zb,c)}})},b333:function(e,t,n){"use strict";n.d(t,"a",(function(){return Environment})),n.d(t,"b",(function(){return env})),n.d(t,"c",(function(){return setEnvironmentGlobal}));var r=n("6ad5");const a="tfjsflags";class Environment{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Object(r.x)(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=function getQueryParams(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function decodeParam(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}(this.global.location.search);if(a in e){e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function parseValue(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}}function env(){return s}let s=null;function setEnvironmentGlobal(e){s=e}},b39e:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({selu_:function selu_(e){const t={x:Object(s.a)(e,"x","selu")};return r.a.runKernel(a.yc,t)}})},b500:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({reciprocal_:function reciprocal_(e){const t={x:Object(s.a)(e,"x","reciprocal")};return r.a.runKernel(a.kc,t)}})},b61d:function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var r=n("6ad5"),a=n("0777"),s=n("649e"),o=n("24b0"),i=n("54ef"),u=n("d7b0"),c=n("35c9"),l=n("6d3c"),d=n("45bb"),p=n("5a2c"),h=n("a09b"),f=n("1ab7");const m=Object(i.a)({rfft_:function rfft_(e,t){Object(r.b)("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const i=e.size/n;let m;if(null!=t&&t<n){const r=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,m=Object(l.a)(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,m=Object(s.a)([e,Object(p.a)(r)],e.shape.length-1),n=t}else m=e;const g=Object(h.a)(m),b=Object(c.a)(Object(a.a)(m,g),[i,n]),y=Object(f.a)(b),x=Math.floor(n/2)+1,v=Object(u.a)(y),k=Object(o.a)(y),w=Object(d.a)(v,[x,n-x],v.shape.length-1),O=Object(d.a)(k,[x,n-x],k.shape.length-1),_=m.shape.slice();return _[m.shape.length-1]=x,Object(c.a)(Object(a.a)(w[0],O[0]),_)}})},b622:function(e,t,n){var r=n("da84"),a=n("5692"),s=n("5135"),o=n("90e3"),i=n("4930"),u=n("fdbf"),c=a("wks"),l=r.Symbol,d=u?l:l&&l.withoutSetter||o;e.exports=function(e){return s(c,e)&&(i||"string"==typeof c[e])||(i&&s(l,e)?c[e]=l[e]:c[e]=d("Symbol."+e)),c[e]}},b639:function(e,t,n){"use strict";(function(e){var r=n("1fb5"),a=n("9152"),s=n("2335");function kMaxLength(){return Buffer.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function createBuffer(e,t){if(kMaxLength()<t)throw new RangeError("Invalid typed array length");return Buffer.TYPED_ARRAY_SUPPORT?(e=new Uint8Array(t)).__proto__=Buffer.prototype:(null===e&&(e=new Buffer(t)),e.length=t),e}function Buffer(e,t,n){if(!(Buffer.TYPED_ARRAY_SUPPORT||this instanceof Buffer))return new Buffer(e,t,n);if("number"==typeof e){if("string"==typeof t)throw new Error("If encoding is specified then the first argument must be a string");return allocUnsafe(this,e)}return from(this,e,t,n)}function from(e,t,n,r){if("number"==typeof t)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer?function fromArrayBuffer(e,t,n,r){if(t.byteLength,n<0||t.byteLength<n)throw new RangeError("'offset' is out of bounds");if(t.byteLength<n+(r||0))throw new RangeError("'length' is out of bounds");t=void 0===n&&void 0===r?new Uint8Array(t):void 0===r?new Uint8Array(t,n):new Uint8Array(t,n,r);Buffer.TYPED_ARRAY_SUPPORT?(e=t).__proto__=Buffer.prototype:e=fromArrayLike(e,t);return e}(e,t,n,r):"string"==typeof t?function fromString(e,t,n){"string"==typeof n&&""!==n||(n="utf8");if(!Buffer.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var r=0|byteLength(t,n),a=(e=createBuffer(e,r)).write(t,n);a!==r&&(e=e.slice(0,a));return e}(e,t,n):function fromObject(e,t){if(Buffer.isBuffer(t)){var n=0|checked(t.length);return 0===(e=createBuffer(e,n)).length||t.copy(e,0,0,n),e}if(t){if("undefined"!=typeof ArrayBuffer&&t.buffer instanceof ArrayBuffer||"length"in t)return"number"!=typeof t.length||function isnan(e){return e!=e}(t.length)?createBuffer(e,0):fromArrayLike(e,t);if("Buffer"===t.type&&s(t.data))return fromArrayLike(e,t.data)}throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(e,t)}function assertSize(e){if("number"!=typeof e)throw new TypeError('"size" argument must be a number');if(e<0)throw new RangeError('"size" argument must not be negative')}function allocUnsafe(e,t){if(assertSize(t),e=createBuffer(e,t<0?0:0|checked(t)),!Buffer.TYPED_ARRAY_SUPPORT)for(var n=0;n<t;++n)e[n]=0;return e}function fromArrayLike(e,t){var n=t.length<0?0:0|checked(t.length);e=createBuffer(e,n);for(var r=0;r<n;r+=1)e[r]=255&t[r];return e}function checked(e){if(e>=kMaxLength())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+kMaxLength().toString(16)+" bytes");return 0|e}function byteLength(e,t){if(Buffer.isBuffer(e))return e.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!=typeof e&&(e=""+e);var n=e.length;if(0===n)return 0;for(var r=!1;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return utf8ToBytes(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return base64ToBytes(e).length;default:if(r)return utf8ToBytes(e).length;t=(""+t).toLowerCase(),r=!0}}function slowToString(e,t,n){var r=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return hexSlice(this,t,n);case"utf8":case"utf-8":return utf8Slice(this,t,n);case"ascii":return asciiSlice(this,t,n);case"latin1":case"binary":return latin1Slice(this,t,n);case"base64":return base64Slice(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return utf16leSlice(this,t,n);default:if(r)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),r=!0}}function swap(e,t,n){var r=e[t];e[t]=e[n],e[n]=r}function bidirectionalIndexOf(e,t,n,r,a){if(0===e.length)return-1;if("string"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=a?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(a)return-1;n=e.length-1}else if(n<0){if(!a)return-1;n=0}if("string"==typeof t&&(t=Buffer.from(t,r)),Buffer.isBuffer(t))return 0===t.length?-1:arrayIndexOf(e,t,n,r,a);if("number"==typeof t)return t&=255,Buffer.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?a?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):arrayIndexOf(e,[t],n,r,a);throw new TypeError("val must be string, number or Buffer")}function arrayIndexOf(e,t,n,r,a){var s,o=1,i=e.length,u=t.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(e.length<2||t.length<2)return-1;o=2,i/=2,u/=2,n/=2}function read(e,t){return 1===o?e[t]:e.readUInt16BE(t*o)}if(a){var c=-1;for(s=n;s<i;s++)if(read(e,s)===read(t,-1===c?0:s-c)){if(-1===c&&(c=s),s-c+1===u)return c*o}else-1!==c&&(s-=s-c),c=-1}else for(n+u>i&&(n=i-u),s=n;s>=0;s--){for(var l=!0,d=0;d<u;d++)if(read(e,s+d)!==read(t,d)){l=!1;break}if(l)return s}return-1}function hexWrite(e,t,n,r){n=Number(n)||0;var a=e.length-n;r?(r=Number(r))>a&&(r=a):r=a;var s=t.length;if(s%2!=0)throw new TypeError("Invalid hex string");r>s/2&&(r=s/2);for(var o=0;o<r;++o){var i=parseInt(t.substr(2*o,2),16);if(isNaN(i))return o;e[n+o]=i}return o}function utf8Write(e,t,n,r){return blitBuffer(utf8ToBytes(t,e.length-n),e,n,r)}function asciiWrite(e,t,n,r){return blitBuffer(function asciiToBytes(e){for(var t=[],n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}(t),e,n,r)}function latin1Write(e,t,n,r){return asciiWrite(e,t,n,r)}function base64Write(e,t,n,r){return blitBuffer(base64ToBytes(t),e,n,r)}function ucs2Write(e,t,n,r){return blitBuffer(function utf16leToBytes(e,t){for(var n,r,a,s=[],o=0;o<e.length&&!((t-=2)<0);++o)r=(n=e.charCodeAt(o))>>8,a=n%256,s.push(a),s.push(r);return s}(t,e.length-n),e,n,r)}function base64Slice(e,t,n){return 0===t&&n===e.length?r.fromByteArray(e):r.fromByteArray(e.slice(t,n))}function utf8Slice(e,t,n){n=Math.min(e.length,n);for(var r=[],a=t;a<n;){var s,i,u,c,l=e[a],d=null,p=l>239?4:l>223?3:l>191?2:1;if(a+p<=n)switch(p){case 1:l<128&&(d=l);break;case 2:128==(192&(s=e[a+1]))&&(c=(31&l)<<6|63&s)>127&&(d=c);break;case 3:s=e[a+1],i=e[a+2],128==(192&s)&&128==(192&i)&&(c=(15&l)<<12|(63&s)<<6|63&i)>2047&&(c<55296||c>57343)&&(d=c);break;case 4:s=e[a+1],i=e[a+2],u=e[a+3],128==(192&s)&&128==(192&i)&&128==(192&u)&&(c=(15&l)<<18|(63&s)<<12|(63&i)<<6|63&u)>65535&&c<1114112&&(d=c)}null===d?(d=65533,p=1):d>65535&&(d-=65536,r.push(d>>>10&1023|55296),d=56320|1023&d),r.push(d),a+=p}return function decodeCodePointsArray(e){var t=e.length;if(t<=o)return String.fromCharCode.apply(String,e);var n="",r=0;for(;r<t;)n+=String.fromCharCode.apply(String,e.slice(r,r+=o));return n}(r)}t.Buffer=Buffer,t.SlowBuffer=function SlowBuffer(e){+e!=e&&(e=0);return Buffer.alloc(+e)},t.INSPECT_MAX_BYTES=50,Buffer.TYPED_ARRAY_SUPPORT=void 0!==e.TYPED_ARRAY_SUPPORT?e.TYPED_ARRAY_SUPPORT:function typedArraySupport(){try{var e=new Uint8Array(1);return e.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===e.foo()&&"function"==typeof e.subarray&&0===e.subarray(1,1).byteLength}catch(t){return!1}}(),t.kMaxLength=kMaxLength(),Buffer.poolSize=8192,Buffer._augment=function(e){return e.__proto__=Buffer.prototype,e},Buffer.from=function(e,t,n){return from(null,e,t,n)},Buffer.TYPED_ARRAY_SUPPORT&&(Buffer.prototype.__proto__=Uint8Array.prototype,Buffer.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&Buffer[Symbol.species]===Buffer&&Object.defineProperty(Buffer,Symbol.species,{value:null,configurable:!0})),Buffer.alloc=function(e,t,n){return function alloc(e,t,n,r){return assertSize(t),t<=0?createBuffer(e,t):void 0!==n?"string"==typeof r?createBuffer(e,t).fill(n,r):createBuffer(e,t).fill(n):createBuffer(e,t)}(null,e,t,n)},Buffer.allocUnsafe=function(e){return allocUnsafe(null,e)},Buffer.allocUnsafeSlow=function(e){return allocUnsafe(null,e)},Buffer.isBuffer=function isBuffer(e){return!(null==e||!e._isBuffer)},Buffer.compare=function compare(e,t){if(!Buffer.isBuffer(e)||!Buffer.isBuffer(t))throw new TypeError("Arguments must be Buffers");if(e===t)return 0;for(var n=e.length,r=t.length,a=0,s=Math.min(n,r);a<s;++a)if(e[a]!==t[a]){n=e[a],r=t[a];break}return n<r?-1:r<n?1:0},Buffer.isEncoding=function isEncoding(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},Buffer.concat=function concat(e,t){if(!s(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return Buffer.alloc(0);var n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;var r=Buffer.allocUnsafe(t),a=0;for(n=0;n<e.length;++n){var o=e[n];if(!Buffer.isBuffer(o))throw new TypeError('"list" argument must be an Array of Buffers');o.copy(r,a),a+=o.length}return r},Buffer.byteLength=byteLength,Buffer.prototype._isBuffer=!0,Buffer.prototype.swap16=function swap16(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)swap(this,t,t+1);return this},Buffer.prototype.swap32=function swap32(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)swap(this,t,t+3),swap(this,t+1,t+2);return this},Buffer.prototype.swap64=function swap64(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)swap(this,t,t+7),swap(this,t+1,t+6),swap(this,t+2,t+5),swap(this,t+3,t+4);return this},Buffer.prototype.toString=function toString(){var e=0|this.length;return 0===e?"":0===arguments.length?utf8Slice(this,0,e):slowToString.apply(this,arguments)},Buffer.prototype.equals=function equals(e){if(!Buffer.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===Buffer.compare(this,e)},Buffer.prototype.inspect=function inspect(){var e="",n=t.INSPECT_MAX_BYTES;return this.length>0&&(e=this.toString("hex",0,n).match(/.{2}/g).join(" "),this.length>n&&(e+=" ... ")),"<Buffer "+e+">"},Buffer.prototype.compare=function compare(e,t,n,r,a){if(!Buffer.isBuffer(e))throw new TypeError("Argument must be a Buffer");if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===r&&(r=0),void 0===a&&(a=this.length),t<0||n>e.length||r<0||a>this.length)throw new RangeError("out of range index");if(r>=a&&t>=n)return 0;if(r>=a)return-1;if(t>=n)return 1;if(this===e)return 0;for(var s=(a>>>=0)-(r>>>=0),o=(n>>>=0)-(t>>>=0),i=Math.min(s,o),u=this.slice(r,a),c=e.slice(t,n),l=0;l<i;++l)if(u[l]!==c[l]){s=u[l],o=c[l];break}return s<o?-1:o<s?1:0},Buffer.prototype.includes=function includes(e,t,n){return-1!==this.indexOf(e,t,n)},Buffer.prototype.indexOf=function indexOf(e,t,n){return bidirectionalIndexOf(this,e,t,n,!0)},Buffer.prototype.lastIndexOf=function lastIndexOf(e,t,n){return bidirectionalIndexOf(this,e,t,n,!1)},Buffer.prototype.write=function write(e,t,n,r){if(void 0===t)r="utf8",n=this.length,t=0;else if(void 0===n&&"string"==typeof t)r=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t|=0,isFinite(n)?(n|=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var a=this.length-t;if((void 0===n||n>a)&&(n=a),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var s=!1;;)switch(r){case"hex":return hexWrite(this,e,t,n);case"utf8":case"utf-8":return utf8Write(this,e,t,n);case"ascii":return asciiWrite(this,e,t,n);case"latin1":case"binary":return latin1Write(this,e,t,n);case"base64":return base64Write(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return ucs2Write(this,e,t,n);default:if(s)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),s=!0}},Buffer.prototype.toJSON=function toJSON(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var o=4096;function asciiSlice(e,t,n){var r="";n=Math.min(e.length,n);for(var a=t;a<n;++a)r+=String.fromCharCode(127&e[a]);return r}function latin1Slice(e,t,n){var r="";n=Math.min(e.length,n);for(var a=t;a<n;++a)r+=String.fromCharCode(e[a]);return r}function hexSlice(e,t,n){var r=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>r)&&(n=r);for(var a="",s=t;s<n;++s)a+=toHex(e[s]);return a}function utf16leSlice(e,t,n){for(var r=e.slice(t,n),a="",s=0;s<r.length;s+=2)a+=String.fromCharCode(r[s]+256*r[s+1]);return a}function checkOffset(e,t,n){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function checkInt(e,t,n,r,a,s){if(!Buffer.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>a||t<s)throw new RangeError('"value" argument is out of bounds');if(n+r>e.length)throw new RangeError("Index out of range")}function objectWriteUInt16(e,t,n,r){t<0&&(t=65535+t+1);for(var a=0,s=Math.min(e.length-n,2);a<s;++a)e[n+a]=(t&255<<8*(r?a:1-a))>>>8*(r?a:1-a)}function objectWriteUInt32(e,t,n,r){t<0&&(t=4294967295+t+1);for(var a=0,s=Math.min(e.length-n,4);a<s;++a)e[n+a]=t>>>8*(r?a:3-a)&255}function checkIEEE754(e,t,n,r,a,s){if(n+r>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function writeFloat(e,t,n,r,s){return s||checkIEEE754(e,0,n,4),a.write(e,t,n,r,23,4),n+4}function writeDouble(e,t,n,r,s){return s||checkIEEE754(e,0,n,8),a.write(e,t,n,r,52,8),n+8}Buffer.prototype.slice=function slice(e,t){var n,r=this.length;if((e=~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),(t=void 0===t?r:~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e),Buffer.TYPED_ARRAY_SUPPORT)(n=this.subarray(e,t)).__proto__=Buffer.prototype;else{var a=t-e;n=new Buffer(a,void 0);for(var s=0;s<a;++s)n[s]=this[s+e]}return n},Buffer.prototype.readUIntLE=function readUIntLE(e,t,n){e|=0,t|=0,n||checkOffset(e,t,this.length);for(var r=this[e],a=1,s=0;++s<t&&(a*=256);)r+=this[e+s]*a;return r},Buffer.prototype.readUIntBE=function readUIntBE(e,t,n){e|=0,t|=0,n||checkOffset(e,t,this.length);for(var r=this[e+--t],a=1;t>0&&(a*=256);)r+=this[e+--t]*a;return r},Buffer.prototype.readUInt8=function readUInt8(e,t){return t||checkOffset(e,1,this.length),this[e]},Buffer.prototype.readUInt16LE=function readUInt16LE(e,t){return t||checkOffset(e,2,this.length),this[e]|this[e+1]<<8},Buffer.prototype.readUInt16BE=function readUInt16BE(e,t){return t||checkOffset(e,2,this.length),this[e]<<8|this[e+1]},Buffer.prototype.readUInt32LE=function readUInt32LE(e,t){return t||checkOffset(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},Buffer.prototype.readUInt32BE=function readUInt32BE(e,t){return t||checkOffset(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},Buffer.prototype.readIntLE=function readIntLE(e,t,n){e|=0,t|=0,n||checkOffset(e,t,this.length);for(var r=this[e],a=1,s=0;++s<t&&(a*=256);)r+=this[e+s]*a;return r>=(a*=128)&&(r-=Math.pow(2,8*t)),r},Buffer.prototype.readIntBE=function readIntBE(e,t,n){e|=0,t|=0,n||checkOffset(e,t,this.length);for(var r=t,a=1,s=this[e+--r];r>0&&(a*=256);)s+=this[e+--r]*a;return s>=(a*=128)&&(s-=Math.pow(2,8*t)),s},Buffer.prototype.readInt8=function readInt8(e,t){return t||checkOffset(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},Buffer.prototype.readInt16LE=function readInt16LE(e,t){t||checkOffset(e,2,this.length);var n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},Buffer.prototype.readInt16BE=function readInt16BE(e,t){t||checkOffset(e,2,this.length);var n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},Buffer.prototype.readInt32LE=function readInt32LE(e,t){return t||checkOffset(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},Buffer.prototype.readInt32BE=function readInt32BE(e,t){return t||checkOffset(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},Buffer.prototype.readFloatLE=function readFloatLE(e,t){return t||checkOffset(e,4,this.length),a.read(this,e,!0,23,4)},Buffer.prototype.readFloatBE=function readFloatBE(e,t){return t||checkOffset(e,4,this.length),a.read(this,e,!1,23,4)},Buffer.prototype.readDoubleLE=function readDoubleLE(e,t){return t||checkOffset(e,8,this.length),a.read(this,e,!0,52,8)},Buffer.prototype.readDoubleBE=function readDoubleBE(e,t){return t||checkOffset(e,8,this.length),a.read(this,e,!1,52,8)},Buffer.prototype.writeUIntLE=function writeUIntLE(e,t,n,r){(e=+e,t|=0,n|=0,r)||checkInt(this,e,t,n,Math.pow(2,8*n)-1,0);var a=1,s=0;for(this[t]=255&e;++s<n&&(a*=256);)this[t+s]=e/a&255;return t+n},Buffer.prototype.writeUIntBE=function writeUIntBE(e,t,n,r){(e=+e,t|=0,n|=0,r)||checkInt(this,e,t,n,Math.pow(2,8*n)-1,0);var a=n-1,s=1;for(this[t+a]=255&e;--a>=0&&(s*=256);)this[t+a]=e/s&255;return t+n},Buffer.prototype.writeUInt8=function writeUInt8(e,t,n){return e=+e,t|=0,n||checkInt(this,e,t,1,255,0),Buffer.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[t]=255&e,t+1},Buffer.prototype.writeUInt16LE=function writeUInt16LE(e,t,n){return e=+e,t|=0,n||checkInt(this,e,t,2,65535,0),Buffer.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):objectWriteUInt16(this,e,t,!0),t+2},Buffer.prototype.writeUInt16BE=function writeUInt16BE(e,t,n){return e=+e,t|=0,n||checkInt(this,e,t,2,65535,0),Buffer.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):objectWriteUInt16(this,e,t,!1),t+2},Buffer.prototype.writeUInt32LE=function writeUInt32LE(e,t,n){return e=+e,t|=0,n||checkInt(this,e,t,4,4294967295,0),Buffer.TYPED_ARRAY_SUPPORT?(this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e):objectWriteUInt32(this,e,t,!0),t+4},Buffer.prototype.writeUInt32BE=function writeUInt32BE(e,t,n){return e=+e,t|=0,n||checkInt(this,e,t,4,4294967295,0),Buffer.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):objectWriteUInt32(this,e,t,!1),t+4},Buffer.prototype.writeIntLE=function writeIntLE(e,t,n,r){if(e=+e,t|=0,!r){var a=Math.pow(2,8*n-1);checkInt(this,e,t,n,a-1,-a)}var s=0,o=1,i=0;for(this[t]=255&e;++s<n&&(o*=256);)e<0&&0===i&&0!==this[t+s-1]&&(i=1),this[t+s]=(e/o>>0)-i&255;return t+n},Buffer.prototype.writeIntBE=function writeIntBE(e,t,n,r){if(e=+e,t|=0,!r){var a=Math.pow(2,8*n-1);checkInt(this,e,t,n,a-1,-a)}var s=n-1,o=1,i=0;for(this[t+s]=255&e;--s>=0&&(o*=256);)e<0&&0===i&&0!==this[t+s+1]&&(i=1),this[t+s]=(e/o>>0)-i&255;return t+n},Buffer.prototype.writeInt8=function writeInt8(e,t,n){return e=+e,t|=0,n||checkInt(this,e,t,1,127,-128),Buffer.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[t]=255&e,t+1},Buffer.prototype.writeInt16LE=function writeInt16LE(e,t,n){return e=+e,t|=0,n||checkInt(this,e,t,2,32767,-32768),Buffer.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):objectWriteUInt16(this,e,t,!0),t+2},Buffer.prototype.writeInt16BE=function writeInt16BE(e,t,n){return e=+e,t|=0,n||checkInt(this,e,t,2,32767,-32768),Buffer.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):objectWriteUInt16(this,e,t,!1),t+2},Buffer.prototype.writeInt32LE=function writeInt32LE(e,t,n){return e=+e,t|=0,n||checkInt(this,e,t,4,2147483647,-2147483648),Buffer.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24):objectWriteUInt32(this,e,t,!0),t+4},Buffer.prototype.writeInt32BE=function writeInt32BE(e,t,n){return e=+e,t|=0,n||checkInt(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),Buffer.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):objectWriteUInt32(this,e,t,!1),t+4},Buffer.prototype.writeFloatLE=function writeFloatLE(e,t,n){return writeFloat(this,e,t,!0,n)},Buffer.prototype.writeFloatBE=function writeFloatBE(e,t,n){return writeFloat(this,e,t,!1,n)},Buffer.prototype.writeDoubleLE=function writeDoubleLE(e,t,n){return writeDouble(this,e,t,!0,n)},Buffer.prototype.writeDoubleBE=function writeDoubleBE(e,t,n){return writeDouble(this,e,t,!1,n)},Buffer.prototype.copy=function copy(e,t,n,r){if(n||(n=0),r||0===r||(r=this.length),t>=e.length&&(t=e.length),t||(t=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);var a,s=r-n;if(this===e&&n<t&&t<r)for(a=s-1;a>=0;--a)e[a+t]=this[a+n];else if(s<1e3||!Buffer.TYPED_ARRAY_SUPPORT)for(a=0;a<s;++a)e[a+t]=this[a+n];else Uint8Array.prototype.set.call(e,this.subarray(n,n+s),t);return s},Buffer.prototype.fill=function fill(e,t,n,r){if("string"==typeof e){if("string"==typeof t?(r=t,t=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),1===e.length){var a=e.charCodeAt(0);a<256&&(e=a)}if(void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!Buffer.isEncoding(r))throw new TypeError("Unknown encoding: "+r)}else"number"==typeof e&&(e&=255);if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;var s;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"==typeof e)for(s=t;s<n;++s)this[s]=e;else{var o=Buffer.isBuffer(e)?e:utf8ToBytes(new Buffer(e,r).toString()),i=o.length;for(s=0;s<n-t;++s)this[s+t]=o[s%i]}return this};var i=/[^+\/0-9A-Za-z-_]/g;function toHex(e){return e<16?"0"+e.toString(16):e.toString(16)}function utf8ToBytes(e,t){var n;t=t||1/0;for(var r=e.length,a=null,s=[],o=0;o<r;++o){if((n=e.charCodeAt(o))>55295&&n<57344){if(!a){if(n>56319){(t-=3)>-1&&s.push(239,191,189);continue}if(o+1===r){(t-=3)>-1&&s.push(239,191,189);continue}a=n;continue}if(n<56320){(t-=3)>-1&&s.push(239,191,189),a=n;continue}n=65536+(a-55296<<10|n-56320)}else a&&(t-=3)>-1&&s.push(239,191,189);if(a=null,n<128){if((t-=1)<0)break;s.push(n)}else if(n<2048){if((t-=2)<0)break;s.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;s.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;s.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return s}function base64ToBytes(e){return r.toByteArray(function base64clean(e){if((e=function stringtrim(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}(e).replace(i,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function blitBuffer(e,t,n,r){for(var a=0;a<r&&!(a+n>=t.length||a>=e.length);++a)t[a+n]=e[a];return a}}).call(this,n("c8ba"))},b727:function(e,t,n){var r=n("0366"),a=n("44ad"),s=n("7b0b"),o=n("50c4"),i=n("65f0"),u=[].push,createMethod=function(e){var t=1==e,n=2==e,c=3==e,l=4==e,d=6==e,p=7==e,h=5==e||d;return function(f,m,g,b){for(var y,x,v=s(f),k=a(v),w=r(m,g,3),O=o(k.length),_=0,I=b||i,S=t?I(f,O):n||p?I(f,0):void 0;O>_;_++)if((h||_ in k)&&(x=w(y=k[_],_,v),e))if(t)S[_]=x;else if(x)switch(e){case 3:return!0;case 5:return y;case 6:return _;case 2:u.call(S,y)}else switch(e){case 4:return!1;case 7:u.call(S,y)}return d?-1:c||l?l:S}};e.exports={forEach:createMethod(0),map:createMethod(1),filter:createMethod(2),some:createMethod(3),every:createMethod(4),find:createMethod(5),findIndex:createMethod(6),filterOut:createMethod(7)}},b818:function(e,t,n){"use strict";function computeDilation2DInfo(e,t,n,r,a="NHWC",s){return computeConv2DInfo(e,[...t,e[3]],n,s,r,null,null,convertConv2DDataFormat(a))}function computePool2DInfo(e,t,n,r,a,s,o="channelsLast"){const[i,u]=parseTupleParam(t);let c;if("channelsLast"===o)c=[i,u,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);c=[i,u,e[1],e[1]]}return computeConv2DInfo(e,c,n,r,a,s,!1,o)}function computePool3DInfo(e,t,n,r,a,s,o="NDHWC"){const[i,u,c]=parse3TupleParam(t);let l,d;if("NDHWC"===o)d="channelsLast",l=[i,u,c,e[4],e[4]];else{if("NCDHW"!==o)throw new Error(`Unknown dataFormat ${o}`);d="channelsFirst",l=[i,u,c,e[1],e[1]]}return computeConv3DInfo(e,l,n,r,a,!1,d,s)}function computeConv2DInfo(e,t,n,r,a,s,o=!1,i="channelsLast"){let[u,c,l,d]=[-1,-1,-1,-1];if("channelsLast"===i)[u,c,l,d]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,d,c,l]=e}const[p,h,,f]=t,[m,g]=parseTupleParam(n),[b,y]=parseTupleParam(r),x=getEffectiveFilterSize(p,b),v=getEffectiveFilterSize(h,y),{padInfo:k,outHeight:w,outWidth:O}=function getPadAndOutInfo(e,t,n,r,a,s,o,i,u){let c,l,d;if("number"==typeof e){c={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function computeOutputShape2D(e,t,n,r,a){null==r&&(r=computeDefaultPad(e,t,n));const s=e[0],o=e[1],i=round((s-t+2*r)/n+1,a),u=round((o-t+2*r)/n+1,a);return[i,u]}([t,n],s,r,e,i);l=a[0],d=a[1]}else if("same"===e){l=Math.ceil(t/r),d=Math.ceil(n/a);const e=Math.max(0,(l-1)*r+s-t),i=Math.max(0,(d-1)*a+o-n),u=Math.floor(e/2),p=e-u,h=Math.floor(i/2);c={top:u,bottom:p,left:h,right:i-h,type:"SAME"}}else if("valid"===e)c={top:0,bottom:0,left:0,right:0,type:"VALID"},l=Math.ceil((t-s+1)/r),d=Math.ceil((n-o+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const p="channelsLast"===u?e[1][0]:e[2][0],h="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],m="channelsLast"===u?e[2][1]:e[3][1];c={top:p,bottom:h,left:f,right:m,type:0===p&&0===h&&0===f&&0===m?"VALID":"EXPLICIT"},l=round((t-s+p+h)/r+1,i),d=round((n-o+f+m)/a+1,i)}}return{padInfo:c,outHeight:l,outWidth:d}}(a,c,l,m,g,x,v,s,i),_=o?f*d:f;let I;return"channelsFirst"===i?I=[u,_,w,O]:"channelsLast"===i&&(I=[u,w,O,_]),{batchSize:u,dataFormat:i,inHeight:c,inWidth:l,inChannels:d,outHeight:w,outWidth:O,outChannels:_,padInfo:k,strideHeight:m,strideWidth:g,filterHeight:p,filterWidth:h,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:b,dilationWidth:y,inShape:e,outShape:I,filterShape:t}}function computeConv3DInfo(e,t,n,r,a,s=!1,o="channelsLast",i){let[u,c,l,d,p]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[u,c,l,d,p]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,p,c,l,d]=e}const[h,f,m,,g]=t,[b,y,x]=parse3TupleParam(n),[v,k,w]=parse3TupleParam(r),O=getEffectiveFilterSize(h,v),_=getEffectiveFilterSize(f,k),I=getEffectiveFilterSize(m,w),{padInfo:S,outDepth:N,outHeight:C,outWidth:T}=function get3DPadAndOutInfo(e,t,n,r,a,s,o,i,u,c,l){let d,p,h,f;if("number"==typeof e){d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const s=function computeOutputShape4D(e,t,n,r,a,s){null==a&&(a=computeDefaultPad(e,t,r));const o=e[0],i=e[1],u=e[2],c=round((o-t+2*a)/r+1,s),l=round((i-t+2*a)/r+1,s),d=round((u-t+2*a)/r+1,s);return[c,l,d,n]}([t,n,r,1],i,1,a,e,l);p=s[0],h=s[1],f=s[2]}else if("same"===e){p=Math.ceil(t/a),h=Math.ceil(n/s),f=Math.ceil(r/o);const e=(p-1)*a+i-t,l=(h-1)*s+u-n,m=(f-1)*o+c-r,g=Math.floor(e/2),b=e-g,y=Math.floor(l/2),x=l-y,v=Math.floor(m/2);d={top:y,bottom:x,left:v,right:m-v,front:g,back:b,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);d={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((t-i+1)/a),h=Math.ceil((n-u+1)/s),f=Math.ceil((r-c+1)/o)}return{padInfo:d,outDepth:p,outHeight:h,outWidth:f}}(a,c,l,d,b,y,x,O,_,I,i),A=s?g*p:g;let E;return"channelsFirst"===o?E=[u,A,N,C,T]:"channelsLast"===o&&(E=[u,N,C,T,A]),{batchSize:u,dataFormat:o,inDepth:c,inHeight:l,inWidth:d,inChannels:p,outDepth:N,outHeight:C,outWidth:T,outChannels:A,padInfo:S,strideDepth:b,strideHeight:y,strideWidth:x,filterDepth:h,filterHeight:f,filterWidth:m,effectiveFilterDepth:O,effectiveFilterHeight:_,effectiveFilterWidth:I,dilationDepth:v,dilationHeight:k,dilationWidth:w,inShape:e,outShape:E,filterShape:t}}function computeDefaultPad(e,t,n,r=1){const a=getEffectiveFilterSize(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function parseTupleParam(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function parse3TupleParam(e){return"number"==typeof e?[e,e,e]:e}function getEffectiveFilterSize(e,t){return t<=1?e:e+(e-1)*(t-1)}function round(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function tupleValuesAreOne(e){const[t,n,r]=parseTupleParam(e);return 1===t&&1===n&&1===r}function eitherStridesOrDilationsAreOne(e,t){return tupleValuesAreOne(e)||tupleValuesAreOne(t)}function convertConv2DDataFormat(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}n.d(t,"d",(function(){return computeDilation2DInfo})),n.d(t,"e",(function(){return computePool2DInfo})),n.d(t,"f",(function(){return computePool3DInfo})),n.d(t,"a",(function(){return computeConv2DInfo})),n.d(t,"b",(function(){return computeConv3DInfo})),n.d(t,"c",(function(){return computeDefaultPad})),n.d(t,"i",(function(){return tupleValuesAreOne})),n.d(t,"h",(function(){return eitherStridesOrDilationsAreOne})),n.d(t,"g",(function(){return convertConv2DDataFormat}))},b838:function(e,t,n){(function(e){var r;!function(e,a,s){function XorGen(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function copy(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function impl(e,t){var n=new XorGen(e),r=t&&t.state,prng=function(){return(n.next()>>>0)/4294967296};return prng.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},prng.int32=n.next,prng.quick=prng,r&&("object"==typeof r&&copy(r,n),prng.state=function(){return copy(n,{})}),prng}a&&a.exports?a.exports=impl:n("07d6")&&n("3c35")?void 0===(r=function(){return impl}.call(t,n,t,a))||(a.exports=r):this.xor128=impl}(0,e,n("07d6"))}).call(this,n("62e4")(e))},b9b9:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),o=n("a3f7"),i=n("526f"),u=n("54ef");const c=Object(u.a)({equal_:function equal_(e,t){let n=Object(o.a)(e,"a","equal"),u=Object(o.a)(t,"b","equal");[n,u]=Object(s.makeTypesMatch)(n,u),Object(i.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernel(a.X,c)}})},ba40:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({gatherND_:function gatherND_(e,t){const n=Object(s.a)(t,"indices","gatherND","int32"),o={params:Object(s.a)(e,"x","gatherND"),indices:n};return r.a.runKernel(a.lb,o)}})},ba53:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("deb3"),u=n("54ef"),c=n("35c9");const l=Object(u.a)({avgPool3d_:function avgPool3d_(e,t,n,u,l,d="NDHWC"){const p=Object(s.a)(e,"x","avgPool3d","float32");let h=p,f=!1;4===p.rank&&(f=!0,h=Object(c.a)(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]])),o.b(5===h.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${h.rank}.`)),o.b("NDHWC"===d,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${d}`)),null!=l&&o.b(o.v(u),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${l} but got pad ${u}.`));const m={x:h},g={filterSize:t,strides:n,pad:u,dimRoundingMode:l,dataFormat:d};let b=r.a.runKernel(a.p,m,g);return b=Object(i.a)(b,h.dtype),f?Object(c.a)(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}})},bb2d:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),o=n("a3f7"),i=n("526f"),u=n("54ef");const c=Object(u.a)({greaterEqual_:function greaterEqual_(e,t){let n=Object(o.a)(e,"a","greaterEqual"),u=Object(o.a)(t,"b","greaterEqual");[n,u]=Object(s.makeTypesMatch)(n,u),Object(i.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernel(a.ob,c)}})},bc62:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b");var s=n("a3f7"),o=n("54ef");const i=Object(o.a)({sparseToDense_:function sparseToDense_(e,t,n,o=0){const i=Object(s.a)(e,"sparseIndices","sparseToDense","int32"),u=Object(s.a)(t,"sparseValues","sparseToDense"),c=Object(s.a)(o,"defaultValue","sparseToDense",u.dtype);!function validateInput(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);const o=t.size;if(0!==t.rank&&(1!==t.rank||o!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(i,u,n,c);const l={sparseIndices:i,sparseValues:u,defaultValue:c},d={outputShape:n};return r.a.runKernel(a.Hc,l,d)}})},bdcf:function(e,t,n){"use strict";n.d(t,"b",(function(){return deepMap})),n.d(t,"d",(function(){return deepZip})),n.d(t,"f",(function(){return zipToList})),n.d(t,"c",(function(){return deepMapAndAwaitAll})),n.d(t,"e",(function(){return isIterable})),n.d(t,"a",(function(){return canTensorify}));var r=n("fa11");function deepMap(e,t){return deepMapInternal(e,t)}function deepMapInternal(e,t,n=new Map,r=new Set){if(null==e)return null;if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(isIterable(e)){const a=Array.isArray(e)?[]:{};r.add(e);for(const s in e){const o=deepMapInternal(e[s],t,n,r);a[s]=o}return r.delete(e),a}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,a.value),a.value}function deepZip(e,t=zipToList){return deepZipInternal(e,t)}function deepZipInternal(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(isIterable(r)){const a=Array.isArray(r)?[]:{};n.add(r);for(const s in r){const r=deepZipInternal(e.map((e=>e[s])),t,n);a[s]=r}return n.delete(r),a}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return a.value}function zipToList(e){return null===e?null:isIterable(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function deepMapAndAwaitAll(e,t){const n=new Map;deepMapInternal(e,t,n);for(const a of Array.from(n.keys())){const e=n.get(a);if(r.of.isPromise(e)){const t=await e;n.set(a,t)}}return deepMapInternal(e,t,n)}function isIterable(e){return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof r.Tc))}function canTensorify(e){return null==e||function isPrimitive(e){return null===e||"object"!=typeof e&&"function"!=typeof e}(e)||Array.isArray(e)||"object"==typeof e&&e instanceof r.Tc||r.of.isTypedArray(e)}},c021:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({max_:function max_(e,t=null,n=!1){const o={x:Object(s.a)(e,"x","max")},i={reductionIndices:t,keepDims:n};return r.a.runKernel(a.Hb,o,i)}})},c04e:function(e,t,n){"use strict";n.d(t,"c",(function(){return engine})),n.d(t,"e",(function(){return memory})),n.d(t,"h",(function(){return tidy})),n.d(t,"b",(function(){return dispose})),n.d(t,"d",(function(){return keep})),n.d(t,"g",(function(){return setBackend})),n.d(t,"f",(function(){return registerBackend})),n.d(t,"a",(function(){return backend}));var r=n("6ae2"),a=n("b333"),s=n("34d7"),o=n("76c2");function engine(){return r.a}function memory(){return r.a.memory()}function tidy(e,t){return r.a.tidy(e,t)}function dispose(e){Object(o.getTensorsInContainer)(e).forEach((e=>e.dispose()))}function keep(e){return r.a.keep(e)}function setBackend(e){return r.a.setBackend(e)}function registerBackend(e,t,n=1){return r.a.registerBackend(e,t,n)}function backend(){return r.a.backend}Object(s.e)((function deprecationWarn(e){Object(a.b)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}))},c04ea:function(e,t,n){var r=n("861d");e.exports=function(e,t){if(!r(e))return e;var n,a;if(t&&"function"==typeof(n=e.toString)&&!r(a=n.call(e)))return a;if("function"==typeof(n=e.valueOf)&&!r(a=n.call(e)))return a;if(!t&&"function"==typeof(n=e.toString)&&!r(a=n.call(e)))return a;throw TypeError("Can't convert object to primitive value")}},c05b:function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return a})),n.d(t,"c",(function(){return s})),n.d(t,"d",(function(){return o})),n.d(t,"e",(function(){return i})),n.d(t,"f",(function(){return u})),n.d(t,"g",(function(){return c})),n.d(t,"h",(function(){return l})),n.d(t,"i",(function(){return d})),n.d(t,"j",(function(){return p})),n.d(t,"k",(function(){return h})),n.d(t,"l",(function(){return f})),n.d(t,"n",(function(){return m})),n.d(t,"m",(function(){return g})),n.d(t,"o",(function(){return b})),n.d(t,"r",(function(){return y})),n.d(t,"p",(function(){return x})),n.d(t,"q",(function(){return v})),n.d(t,"s",(function(){return k})),n.d(t,"t",(function(){return w})),n.d(t,"u",(function(){return O})),n.d(t,"v",(function(){return _})),n.d(t,"w",(function(){return I})),n.d(t,"x",(function(){return S})),n.d(t,"y",(function(){return N})),n.d(t,"z",(function(){return C})),n.d(t,"A",(function(){return T})),n.d(t,"B",(function(){return A})),n.d(t,"C",(function(){return E})),n.d(t,"D",(function(){return j})),n.d(t,"E",(function(){return R})),n.d(t,"F",(function(){return $})),n.d(t,"G",(function(){return D})),n.d(t,"H",(function(){return z})),n.d(t,"I",(function(){return P})),n.d(t,"J",(function(){return L})),n.d(t,"L",(function(){return M})),n.d(t,"K",(function(){return B})),n.d(t,"M",(function(){return V})),n.d(t,"N",(function(){return W})),n.d(t,"O",(function(){return U})),n.d(t,"P",(function(){return G})),n.d(t,"Q",(function(){return H})),n.d(t,"R",(function(){return K})),n.d(t,"S",(function(){return q})),n.d(t,"U",(function(){return X})),n.d(t,"T",(function(){return J})),n.d(t,"jc",(function(){return Y})),n.d(t,"V",(function(){return Z})),n.d(t,"W",(function(){return Q})),n.d(t,"Y",(function(){return ee})),n.d(t,"X",(function(){return te})),n.d(t,"Z",(function(){return ne})),n.d(t,"ab",(function(){return re})),n.d(t,"bb",(function(){return ae})),n.d(t,"cb",(function(){return se})),n.d(t,"db",(function(){return oe})),n.d(t,"eb",(function(){return ie})),n.d(t,"fb",(function(){return ue})),n.d(t,"gb",(function(){return ce})),n.d(t,"ib",(function(){return le})),n.d(t,"mb",(function(){return de})),n.d(t,"lb",(function(){return pe})),n.d(t,"nb",(function(){return he})),n.d(t,"ob",(function(){return fe})),n.d(t,"qb",(function(){return ge})),n.d(t,"pb",(function(){return be})),n.d(t,"rb",(function(){return ye})),n.d(t,"sb",(function(){return xe})),n.d(t,"tb",(function(){return ve})),n.d(t,"ub",(function(){return ke})),n.d(t,"xb",(function(){return we})),n.d(t,"yb",(function(){return Oe})),n.d(t,"zb",(function(){return _e})),n.d(t,"Ab",(function(){return Ie})),n.d(t,"Bb",(function(){return Se})),n.d(t,"Cb",(function(){return Ne})),n.d(t,"Eb",(function(){return Ce})),n.d(t,"Fb",(function(){return Te})),n.d(t,"Gb",(function(){return Ae})),n.d(t,"Db",(function(){return Ee})),n.d(t,"vb",(function(){return je})),n.d(t,"wb",(function(){return Re})),n.d(t,"Hb",(function(){return $e})),n.d(t,"Nb",(function(){return Fe})),n.d(t,"Ib",(function(){return De})),n.d(t,"Lb",(function(){return ze})),n.d(t,"Jb",(function(){return Pe})),n.d(t,"Kb",(function(){return Le})),n.d(t,"Mb",(function(){return Me})),n.d(t,"Ob",(function(){return Be})),n.d(t,"Pb",(function(){return Ve})),n.d(t,"Qb",(function(){return We})),n.d(t,"Rb",(function(){return Ue})),n.d(t,"Sb",(function(){return Ge})),n.d(t,"Tb",(function(){return He})),n.d(t,"Ub",(function(){return Ke})),n.d(t,"Vb",(function(){return qe})),n.d(t,"Zb",(function(){return Xe})),n.d(t,"Wb",(function(){return Je})),n.d(t,"Xb",(function(){return Ye})),n.d(t,"Yb",(function(){return Ze})),n.d(t,"bc",(function(){return Qe})),n.d(t,"ac",(function(){return et})),n.d(t,"cc",(function(){return tt})),n.d(t,"dc",(function(){return nt})),n.d(t,"ec",(function(){return rt})),n.d(t,"fc",(function(){return at})),n.d(t,"gc",(function(){return st})),n.d(t,"hc",(function(){return ot})),n.d(t,"ic",(function(){return it})),n.d(t,"kc",(function(){return ut})),n.d(t,"lc",(function(){return ct})),n.d(t,"nc",(function(){return lt})),n.d(t,"qc",(function(){return dt})),n.d(t,"rc",(function(){return pt})),n.d(t,"oc",(function(){return ht})),n.d(t,"pc",(function(){return ft})),n.d(t,"mc",(function(){return mt})),n.d(t,"sc",(function(){return gt})),n.d(t,"uc",(function(){return bt})),n.d(t,"vc",(function(){return yt})),n.d(t,"wc",(function(){return xt})),n.d(t,"xc",(function(){return vt})),n.d(t,"yc",(function(){return kt})),n.d(t,"Dc",(function(){return wt})),n.d(t,"Bc",(function(){return Ot})),n.d(t,"Cc",(function(){return _t})),n.d(t,"Ac",(function(){return It})),n.d(t,"zc",(function(){return St})),n.d(t,"Fc",(function(){return Nt})),n.d(t,"Jc",(function(){return Ct})),n.d(t,"Pc",(function(){return Tt})),n.d(t,"Gc",(function(){return At})),n.d(t,"Ic",(function(){return Et})),n.d(t,"Ec",(function(){return jt})),n.d(t,"Lc",(function(){return Rt})),n.d(t,"Kc",(function(){return $t})),n.d(t,"Oc",(function(){return Ft})),n.d(t,"Hc",(function(){return Dt})),n.d(t,"Nc",(function(){return zt})),n.d(t,"Qc",(function(){return Pt})),n.d(t,"Rc",(function(){return Lt})),n.d(t,"Sc",(function(){return Mt})),n.d(t,"Tc",(function(){return Bt})),n.d(t,"Uc",(function(){return Vt})),n.d(t,"Vc",(function(){return Wt})),n.d(t,"Wc",(function(){return Ut})),n.d(t,"Xc",(function(){return Gt})),n.d(t,"Yc",(function(){return Ht})),n.d(t,"Zc",(function(){return Kt})),n.d(t,"Mc",(function(){return qt})),n.d(t,"hb",(function(){return Xt})),n.d(t,"tc",(function(){return Jt})),n.d(t,"ad",(function(){return Yt})),n.d(t,"jb",(function(){return Zt})),n.d(t,"kb",(function(){return Qt}));const r="Abs",a="Acos",s="Acosh",o="Add",i="AddN",u="All",c="Any",l="ArgMax",d="ArgMin",p="Asin",h="Asinh",f="Atan",m="Atanh",g="Atan2",b="AvgPool",y="AvgPoolGrad",x="AvgPool3D",v="AvgPool3DGrad",k="BatchMatMul",w="BatchToSpaceND",O="Bincount",_="BroadcastTo",I="Cast",S="Ceil",N="ClipByValue",C="Complex",T="ComplexAbs",A="Concat",E="Conv2D",j="Conv2DBackpropFilter",R="Conv2DBackpropInput",$="Conv3D",D="Conv3DBackpropFilterV2",z="Conv3DBackpropInputV2",P="Cos",L="Cosh",M="Cumsum",B="CropAndResize",V="DenseBincount",W="DepthToSpace",U="DepthwiseConv2dNative",G="DepthwiseConv2dNativeBackpropFilter",H="DepthwiseConv2dNativeBackpropInput",K="Diag",q="Dilation2D",X="Dilation2DBackpropInput",J="Dilation2DBackpropFilter",Y="RealDiv",Z="Elu",Q="EluGrad",ee="Erf",te="Equal",ne="Exp",re="ExpandDims",ae="Expm1",se="FFT",oe="Fill",ie="FlipLeftRight",ue="Floor",ce="FloorDiv",le="FusedBatchNorm",de="GatherV2",pe="GatherNd",he="Greater",fe="GreaterEqual",ge="Identity",be="IFFT",ye="Imag",xe="IsFinite",ve="IsInf",ke="IsNan",we="LeakyRelu",Oe="Less",_e="LessEqual",Ie="LinSpace",Se="Log",Ne="Log1p",Ce="LogicalAnd",Te="LogicalNot",Ae="LogicalOr",Ee="LogSoftmax",je="LRN",Re="LRNGrad",$e="Max",Fe="Maximum",De="MaxPool",ze="MaxPoolGrad",Pe="MaxPool3D",Le="MaxPool3DGrad",Me="MaxPoolWithArgmax",Be="Mean",Ve="Min",We="Minimum",Ue="MirrorPad",Ge="Mod",He="Multinomial",Ke="Multiply",qe="Neg",Xe="NotEqual",Je="NonMaxSuppressionV3",Ye="NonMaxSuppressionV4",Ze="NonMaxSuppressionV5",Qe="OnesLike",et="OneHot",tt="Pack",nt="PadV2",rt="Pow",at="Prelu",st="Prod",ot="Range",it="Real",ut="Reciprocal",ct="Relu",lt="Reshape",dt="ResizeNearestNeighbor",pt="ResizeNearestNeighborGrad",ht="ResizeBilinear",ft="ResizeBilinearGrad",mt="Relu6",gt="Reverse",bt="Round",yt="Rsqrt",xt="ScatterNd",vt="Select",kt="Selu",wt="Slice",Ot="Sin",_t="Sinh",It="Sign",St="Sigmoid",Nt="Softplus",Ct="Sqrt",Tt="Sum",At="SpaceToBatchND",Et="SplitV",jt="Softmax",Rt="SquaredDifference",$t="Square",Ft="Sub",Dt="SparseToDense",zt="StridedSlice",Pt="Tan",Lt="Tanh",Mt="Tile",Bt="TopK",Vt="Transform",Wt="Transpose",Ut="Unique",Gt="Unpack",Ht="UnsortedSegmentSum",Kt="ZerosLike",qt="Step",Xt="FromPixels",Jt="RotateWithOffset",Yt="_FusedMatMul",Zt="FusedConv2D",Qt="FusedDepthwiseConv2D"},c08f:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("54ef");const u=Object(i.a)({clipByValue_:function clipByValue_(e,t,n){const i=Object(s.a)(e,"x","clipByValue");o.b(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const u={x:i},c={clipValueMin:t,clipValueMax:n};return r.a.runKernel(a.y,u,c)}})},c170:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("54ef"),u=n("35c9");const c=Object(i.a)({dilation2d_:function dilation2d_(e,t,n,i,c=[1,1],l="NHWC"){const d=Object(s.a)(e,"x","dilation2d"),p=Object(s.a)(t,"filter","dilation2d");o.b(3===d.rank||4===d.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${d.rank}.`)),o.b(3===p.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${p.rank}.`)),o.b("NHWC"===l,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${l}`));let h=d,f=!1;3===d.rank&&(h=Object(u.a)(d,[1,d.shape[0],d.shape[1],d.shape[2]]),f=!0);const m={x:h,filter:p},g={strides:n,pad:i,dilations:c},b=r.a.runKernel(a.S,m,g);return f?Object(u.a)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},c1a2:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({cosh_:function cosh_(e){const t={x:Object(s.a)(e,"x","cosh")};return r.a.runKernel(a.J,t)}})},c22a:function(e,t,n){"use strict";n.d(t,"a",(function(){return ones}));var r=n("6ae2"),a=n("6ad5"),s=n("0777"),o=n("5a2c");function ones(e,t="float32"){if("complex64"===t){const t=ones(e,"float32"),n=Object(o.a)(e,"float32");return Object(s.a)(t,n)}const n=Object(a.D)(Object(a.O)(e),t);return r.a.makeTensor(n,e,t)}},c29b:function(e,t,n){var r;!function(a,s){var o,i=this,u=256,c=s.pow(u,6),l=s.pow(2,52),d=2*l,p=255;function seedrandom(e,t,n){var r=[],p=mixkey(flatten((t=1==t?{entropy:!0}:t||{}).entropy?[e,tostring(a)]:null==e?function autoseed(){try{var e;return o&&(e=o.randomBytes)?e=e(u):(e=new Uint8Array(u),(i.crypto||i.msCrypto).getRandomValues(e)),tostring(e)}catch(r){var t=i.navigator,n=t&&t.plugins;return[+new Date,i,n,i.screen,tostring(a)]}}():e,3),r),h=new ARC4(r),prng=function(){for(var e=h.g(6),t=c,n=0;e<l;)e=(e+n)*u,t*=u,n=h.g(1);for(;e>=d;)e/=2,t/=2,n>>>=1;return(e+n)/t};return prng.int32=function(){return 0|h.g(4)},prng.quick=function(){return h.g(4)/4294967296},prng.double=prng,mixkey(tostring(h.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&copy(r,h),e.state=function(){return copy(h,{})}),n?(s.random=e,t):e})(prng,p,"global"in t?t.global:this==s,t.state)}function ARC4(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<u;)o[a]=a++;for(a=0;a<u;a++)o[a]=o[s=p&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=p&a+1],n=n*u+o[p&(o[a]=o[s=p&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(u)}function copy(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function flatten(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(flatten(e[n],t-1))}catch(s){}return r.length?r:"string"==a?e:e+"\0"}function mixkey(e,t){for(var n,r=e+"",a=0;a<r.length;)t[p&a]=p&(n^=19*t[p&a])+r.charCodeAt(a++);return tostring(t)}function tostring(e){return String.fromCharCode.apply(0,e)}if(s.seedrandom=seedrandom,mixkey(s.random(),a),e.exports){e.exports=seedrandom;try{o=n(6)}catch(h){}}else void 0===(r=function(){return seedrandom}.call(t,n,t,e))||(e.exports=r)}([],Math)},c314:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("538e"),a=n("a3f7"),s=n("a5aa"),o=n("3bb7"),i=n("54ef"),u=n("ffb3"),c=n("9ffd");const l=Object(i.a)({logSigmoid_:function logSigmoid_(e){const t=Object(a.a)(e,"x","logSigmoid");return Object(r.a)((e=>({value:Object(o.a)(Object(c.a)(Object(o.a)(e))),gradFunc:t=>Object(s.a)(t,Object(u.a)(Object(o.a)(e)))})))(t)}})},c388:function(e,t,n){"use strict";n.d(t,"f",(function(){return iteratorFromItems})),n.d(t,"e",(function(){return iteratorFromFunction})),n.d(t,"d",(function(){return iteratorFromConcatenated})),n.d(t,"g",(function(){return iteratorFromZipped})),n.d(t,"a",(function(){return lazy_iterator_LazyIterator})),n.d(t,"b",(function(){return lazy_iterator_OneToManyIterator})),n.d(t,"c",(function(){return r}));var r,a=n("fa11"),s=n("6125"),o=n("bdcf");function cloneIfTensor(e){return e instanceof a.Tc?{value:e.clone(),recurse:!1}:Object(o.e)(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class RingBuffer{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class growing_ring_buffer_GrowingRingBuffer extends RingBuffer{constructor(){super(growing_ring_buffer_GrowingRingBuffer.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let r=0;r<n;r++)t[r]=this.get(this.wrap(this.begin+r));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function iteratorFromItems(e){return new lazy_iterator_ArrayIterator(e)}function iteratorFromFunction(e){return new FunctionCallIterator(e)}function iteratorFromConcatenated(e,t){return new ChainedIterator(e,t)}function iteratorFromZipped(e,t=r.FAIL){return new lazy_iterator_ZipIterator(e,t)}growing_ring_buffer_GrowingRingBuffer.INITIAL_CAPACITY=32;class lazy_iterator_LazyIterator{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new ErrorHandlingLazyIterator(this,e)}filter(e){return new lazy_iterator_FilterIterator(this,e)}map(e){return new lazy_iterator_MapIterator(this,e)}mapAsync(e){return new lazy_iterator_AsyncMapIterator(this,e)}serialMapAsync(e){return new lazy_iterator_AsyncMapIterator(this,e).serial()}flatmap(e){return new lazy_iterator_FlatmapIterator(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new RowMajorBatchIterator(this,e,t)}columnMajorBatch(e,t=!0,n=o.f){return this.rowMajorBatch(e,t).map((e=>Object(o.d)(e,n)))}concatenate(e,t){return new ChainedIterator(iteratorFromItems([this,e]),t)}take(e){return e<0||null==e?this:new TakeIterator(this,e)}skip(e){return e<0||null==e?this:new lazy_iterator_SkipIterator(this,e)}prefetch(e){return new lazy_iterator_PrefetchIterator(this,e)}shuffle(e,t){return new lazy_iterator_ShuffleIterator(this,e,t)}serial(){return new SerialIterator(this)}}class lazy_iterator_ArrayIterator extends lazy_iterator_LazyIterator{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:(t=e,Object(o.b)(t,cloneIfTensor)),done:!1};var t}}class FunctionCallIterator extends lazy_iterator_LazyIterator{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class SerialIterator extends lazy_iterator_LazyIterator{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class lazy_iterator_SkipIterator extends lazy_iterator_LazyIterator{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;a.Gd(e.value)}return this.upstream.next()}}class TakeIterator extends lazy_iterator_LazyIterator{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class RowMajorBatchIterator extends lazy_iterator_LazyIterator{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class lazy_iterator_FilterIterator extends lazy_iterator_LazyIterator{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;a.Gd(e.value)}}}class lazy_iterator_MapIterator extends lazy_iterator_LazyIterator{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=a.gf.getTensorsInContainer(e.value),n=this.transform(e.value),r=a.gf.getTensorsInContainer(n);for(const s of t)a.gf.isTensorInList(s,r)||s.dispose();return{value:n,done:!1}}}class ErrorHandlingLazyIterator extends lazy_iterator_LazyIterator{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class lazy_iterator_AsyncMapIterator extends lazy_iterator_LazyIterator{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=a.gf.getTensorsInContainer(e.value),n=await this.transform(e.value),r=a.gf.getTensorsInContainer(n);for(const s of t)a.gf.isTensorInList(s,r)||s.dispose();return{value:n,done:!1}}}class lazy_iterator_OneToManyIterator extends lazy_iterator_LazyIterator{constructor(){super(),this.outputQueue=new growing_ring_buffer_GrowingRingBuffer,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class lazy_iterator_FlatmapIterator extends lazy_iterator_OneToManyIterator{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=a.gf.getTensorsInContainer(e.value),n=this.transform(e.value),r=a.gf.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const s of t)a.gf.isTensorInList(s,r)||s.dispose();return!0}}class ChainedIterator extends lazy_iterator_LazyIterator{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(r||(r={}));class lazy_iterator_ZipIterator extends lazy_iterator_LazyIterator{constructor(e,t=r.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;const a=await Object(o.c)(this.iterators,(function getNext(e){if(e instanceof lazy_iterator_LazyIterator){return{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}}return{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case r.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case r.SHORTEST:return{value:null,done:!0};case r.LONGEST:}return this.count++,{value:a,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class lazy_iterator_PrefetchIterator extends lazy_iterator_LazyIterator{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new RingBuffer(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class lazy_iterator_ShuffleIterator extends lazy_iterator_PrefetchIterator{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=s.alea(n||a.of.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}},c430:function(e,t){e.exports=!1},c6b6:function(e,t){var n={}.toString;e.exports=function(e){return n.call(e).slice(8,-1)}},c6cd:function(e,t,n){var r=n("da84"),a=n("ce4e"),s="__core-js_shared__",o=r[s]||a(s,{});e.exports=o},c77c:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),o=n("a3f7"),i=n("508f"),u=n("54ef");const c=Object(u.a)({div_:function div_(e,t){let n=Object(o.a)(e,"a","div"),u=Object(o.a)(t,"b","div");if([n,u]=Object(s.makeTypesMatch)(n,u),"int32"===n.dtype&&"int32"===u.dtype)return Object(i.a)(n,u);const c={a:n,b:u};return r.a.runKernel(a.jc,c,{})}})},c8ad:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},c8ba:function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(r){"object"==typeof window&&(n=window)}e.exports=n},c912:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("54ef");const u=Object(i.a)({transpose_:function transpose_(e,t){const n=Object(s.a)(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),o.b(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{o.b(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const i={x:n},u={perm:t};return r.a.runKernel(a.Vc,i,u)}})},c9f1:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),o=n("a3f7"),i=n("54ef");const u=Object(i.a)({pow_:function pow_(e,t){let n=Object(o.a)(e,"base","pow"),i=Object(o.a)(t,"exp","pow");[n,i]=Object(s.makeTypesMatch)(n,i);const u={a:n,b:i};return r.a.runKernel(a.ec,u)}})},ca84:function(e,t,n){var r=n("5135"),a=n("fc6a"),s=n("4d64").indexOf,o=n("d012");e.exports=function(e,t){var n,i=a(e),u=0,c=[];for(n in i)!r(o,n)&&r(i,n)&&c.push(n);for(;t.length>u;)r(i,n=t[u++])&&(~s(c,n)||c.push(n));return c}},cae0:function(e,t,n){(function(e){var r;!function(e,a,s){function XorGen(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function init(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function copy(e,t){return t.x=e.x.slice(),t.i=e.i,t}function impl(e,t){null==e&&(e=+new Date);var n=new XorGen(e),r=t&&t.state,prng=function(){return(n.next()>>>0)/4294967296};return prng.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},prng.int32=n.next,prng.quick=prng,r&&(r.x&&copy(r,n),prng.state=function(){return copy(n,{})}),prng}a&&a.exports?a.exports=impl:n("07d6")&&n("3c35")?void 0===(r=function(){return impl}.call(t,n,t,a))||(a.exports=r):this.xorshift7=impl}(0,e,n("07d6"))}).call(this,n("62e4")(e))},cc12:function(e,t,n){var r=n("da84"),a=n("861d"),s=r.document,o=a(s)&&a(s.createElement);e.exports=function(e){return o?s.createElement(e):{}}},cd1f:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("a3f7"),a=n("73d3"),s=n("54ef");const o=Object(s.a)({conv2dTranspose_:function conv2dTranspose_(e,t,n,s,o,i){const u=Object(r.a)(e,"x","conv2dTranspose"),c=Object(r.a)(t,"filter","conv2dTranspose");return Object(a.a)(n,u,c,s,o,"NHWC",i)}})},ce4e:function(e,t,n){var r=n("da84"),a=n("9112");e.exports=function(e,t){try{a(r,e,t)}catch(n){r[e]=t}return t}},cef0:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),o=n("a3f7"),i=n("526f"),u=n("54ef");const c=Object(u.a)({greater_:function greater_(e,t){let n=Object(o.a)(e,"a","greater"),u=Object(o.a)(t,"b","greater");[n,u]=Object(s.makeTypesMatch)(n,u),Object(i.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernel(a.nb,c)}})},d012:function(e,t){e.exports={}},d039:function(e,t){e.exports=function(e){try{return!!e()}catch(t){return!0}}},d066:function(e,t,n){var r=n("428f"),a=n("da84"),aFunction=function(e){return"function"==typeof e?e:void 0};e.exports=function(e,t){return arguments.length<2?aFunction(r[e])||aFunction(a[e]):r[e]&&r[e][t]||a[e]&&a[e][t]}},d08e:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({reverse_:function reverse_(e,t){const n={x:Object(s.a)(e,"x","reverse")},o={dims:t};return r.a.runKernel(a.sc,n,o)}})},d1a8:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({atanh_:function atanh_(e){const t={x:Object(s.a)(e,"x","atanh")};return r.a.runKernel(a.n,t)}})},d1e7:function(e,t,n){"use strict";var r={}.propertyIsEnumerable,a=Object.getOwnPropertyDescriptor,s=a&&!r.call({1:2},1);t.f=s?function propertyIsEnumerable(e){var t=a(this,e);return!!t&&t.enumerable}:r},d1f4:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("a3f7"),a=n("6ad5"),s=n("54ef"),o=n("35c9");const i=Object(s.a)({squeeze_:function squeeze_(e,t){const n=Object(r.a)(e,"x","squeeze");return Object(o.a)(n,Object(a.Q)(n.shape,t).newShape)}})},d25f:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("a3f7"),a=n("526f"),s=n("e333"),o=n("ef00"),i=n("f183"),u=n("54ef");const c=Object(u.a)({logicalXor_:function logicalXor_(e,t){const n=Object(r.a)(e,"a","logicalXor","bool"),u=Object(r.a)(t,"b","logicalXor","bool");return Object(a.a)(n.shape,u.shape),Object(s.a)(Object(i.a)(e,t),Object(o.a)(Object(s.a)(e,t)))}})},d28b:function(e,t,n){n("746f")("iterator")},d2bb:function(e,t,n){var r=n("825a"),a=n("3bbe");e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,n={};try{(e=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set).call(n,[]),t=n instanceof Array}catch(s){}return function setPrototypeOf(n,s){return r(n),a(s),t?e.call(n,s):n.__proto__=s,n}}():void 0)},d303:function(e,t,n){"use strict";n.d(t,"a",(function(){return getRegisteredOp}));const r={};function getRegisteredOp(e){return r[e]}},d30a:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({tan_:function tan_(e){const t={x:Object(s.a)(e,"x","tan")};return r.a.runKernel(a.Qc,t)}})},d369:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({floor_:function floor_(e){const t={x:Object(s.a)(e,"x","floor")};return r.a.runKernel(a.fb,t)}})},d3b7:function(e,t,n){var r=n("00ee"),a=n("6eeb"),s=n("b041");r||a(Object.prototype,"toString",s,{unsafe:!0})},d44e:function(e,t,n){var r=n("9bf2").f,a=n("5135"),s=n("b622")("toStringTag");e.exports=function(e,t,n){e&&!a(e=n?e:e.prototype,s)&&r(e,s,{configurable:!0,value:t})}},d4de:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),o=n("a3f7"),i=n("526f"),u=n("54ef");const c=Object(u.a)({notEqual_:function notEqual_(e,t){let n=Object(o.a)(e,"a","notEqual"),u=Object(o.a)(t,"b","notEqual");[n,u]=Object(s.makeTypesMatch)(n,u),Object(i.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernel(a.Zb,c)}})},d4e4:function(e,t,n){"use strict";n.d(t,"a",(function(){return MPRandGauss})),n.d(t,"b",(function(){return UniformRandom}));var r=n("a430");n("d565");class MPRandGauss{constructor(e,t,n,a,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const o=s||Math.random();this.random=r.alea(o.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const o=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*o,t=this.mean+this.stdDev*a*o,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class UniformRandom{constructor(e=0,t=1,n,a){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==a&&(a=Math.random()),"number"==typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=r.alea(a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}},d54d:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("54ef");const u=Object(i.a)({stack_:function stack_(e,t=0){const n=Object(s.b)(e,"tensors","stack","string_or_numeric");o.b(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&o.b(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const i=n,u={axis:t};return r.a.runKernel(a.cc,i,u)}})},d556:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}]},d565:function(e,t,n){"use strict";n.d(t,"b",(function(){return testEpsilon})),n.d(t,"a",(function(){return expectNumbersClose}));var r=n("6ae2");n("a3f7"),n("6ad5"),n("eb7e");function testEpsilon(){return 32===r.a.backend.floatPrecision()?.001:.1}function expectNumbersClose(e,t,n){if(null==n&&(n=testEpsilon()),!areClose(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function areClose(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}},d784:function(e,t,n){"use strict";n("ac1f");var r=n("6eeb"),a=n("d039"),s=n("b622"),o=n("9112"),i=s("species"),u=!a((function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")})),c="$0"==="a".replace(/./,"$0"),l=s("replace"),d=!!/./[l]&&""===/./[l]("a","$0"),p=!a((function(){var e=/(?:)/,t=e.exec;e.exec=function(){return t.apply(this,arguments)};var n="ab".split(e);return 2!==n.length||"a"!==n[0]||"b"!==n[1]}));e.exports=function(e,t,n,l){var h=s(e),f=!a((function(){var t={};return t[h]=function(){return 7},7!=""[e](t)})),m=f&&!a((function(){var t=!1,n=/a/;return"split"===e&&((n={}).constructor={},n.constructor[i]=function(){return n},n.flags="",n[h]=/./[h]),n.exec=function(){return t=!0,null},n[h](""),!t}));if(!f||!m||"replace"===e&&(!u||!c||d)||"split"===e&&!p){var g=/./[h],b=n(h,""[e],(function(e,t,n,r,a){return t.exec===RegExp.prototype.exec?f&&!a?{done:!0,value:g.call(t,n,r)}:{done:!0,value:e.call(n,t,r)}:{done:!1}}),{REPLACE_KEEPS_$0:c,REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE:d}),y=b[0],x=b[1];r(String.prototype,e,y),r(RegExp.prototype,h,2==t?function(e,t){return x.call(e,this,t)}:function(e){return x.call(e,this)})}l&&o(RegExp.prototype[h],"sham",!0)}},d7b0:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({real_:function real_(e){const t={input:Object(s.a)(e,"input","real")};return r.a.runKernel(a.ic,t)}})},da84:function(e,t,n){(function(t){var check=function(e){return e&&e.Math==Math&&e};e.exports=check("object"==typeof globalThis&&globalThis)||check("object"==typeof window&&window)||check("object"==typeof self&&self)||check("object"==typeof t&&t)||function(){return this}()||Function("return this")()}).call(this,n("c8ba"))},dae8:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("54ef");const u=Object(i.a)({expandDims_:function expandDims_(e,t=0){const n=Object(s.a)(e,"x","expandDims","string_or_numeric");o.b(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const i={input:n},u={dim:t};return r.a.runKernel(a.ab,i,u)}})},db49:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({argMin_:function argMin_(e,t=0){const n={x:Object(s.a)(e,"x","argMin")},o={axis:t};return r.a.runKernel(a.i,n,o)}})},dbf3:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}]},dc14:function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return ByteChunkIterator}));var r=n("fa11"),a=n("c388"),s=n("4cfc");class ByteChunkIterator extends a.a{decodeUTF8(){return new Utf8Iterator(this)}}class Utf8Iterator extends s.a{constructor(e){super(),this.upstream=e,this.impl=new Utf8IteratorImpl(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class Utf8IteratorImpl extends a.b{constructor(e){if(super(),this.upstream=e,Object(r.Ld)().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:e}=n(4);this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const t=await this.upstream.next();let n,a;return!t.done&&(n=t.value,a=Object(r.Ld)().get("IS_BROWSER")?this.decoder.decode(n,{stream:!0}):this.decoder.write(e.from(n.buffer)),this.outputQueue.push(a),!0)}}}).call(this,n("b639").Buffer)},dc59:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({asinh_:function asinh_(e){const t={x:Object(s.a)(e,"x","asinh")};return r.a.runKernel(a.k,t)}})},dd7e:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("b818"),u=n("54ef"),c=n("35c9");const l=Object(u.a)({conv2d_:function conv2d_(e,t,n,u,l="NHWC",d=[1,1],p){const h=Object(s.a)(e,"x","conv2d"),f=Object(s.a)(t,"filter","conv2d");let m=h,g=!1;3===h.rank&&(g=!0,m=Object(c.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),o.b(4===m.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${m.rank}.`)),o.b(4===f.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${f.rank}.`)),null!=p&&o.b(o.v(u),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${p} but got pad ${u}.`));const b="NHWC"===l?m.shape[3]:m.shape[1];o.b(b===f.shape[2],(()=>`Error in conv2d: depth of input (${b}) must match input depth for filter ${f.shape[2]}.`)),o.b(i.h(n,d),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${d}'`));const y={x:m,filter:f},x={strides:n,pad:u,dataFormat:l,dilations:d,dimRoundingMode:p},v=r.a.runKernel(a.C,y,x);return g?Object(c.a)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},ddb0:function(e,t,n){var r=n("da84"),a=n("fdbc"),s=n("e260"),o=n("9112"),i=n("b622"),u=i("iterator"),c=i("toStringTag"),l=s.values;for(var d in a){var p=r[d],h=p&&p.prototype;if(h){if(h[u]!==l)try{o(h,u,l)}catch(m){h[u]=l}if(h[c]||o(h,c,d),a[d])for(var f in s)if(h[f]!==s[f])try{o(h,f,s[f])}catch(m){h[f]=s[f]}}}},de1a:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({stridedSlice_:function stridedSlice_(e,t,n,o,i=0,u=0,c=0,l=0,d=0){const p={x:Object(s.a)(e,"x","stridedSlice")},h={begin:t,end:n,strides:o,beginMask:i,endMask:u,ellipsisMask:c,newAxisMask:l,shrinkAxisMask:d};return r.a.runKernel(a.Nc,p,h)}})},deb3:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("54ef");const u=Object(i.a)({cast_:function cast_(e,t){const n=Object(s.a)(e,"x","cast");if(!o.B(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const i={x:n},u={dtype:t};return r.a.runKernel(a.w,i,u)}})},df75:function(e,t,n){var r=n("ca84"),a=n("7839");e.exports=Object.keys||function keys(e){return r(e,a)}},df7c:function(e,t,n){(function(e){function normalizeArray(e,t){for(var n=0,r=e.length-1;r>=0;r--){var a=e[r];"."===a?e.splice(r,1):".."===a?(e.splice(r,1),n++):n&&(e.splice(r,1),n--)}if(t)for(;n--;n)e.unshift("..");return e}function filter(e,t){if(e.filter)return e.filter(t);for(var n=[],r=0;r<e.length;r++)t(e[r],r,e)&&n.push(e[r]);return n}t.resolve=function(){for(var t="",n=!1,r=arguments.length-1;r>=-1&&!n;r--){var a=r>=0?arguments[r]:e.cwd();if("string"!=typeof a)throw new TypeError("Arguments to path.resolve must be strings");a&&(t=a+"/"+t,n="/"===a.charAt(0))}return(n?"/":"")+(t=normalizeArray(filter(t.split("/"),(function(e){return!!e})),!n).join("/"))||"."},t.normalize=function(e){var r=t.isAbsolute(e),a="/"===n(e,-1);return(e=normalizeArray(filter(e.split("/"),(function(e){return!!e})),!r).join("/"))||r||(e="."),e&&a&&(e+="/"),(r?"/":"")+e},t.isAbsolute=function(e){return"/"===e.charAt(0)},t.join=function(){var e=Array.prototype.slice.call(arguments,0);return t.normalize(filter(e,(function(e,t){if("string"!=typeof e)throw new TypeError("Arguments to path.join must be strings");return e})).join("/"))},t.relative=function(e,n){function trim(e){for(var t=0;t<e.length&&""===e[t];t++);for(var n=e.length-1;n>=0&&""===e[n];n--);return t>n?[]:e.slice(t,n-t+1)}e=t.resolve(e).substr(1),n=t.resolve(n).substr(1);for(var r=trim(e.split("/")),a=trim(n.split("/")),s=Math.min(r.length,a.length),o=s,i=0;i<s;i++)if(r[i]!==a[i]){o=i;break}var u=[];for(i=o;i<r.length;i++)u.push("..");return(u=u.concat(a.slice(o))).join("/")},t.sep="/",t.delimiter=":",t.dirname=function(e){if("string"!=typeof e&&(e+=""),0===e.length)return".";for(var t=e.charCodeAt(0),n=47===t,r=-1,a=!0,s=e.length-1;s>=1;--s)if(47===(t=e.charCodeAt(s))){if(!a){r=s;break}}else a=!1;return-1===r?n?"/":".":n&&1===r?"/":e.slice(0,r)},t.basename=function(e,t){var n=function basename(e){"string"!=typeof e&&(e+="");var t,n=0,r=-1,a=!0;for(t=e.length-1;t>=0;--t)if(47===e.charCodeAt(t)){if(!a){n=t+1;break}}else-1===r&&(a=!1,r=t+1);return-1===r?"":e.slice(n,r)}(e);return t&&n.substr(-1*t.length)===t&&(n=n.substr(0,n.length-t.length)),n},t.extname=function(e){"string"!=typeof e&&(e+="");for(var t=-1,n=0,r=-1,a=!0,s=0,o=e.length-1;o>=0;--o){var i=e.charCodeAt(o);if(47!==i)-1===r&&(a=!1,r=o+1),46===i?-1===t?t=o:1!==s&&(s=1):-1!==t&&(s=-1);else if(!a){n=o+1;break}}return-1===t||-1===r||0===s||1===s&&t===r-1&&t===n+1?"":e.slice(t,r)};var n="b"==="ab".substr(-1)?function(e,t,n){return e.substr(t,n)}:function(e,t,n){return t<0&&(t=e.length+t),e.substr(t,n)}}).call(this,n("4362"))},df81:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({all_:function all_(e,t=null,n=!1){const o={x:Object(s.a)(e,"x","all","bool")},i={axis:t,keepDims:n};return r.a.runKernel(a.f,o,i)}})},df8b:function(e,t,n){(function(e){var r;!function(e,a,s){function XorGen(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function copy(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function impl(e,t){var n=new XorGen(e),r=t&&t.state,prng=function(){return(n.next()>>>0)/4294967296};return prng.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},prng.int32=n.next,prng.quick=prng,r&&("object"==typeof r&&copy(r,n),prng.state=function(){return copy(n,{})}),prng}a&&a.exports?a.exports=impl:n("07d6")&&n("3c35")?void 0===(r=function(){return impl}.call(t,n,t,a))||(a.exports=r):this.xorwow=impl}(0,e,n("07d6"))}).call(this,n("62e4")(e))},e01a:function(e,t,n){"use strict";var r=n("23e7"),a=n("83ab"),s=n("da84"),o=n("5135"),i=n("861d"),u=n("9bf2").f,c=n("e893"),l=s.Symbol;if(a&&"function"==typeof l&&(!("description"in l.prototype)||void 0!==l().description)){var d={},p=function Symbol(){var e=arguments.length<1||void 0===arguments[0]?void 0:String(arguments[0]),t=this instanceof p?new l(e):void 0===e?l():l(e);return""===e&&(d[t]=!0),t};c(p,l);var h=p.prototype=l.prototype;h.constructor=p;var f=h.toString,m="Symbol(test)"==String(l("test")),g=/^Symbol\((.*)\)[^)]+$/;u(h,"description",{configurable:!0,get:function description(){var e=i(this)?this.valueOf():this,t=f.call(e);if(o(d,e))return"";var n=m?t.slice(7,-1):t.replace(g,"$1");return""===n?void 0:n}}),r({global:!0,forced:!0},{Symbol:p})}},e053:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("deb3"),i=n("54ef");const u=Object(i.a)({sum_:function sum_(e,t=null,n=!1){let i=Object(s.a)(e,"x","sum");"bool"===i.dtype&&(i=Object(o.a)(i,"int32"));const u={x:i},c={axis:t,keepDims:n};return r.a.runKernel(a.Pc,u,c)}})},e101:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("6ad5"),i=n("54ef"),u=n("35c9");const c=Object(i.a)({localResponseNormalization_:function localResponseNormalization_(e,t=5,n=1,i=1,c=.5){const l=Object(s.a)(e,"x","localResponseNormalization");o.b(4===l.rank||3===l.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${l.rank}.`)),o.b(o.v(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let d=l,p=!1;3===l.rank&&(p=!0,d=Object(u.a)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const h={x:d},f={depthRadius:t,bias:n,alpha:i,beta:c},m=r.a.runKernel(a.vb,h,f);return p?Object(u.a)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},e163:function(e,t,n){var r=n("5135"),a=n("7b0b"),s=n("f772"),o=n("e177"),i=s("IE_PROTO"),u=Object.prototype;e.exports=o?Object.getPrototypeOf:function(e){return e=a(e),r(e,i)?e[i]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?u:null}},e177:function(e,t,n){var r=n("d039");e.exports=!r((function(){function F(){}return F.prototype.constructor=null,Object.getPrototypeOf(new F)!==F.prototype}))},e1fd:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),o=n("a3f7"),i=n("526f"),u=n("54ef");const c=Object(u.a)({less_:function less_(e,t){let n=Object(o.a)(e,"a","less"),u=Object(o.a)(t,"b","less");[n,u]=Object(s.makeTypesMatch)(n,u),Object(i.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernel(a.yb,c)}})},e22c:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({oneHot_:function oneHot_(e,t,n=1,o=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const i={indices:Object(s.a)(e,"indices","oneHot","int32")},u={depth:t,onValue:n,offValue:o};return r.a.runKernel(a.ac,i,u)}})},e260:function(e,t,n){"use strict";var r=n("fc6a"),a=n("44d2"),s=n("3f8c"),o=n("69f3"),i=n("7dd0"),u="Array Iterator",c=o.set,l=o.getterFor(u);e.exports=i(Array,"Array",(function(e,t){c(this,{type:u,target:r(e),index:0,kind:t})}),(function(){var e=l(this),t=e.target,n=e.kind,r=e.index++;return!t||r>=t.length?(e.target=void 0,{value:void 0,done:!0}):"keys"==n?{value:r,done:!1}:"values"==n?{value:t[r],done:!1}:{value:[r,t[r]],done:!1}}),"values"),s.Arguments=s.Array,a("keys"),a("values"),a("entries")},e313:function(e,t,n){var r=n("24d6"),a=n("55d6"),s=n("2c94"),o=n("7941"),i=n("f585"),u=n("07e8"),c=n("c29b");c.alea=r,c.xor128=a,c.xorwow=s,c.xorshift7=o,c.xor4096=i,c.tychei=u,e.exports=c},e333:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("526f"),i=n("54ef");const u=Object(i.a)({logicalAnd_:function logicalAnd_(e,t){const n=Object(s.a)(e,"a","logicalAnd","bool"),i=Object(s.a)(t,"b","logicalAnd","bool");Object(o.a)(n.shape,i.shape);const u={a:n,b:i};return r.a.runKernel(a.Eb,u)}})},e538:function(e,t,n){var r=n("b622");t.f=r},e6fc:function(e,t,n){(function(e){var r;!function(e,a,s){function XorGen(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function init(e,t){var n,r,a,s,o,i=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(o=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(o=o+1640531527|0,a=0==(n=i[127&s]^=r+o)?a+1:0);for(a>=128&&(i[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=i[a+34&127],n=i[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,i[a]=r^n;e.w=o,e.X=i,e.i=a}(t,e)}function copy(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function impl(e,t){null==e&&(e=+new Date);var n=new XorGen(e),r=t&&t.state,prng=function(){return(n.next()>>>0)/4294967296};return prng.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},prng.int32=n.next,prng.quick=prng,r&&(r.X&&copy(r,n),prng.state=function(){return copy(n,{})}),prng}a&&a.exports?a.exports=impl:n("07d6")&&n("3c35")?void 0===(r=function(){return impl}.call(t,n,t,a))||(a.exports=r):this.xor4096=impl}(0,e,n("07d6"))}).call(this,n("62e4")(e))},e893:function(e,t,n){var r=n("5135"),a=n("56ef"),s=n("06cf"),o=n("9bf2");e.exports=function(e,t){for(var n=a(t),i=o.f,u=s.f,c=0;c<n.length;c++){var l=n[c];r(e,l)||i(e,l,u(t,l))}}},e89f:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({argMax_:function argMax_(e,t=0){const n={x:Object(s.a)(e,"x","argMax")},o={axis:t};return r.a.runKernel(a.h,n,o)}})},e8b5:function(e,t,n){var r=n("c6b6");e.exports=Array.isArray||function isArray(e){return"Array"==r(e)}},e95a:function(e,t,n){var r=n("b622"),a=n("3f8c"),s=r("iterator"),o=Array.prototype;e.exports=function(e){return void 0!==e&&(a.Array===e||o[s]===e)}},eaf4:function(e,t,n){"use strict";n.d(t,"a",(function(){return p}));var r=n("a3f7"),a=n("6ad5"),s=n("9748"),o=n("3b28"),i=n("b818"),u=n("9fe6"),c=n("54ef"),l=n("35c9"),d=n("7580");const p=Object(c.a)({pool_:function pool_(e,t,n,c,p,h){null==p&&(p=[1,1]),null==h&&(h=1),0===c&&(c="valid");const f=Object(r.a)(e,"x","maxPool");let m=f,g=!1;3===f.rank&&(g=!0,m=Object(l.a)(f,[1,f.shape[0],f.shape[1],f.shape[2]])),a.b(i.h(h,p),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${h} and dilations '${p}'`));const b=i.e(m.shape,t,h,p,c),y=[b.dilationHeight,b.dilationWidth];let x;x="same"===c?function withSpaceToBatchBasePaddings(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),a=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],a[t]]))}([b.filterHeight,b.filterWidth],y):[[0,0],[0,0]];const v=1===y[0]&&1===y[1],[k,w]=function requiredSpaceToBatchPaddings(e,t,n){const r=n.map((e=>e[0])),a=n.map((e=>e[1])),s=e.concat(r,a),o=t.map(((e,t)=>(e-s[t]%e)%e)),i=a.map(((e,t)=>e+o[t])),u=t.map(((e,t)=>[r[t],i[t]])),c=t.map(((e,t)=>[0,o[t]]));return[u,c]}([b.inHeight,b.inWidth],y,x),O=v?c:"valid",_=v?m:Object(d.a)(m,y,k),I=("avg"===n?()=>Object(s.a)(_,t,h,O):()=>Object(u.a)(_,t,h,O))(),S=v?I:Object(o.a)(I,y,w);return g?Object(l.a)(S,[S.shape[1],S.shape[2],S.shape[3]]):S}})},eb7e:function(e,t,n){"use strict";n.r(t),n.d(t,"createScalarValue",(function(){return createScalarValue})),n.d(t,"toTypedArray",(function(){return toTypedArray})),n.d(t,"now",(function(){return now})),n.d(t,"fetch",(function(){return fetch})),n.d(t,"encodeString",(function(){return encodeString})),n.d(t,"decodeString",(function(){return decodeString}));var r=n("b333"),a=n("6ad5");function createScalarValue(e,t){return"string"===t?encodeString(e):toTypedArray([e],t)}function toTypedArray(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=a.m(e)),Object(r.b)().getBool("DEBUG")&&a.h(e,t),function noConversionNeeded(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function now(){return Object(r.b)().platform.now()}function fetch(e,t){return Object(r.b)().platform.fetch(e,t)}function encodeString(e,t="utf-8"){return t=t||"utf-8",Object(r.b)().platform.encode(e,t)}function decodeString(e,t="utf-8"){return t=t||"utf-8",Object(r.b)().platform.decode(e,t)}n.d(t,"shuffle",(function(){return a.M})),n.d(t,"shuffleCombo",(function(){return a.N})),n.d(t,"clamp",(function(){return a.i})),n.d(t,"nearestLargerEven",(function(){return a.H})),n.d(t,"sum",(function(){return a.R})),n.d(t,"randUniform",(function(){return a.J})),n.d(t,"distSquared",(function(){return a.l})),n.d(t,"assert",(function(){return a.b})),n.d(t,"assertShapesMatch",(function(){return a.e})),n.d(t,"assertNonNull",(function(){return a.d})),n.d(t,"flatten",(function(){return a.m})),n.d(t,"sizeFromShape",(function(){return a.O})),n.d(t,"isScalarShape",(function(){return a.y})),n.d(t,"arraysEqual",(function(){return a.a})),n.d(t,"isInt",(function(){return a.v})),n.d(t,"tanh",(function(){return a.S})),n.d(t,"sizeToSquarishShape",(function(){return a.P})),n.d(t,"createShuffledIndices",(function(){return a.k})),n.d(t,"rightPad",(function(){return a.L})),n.d(t,"repeatedTry",(function(){return a.K})),n.d(t,"inferFromImplicitShape",(function(){return a.s})),n.d(t,"parseAxisParam",(function(){return a.I})),n.d(t,"squeezeShape",(function(){return a.Q})),n.d(t,"getTypedArrayFromDType",(function(){return a.o})),n.d(t,"getArrayFromDType",(function(){return a.n})),n.d(t,"checkConversionForErrors",(function(){return a.h})),n.d(t,"isValidDtype",(function(){return a.B})),n.d(t,"hasEncodingLoss",(function(){return a.p})),n.d(t,"isTypedArray",(function(){return a.A})),n.d(t,"bytesPerElement",(function(){return a.g})),n.d(t,"bytesFromStringArray",(function(){return a.f})),n.d(t,"isString",(function(){return a.z})),n.d(t,"isBoolean",(function(){return a.t})),n.d(t,"isNumber",(function(){return a.w})),n.d(t,"inferDtype",(function(){return a.r})),n.d(t,"isFunction",(function(){return a.u})),n.d(t,"nearestDivisor",(function(){return a.G})),n.d(t,"computeStrides",(function(){return a.j})),n.d(t,"toNestedArray",(function(){return a.T})),n.d(t,"makeOnesTypedArray",(function(){return a.D})),n.d(t,"makeZerosTypedArray",(function(){return a.F})),n.d(t,"makeZerosNestedTypedArray",(function(){return a.E})),n.d(t,"assertNonNegativeIntegerDimensions",(function(){return a.c})),n.d(t,"locToIndex",(function(){return a.C})),n.d(t,"indexToLoc",(function(){return a.q})),n.d(t,"isPromise",(function(){return a.x}))},ef00:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({logicalNot_:function logicalNot_(e){const t={x:Object(s.a)(e,"x","logicalNot","bool")};return r.a.runKernel(a.Fb,t)}})},eff7:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({cos_:function cos_(e){const t={x:Object(s.a)(e,"x","cos")};return r.a.runKernel(a.I,t)}})},f011:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},f0a9:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({clone_:function clone_(e){const t={x:Object(s.a)(e,"x","clone","string_or_numeric")};return r.a.runKernel(a.qb,t)}})},f0e5:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),o=n("a3f7"),i=n("526f"),u=n("deb3"),c=n("54ef");const l=Object(c.a)({minimum_:function minimum_(e,t){let n=Object(o.a)(e,"a","minimum"),c=Object(o.a)(t,"b","minimum");[n,c]=Object(s.makeTypesMatch)(n,c),"bool"===n.dtype&&(n=Object(u.a)(n,"int32"),c=Object(u.a)(c,"int32")),Object(i.a)(n.shape,c.shape);const l={a:n,b:c};return r.a.runKernel(a.Qb,l)}})},f183:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("526f"),i=n("54ef");const u=Object(i.a)({logicalOr_:function logicalOr_(e,t){const n=Object(s.a)(e,"a","logicalOr","bool"),i=Object(s.a)(t,"b","logicalOr","bool");Object(o.a)(n.shape,i.shape);const u={a:n,b:i};return r.a.runKernel(a.Gb,u)}})},f3ae:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("deb3"),i=n("54ef");const u=Object(i.a)({prod_:function prod_(e,t=null,n=!1){let i=Object(s.a)(e,"x","prod");"bool"===i.dtype&&(i=Object(o.a)(i,"int32"));const u={x:i},c={axis:t,keepDims:n};return r.a.runKernel(a.gc,u,c)}})},f490:function(e,t,n){"use strict";(function(e,r){let a;function getGlobalNamespace(){if(null==a){let t;if("undefined"!=typeof window)t=window;else if(void 0!==e)t=e;else if(void 0!==r)t=r;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}a=t}return a}function getGlobal(e,t){const n=function getGlobalMap(){const e=getGlobalNamespace();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}n.d(t,"b",(function(){return getGlobalNamespace})),n.d(t,"a",(function(){return getGlobal}))}).call(this,n("c8ba"),n("4362"))},f585:function(e,t,n){(function(e){var r;!function(e,a,s){function XorGen(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function init(e,t){var n,r,a,s,o,i=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(o=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(o=o+1640531527|0,a=0==(n=i[127&s]^=r+o)?a+1:0);for(a>=128&&(i[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=i[a+34&127],n=i[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,i[a]=r^n;e.w=o,e.X=i,e.i=a}(t,e)}function copy(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function impl(e,t){null==e&&(e=+new Date);var n=new XorGen(e),r=t&&t.state,prng=function(){return(n.next()>>>0)/4294967296};return prng.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},prng.int32=n.next,prng.quick=prng,r&&(r.X&&copy(r,n),prng.state=function(){return copy(n,{})}),prng}a&&a.exports?a.exports=impl:n("07d6")&&n("3c35")?void 0===(r=function(){return impl}.call(t,n,t,a))||(a.exports=r):this.xor4096=impl}(0,e,n("07d6"))}).call(this,n("62e4")(e))},f5df:function(e,t,n){var r=n("00ee"),a=n("c6b6"),s=n("b622")("toStringTag"),o="Arguments"==a(function(){return arguments}());e.exports=r?a:function(e){var t,n,r;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(n){}}(t=Object(e),s))?n:o?a(t):"Object"==(r=a(t))&&"function"==typeof t.callee?"Arguments":r}},f74c:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("34d7"),a=n("a3f7"),s=n("6ad5");const o=async function setdiff1dAsync_(e,t){const n=Object(a.a)(e,"x","setdiff1d"),o=Object(a.a)(t,"y","setdiff1d");s.b(n.dtype===o.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${o.dtype}).`)),s.b(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),s.b(1===o.rank,(()=>`y should be 1D tensor, but got y (${o.shape}).`));const i=await n.data(),u=await o.data(),c=new Set(u);let l=0;for(let r=0;r<i.length;r++)c.has(i[r])||l++;const d=new r.b([l],n.dtype),p=new r.b([l],"int32");for(let r=0,a=0;r<i.length;r++)c.has(i[r])||(d.values[a]=i[r],p.values[a]=r,a++);return[d.toTensor(),p.toTensor()]}},f757:function(e,t,n){"use strict";n.d(t,"a",(function(){return g}));var r=n("a3f7"),a=n("6ad5"),s=n("8ae0"),o=n("36e5"),i=n("c021"),u=n("ae6d"),c=n("54ef"),l=n("c9f1"),d=n("35c9"),p=n("015f"),h=n("163a"),f=n("93b2"),m=n("e053");function normImpl(e,t,n=null){if(0===e.rank)return Object(s.a)(e);if(1!==e.rank&&null===n)return normImpl(Object(d.a)(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Object(m.a)(Object(s.a)(e),n);if(t===1/0)return Object(i.a)(Object(s.a)(e),n);if(t===-1/0)return Object(u.a)(Object(s.a)(e),n);if("euclidean"===t||2===t)return Object(h.a)(Object(m.a)(Object(l.a)(Object(s.a)(e),Object(p.a)(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Object(i.a)(Object(m.a)(Object(s.a)(e),n[0]),n[1]-1);if(t===1/0)return Object(i.a)(Object(m.a)(Object(s.a)(e),n[1]),n[0]);if(t===-1/0)return Object(u.a)(Object(m.a)(Object(s.a)(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Object(h.a)(Object(m.a)(Object(f.a)(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const g=Object(c.a)({norm_:function norm_(e,t="euclidean",n=null,s=!1){const i=normImpl(e=Object(r.a)(e,"x","norm"),t,n);let u=i.shape;if(s){const t=Object(a.I)(n,e.shape);u=o.e(i.shape,t)}return Object(d.a)(i,u)}})},f772:function(e,t,n){var r=n("5692"),a=n("90e3"),s=r("keys");e.exports=function(e){return s[e]||(s[e]=a(e))}},f7f1:function(e,t,n){var r;!function(a,s){var o,i=this,u=256,c=s.pow(u,6),l=s.pow(2,52),d=2*l,p=255;function seedrandom(e,t,n){var r=[],p=mixkey(flatten((t=1==t?{entropy:!0}:t||{}).entropy?[e,tostring(a)]:null==e?function autoseed(){try{var e;return o&&(e=o.randomBytes)?e=e(u):(e=new Uint8Array(u),(i.crypto||i.msCrypto).getRandomValues(e)),tostring(e)}catch(r){var t=i.navigator,n=t&&t.plugins;return[+new Date,i,n,i.screen,tostring(a)]}}():e,3),r),h=new ARC4(r),prng=function(){for(var e=h.g(6),t=c,n=0;e<l;)e=(e+n)*u,t*=u,n=h.g(1);for(;e>=d;)e/=2,t/=2,n>>>=1;return(e+n)/t};return prng.int32=function(){return 0|h.g(4)},prng.quick=function(){return h.g(4)/4294967296},prng.double=prng,mixkey(tostring(h.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&copy(r,h),e.state=function(){return copy(h,{})}),n?(s.random=e,t):e})(prng,p,"global"in t?t.global:this==s,t.state)}function ARC4(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<u;)o[a]=a++;for(a=0;a<u;a++)o[a]=o[s=p&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=p&a+1],n=n*u+o[p&(o[a]=o[s=p&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(u)}function copy(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function flatten(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(flatten(e[n],t-1))}catch(s){}return r.length?r:"string"==a?e:e+"\0"}function mixkey(e,t){for(var n,r=e+"",a=0;a<r.length;)t[p&a]=p&(n^=19*t[p&a])+r.charCodeAt(a++);return tostring(t)}function tostring(e){return String.fromCharCode.apply(0,e)}if(s.seedrandom=seedrandom,mixkey(s.random(),a),e.exports){e.exports=seedrandom;try{o=n(2)}catch(h){}}else void 0===(r=function(){return seedrandom}.call(t,n,t,e))||(e.exports=r)}([],Math)},f8bb:function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return OperationMapper})),n.d(t,"i",(function(){return getStringParam})),n.d(t,"c",(function(){return getBoolParam})),n.d(t,"f",(function(){return getNumberParam})),n.d(t,"e",(function(){return getDtypeParam})),n.d(t,"d",(function(){return getDtypeArrayParam})),n.d(t,"k",(function(){return getTensorShapeParam})),n.d(t,"g",(function(){return getNumericArrayParam})),n.d(t,"h",(function(){return getStringArrayParam})),n.d(t,"j",(function(){return getTensorShapeArrayParam})),n.d(t,"b",(function(){return getBoolArrayParam}));var r=n("fa11"),a=n("46cc"),s=n("d303"),o=n("526c"),i=n("aeab"),u=n("c8ad"),c=n("5874"),l=n("9489"),d=n("04b8"),p=n("f011"),h=n("d556"),f=n("3d50"),m=n("6e83"),g=n("29d8"),b=n("a80f"),y=n("673d"),x=n("3bfc"),v=n("31bb"),k=n("dbf3"),w=n("113e"),O=n("9e7b");class OperationMapper{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[i,u,c,l,d,p,h,b,g,f,y,x,v,k,w,O,m].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,r=[],a=[],s=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e)),{});let u=[];const c=[];let l={},d={};null!=t&&(l=this.mapSignatureEntries(t.inputs),d=this.mapSignatureEntries(t.outputs));const p=Object.keys(i);p.forEach((e=>{const t=i[e];t.inputNames.forEach((e=>{const[n]=Object(o.b)(e);t.inputs.push(i[n]),i[n].children.push(t)}))})),0===Object.keys(d).length?p.forEach((e=>{const t=i[e];0===t.children.length&&c.push(t)})):Object.keys(d).forEach((e=>{const[t]=Object(o.b)(e),n=i[t];null!=n&&(n.signatureKey=d[e],c.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((e=>{const[t]=Object(o.b)(e),n=i[t];n&&(n.signatureKey=l[e],u.push(n))})):u=r;let h={};null!=e.library&&null!=e.library.function&&(h=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const f={nodes:i,inputs:u,outputs:c,weights:a,placeholders:r,signature:t,functions:h};return s.length>0&&(f.initNodes=s),f}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=Object(s.a)(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.substr(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let a;switch(n.type){case"string":a=getStringParam(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=getStringParam(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=getStringArrayParam(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=getStringArrayParam(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=getNumberParam(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=getNumberParam(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=getNumericArrayParam(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=getNumericArrayParam(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=getBoolParam(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=getBoolParam(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=getBoolArrayParam(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=getBoolArrayParam(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=getTensorShapeParam(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=getTensorShapeParam(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=getTensorShapeArrayParam(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=getTensorShapeArrayParam(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=getDtypeParam(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=getDtypeParam(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=getDtypeArrayParam(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=getDtypeArrayParam(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=getFuncParam(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=getFuncParam(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const a=[],s=[];e.signature.inputArg.forEach((e=>{const[t]=Object(o.b)(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:parseDtypeParam(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n}));Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach((e=>{const[n]=Object(o.b)(e);t.inputs.push(r[n]),r[n].children.push(t)}))}));const i=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=Object(o.b)(i[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))}));const u=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:u}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function parseStringParam(t,n){const a=Array.isArray(t)?String.fromCharCode.apply(null,t):function decodeBase64(t){const n=Object(r.Ld)().global;if(void 0!==n.atob)return n.atob(t);if(void 0!==e)return new e(t,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(t);return n?a:a.toLowerCase()}function getStringParam(e,t,n,r=!1){const a=e[t];return null!=a?parseStringParam(a.s,r):n}function getBoolParam(e,t,n){const r=e[t];return r?r.b:n}function getNumberParam(e,t,n){const r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function parseDtypeParam(e){switch("string"==typeof e&&(e=a.a[e]),e){case a.a.DT_FLOAT:return"float32";case a.a.DT_INT32:case a.a.DT_INT64:case a.a.DT_INT8:case a.a.DT_UINT8:return"int32";case a.a.DT_BOOL:return"bool";case a.a.DT_DOUBLE:return"float32";case a.a.DT_STRING:return"string";default:return null}}function getFuncParam(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function getDtypeParam(e,t,n){const r=e[t];return r&&r.type?parseDtypeParam(r.type):n}function getDtypeArrayParam(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>parseDtypeParam(e))):n}function parseTensorShapeParam(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function getTensorShapeParam(e,t,n){const r=e[t];return r&&r.shape?parseTensorShapeParam(r.shape):n}function getNumericArrayParam(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function getStringArrayParam(e,t,n,r=!1){const a=e[t];return a&&a.list&&a.list.s?a.list.s.map((e=>parseStringParam(e,r))):n}function getTensorShapeArrayParam(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>parseTensorShapeParam(e))):n}function getBoolArrayParam(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}}).call(this,n("b639").Buffer)},fa11:function(e,t,n){"use strict";n.d(t,"cc",(function(){return optimizer_Optimizer})),n.d(t,"Tc",(function(){return C.a})),n.d(t,"Uc",(function(){return C.b})),n.d(t,"bf",(function(){return H.a})),n.d(t,"nf",(function(){return H.b})),n.d(t,"ed",(function(){return K.a})),n.d(t,"fd",(function(){return K.b})),n.d(t,"gd",(function(){return K.c})),n.d(t,"hd",(function(){return K.d})),n.d(t,"id",(function(){return K.e})),n.d(t,"jd",(function(){return K.f})),n.d(t,"kd",(function(){return K.g})),n.d(t,"nd",(function(){return K.h})),n.d(t,"od",(function(){return K.i})),n.d(t,"pd",(function(){return K.j})),n.d(t,"rd",(function(){return K.k})),n.d(t,"sd",(function(){return K.l})),n.d(t,"td",(function(){return K.m})),n.d(t,"ud",(function(){return K.n})),n.d(t,"vd",(function(){return K.o})),n.d(t,"wd",(function(){return K.p})),n.d(t,"xd",(function(){return K.q})),n.d(t,"yd",(function(){return K.r})),n.d(t,"zd",(function(){return K.s})),n.d(t,"Ad",(function(){return K.t})),n.d(t,"Bd",(function(){return K.u})),n.d(t,"Cd",(function(){return K.v})),n.d(t,"Dd",(function(){return K.w})),n.d(t,"Ed",(function(){return K.x})),n.d(t,"Hd",(function(){return K.y})),n.d(t,"Jd",(function(){return K.A})),n.d(t,"Md",(function(){return K.B})),n.d(t,"Nd",(function(){return K.C})),n.d(t,"Od",(function(){return K.D})),n.d(t,"Pd",(function(){return K.E})),n.d(t,"Qd",(function(){return K.F})),n.d(t,"Rd",(function(){return K.G})),n.d(t,"Td",(function(){return K.I})),n.d(t,"Ud",(function(){return K.J})),n.d(t,"Vd",(function(){return K.K})),n.d(t,"ae",(function(){return K.M})),n.d(t,"ce",(function(){return K.O})),n.d(t,"de",(function(){return K.P})),n.d(t,"ee",(function(){return K.Q})),n.d(t,"fe",(function(){return K.R})),n.d(t,"ge",(function(){return K.S})),n.d(t,"he",(function(){return K.T})),n.d(t,"ie",(function(){return K.U})),n.d(t,"je",(function(){return K.V})),n.d(t,"le",(function(){return K.W})),n.d(t,"me",(function(){return K.X})),n.d(t,"ne",(function(){return K.Y})),n.d(t,"oe",(function(){return K.Z})),n.d(t,"pe",(function(){return K.ab})),n.d(t,"re",(function(){return K.bb})),n.d(t,"se",(function(){return K.cb})),n.d(t,"te",(function(){return K.db})),n.d(t,"ue",(function(){return K.eb})),n.d(t,"ve",(function(){return K.fb})),n.d(t,"we",(function(){return K.gb})),n.d(t,"xe",(function(){return K.hb})),n.d(t,"ye",(function(){return K.ib})),n.d(t,"ze",(function(){return K.jb})),n.d(t,"Ae",(function(){return K.kb})),n.d(t,"De",(function(){return K.lb})),n.d(t,"Ee",(function(){return K.mb})),n.d(t,"Fe",(function(){return K.nb})),n.d(t,"Ge",(function(){return K.ob})),n.d(t,"He",(function(){return K.pb})),n.d(t,"Ie",(function(){return K.qb})),n.d(t,"Le",(function(){return K.rb})),n.d(t,"Me",(function(){return K.sb})),n.d(t,"Ne",(function(){return K.tb})),n.d(t,"Oe",(function(){return K.ub})),n.d(t,"Pe",(function(){return K.vb})),n.d(t,"Qe",(function(){return K.wb})),n.d(t,"Se",(function(){return K.xb})),n.d(t,"Te",(function(){return K.yb})),n.d(t,"Ue",(function(){return K.zb})),n.d(t,"Ve",(function(){return K.Ab})),n.d(t,"We",(function(){return K.Bb})),n.d(t,"Xe",(function(){return K.Cb})),n.d(t,"Ye",(function(){return K.Db})),n.d(t,"Ze",(function(){return K.Eb})),n.d(t,"af",(function(){return K.Fb})),n.d(t,"cf",(function(){return K.Gb})),n.d(t,"df",(function(){return K.Hb})),n.d(t,"ef",(function(){return K.Ib})),n.d(t,"ff",(function(){return K.Jb})),n.d(t,"if",(function(){return K.Kb})),n.d(t,"lf",(function(){return K.Mb})),n.d(t,"mf",(function(){return K.Nb})),n.d(t,"pf",(function(){return K.Ob})),n.d(t,"sf",(function(){return K.Pb})),n.d(t,"tf",(function(){return K.Qb})),n.d(t,"uf",(function(){return K.Rb})),n.d(t,"kf",(function(){return K.Lb})),n.d(t,"Id",(function(){return K.z})),n.d(t,"Wd",(function(){return K.L})),n.d(t,"be",(function(){return K.N})),n.d(t,"Sd",(function(){return K.H})),n.d(t,"jf",(function(){return se})),n.d(t,"Kd",(function(){return W.c})),n.d(t,"ke",(function(){return W.e})),n.d(t,"hf",(function(){return W.h})),n.d(t,"Gd",(function(){return W.b})),n.d(t,"Yd",(function(){return W.d})),n.d(t,"Ke",(function(){return W.g})),n.d(t,"Be",(function(){return W.f})),n.d(t,"ld",(function(){return W.a})),n.d(t,"Ce",(function(){return j.e})),n.d(t,"qf",(function(){return U.b})),n.d(t,"Ld",(function(){return l.b})),n.d(t,"rf",(function(){return V})),n.d(t,"qe",(function(){return nextFrame})),n.d(t,"qd",(function(){return a})),n.d(t,"Xd",(function(){return r})),n.d(t,"Je",(function(){return s})),n.d(t,"of",(function(){return B})),n.d(t,"md",(function(){return i})),n.d(t,"gf",(function(){return M})),n.d(t,"Re",(function(){return L})),n.d(t,"Fd",(function(){return ke})),n.d(t,"Zd",(function(){return u})),n.d(t,"vb",(function(){return _e.b})),n.d(t,"L",(function(){return _e.a})),n.d(t,"a",(function(){return E.a})),n.d(t,"b",(function(){return E.b})),n.d(t,"c",(function(){return E.c})),n.d(t,"d",(function(){return E.d})),n.d(t,"e",(function(){return E.e})),n.d(t,"f",(function(){return E.f})),n.d(t,"g",(function(){return E.g})),n.d(t,"h",(function(){return E.h})),n.d(t,"i",(function(){return E.i})),n.d(t,"j",(function(){return E.j})),n.d(t,"k",(function(){return E.k})),n.d(t,"l",(function(){return E.l})),n.d(t,"n",(function(){return E.n})),n.d(t,"m",(function(){return E.m})),n.d(t,"o",(function(){return E.o})),n.d(t,"r",(function(){return E.r})),n.d(t,"p",(function(){return E.p})),n.d(t,"q",(function(){return E.q})),n.d(t,"s",(function(){return E.s})),n.d(t,"t",(function(){return E.t})),n.d(t,"u",(function(){return E.u})),n.d(t,"v",(function(){return E.w})),n.d(t,"w",(function(){return E.x})),n.d(t,"x",(function(){return E.y})),n.d(t,"y",(function(){return E.z})),n.d(t,"z",(function(){return E.A})),n.d(t,"A",(function(){return E.B})),n.d(t,"B",(function(){return E.C})),n.d(t,"C",(function(){return E.D})),n.d(t,"D",(function(){return E.E})),n.d(t,"E",(function(){return E.F})),n.d(t,"F",(function(){return E.G})),n.d(t,"G",(function(){return E.H})),n.d(t,"H",(function(){return E.I})),n.d(t,"I",(function(){return E.J})),n.d(t,"K",(function(){return E.L})),n.d(t,"J",(function(){return E.K})),n.d(t,"M",(function(){return E.M})),n.d(t,"N",(function(){return E.N})),n.d(t,"O",(function(){return E.O})),n.d(t,"P",(function(){return E.P})),n.d(t,"Q",(function(){return E.Q})),n.d(t,"R",(function(){return E.R})),n.d(t,"S",(function(){return E.S})),n.d(t,"U",(function(){return E.U})),n.d(t,"T",(function(){return E.T})),n.d(t,"kc",(function(){return E.jc})),n.d(t,"V",(function(){return E.V})),n.d(t,"W",(function(){return E.W})),n.d(t,"Y",(function(){return E.Y})),n.d(t,"X",(function(){return E.X})),n.d(t,"Z",(function(){return E.Z})),n.d(t,"ab",(function(){return E.ab})),n.d(t,"bb",(function(){return E.bb})),n.d(t,"cb",(function(){return E.cb})),n.d(t,"db",(function(){return E.db})),n.d(t,"eb",(function(){return E.eb})),n.d(t,"fb",(function(){return E.fb})),n.d(t,"gb",(function(){return E.gb})),n.d(t,"ib",(function(){return E.ib})),n.d(t,"mb",(function(){return E.mb})),n.d(t,"lb",(function(){return E.lb})),n.d(t,"nb",(function(){return E.nb})),n.d(t,"ob",(function(){return E.ob})),n.d(t,"qb",(function(){return E.qb})),n.d(t,"pb",(function(){return E.pb})),n.d(t,"rb",(function(){return E.rb})),n.d(t,"sb",(function(){return E.sb})),n.d(t,"tb",(function(){return E.tb})),n.d(t,"ub",(function(){return E.ub})),n.d(t,"yb",(function(){return E.xb})),n.d(t,"zb",(function(){return E.yb})),n.d(t,"Ab",(function(){return E.zb})),n.d(t,"Bb",(function(){return E.Ab})),n.d(t,"Cb",(function(){return E.Bb})),n.d(t,"Db",(function(){return E.Cb})),n.d(t,"Eb",(function(){return E.Eb})),n.d(t,"Fb",(function(){return E.Fb})),n.d(t,"Gb",(function(){return E.Gb})),n.d(t,"wb",(function(){return E.vb})),n.d(t,"xb",(function(){return E.wb})),n.d(t,"Hb",(function(){return E.Hb})),n.d(t,"Nb",(function(){return E.Nb})),n.d(t,"Ib",(function(){return E.Ib})),n.d(t,"Lb",(function(){return E.Lb})),n.d(t,"Jb",(function(){return E.Jb})),n.d(t,"Kb",(function(){return E.Kb})),n.d(t,"Mb",(function(){return E.Mb})),n.d(t,"Ob",(function(){return E.Ob})),n.d(t,"Pb",(function(){return E.Pb})),n.d(t,"Qb",(function(){return E.Qb})),n.d(t,"Rb",(function(){return E.Rb})),n.d(t,"Sb",(function(){return E.Sb})),n.d(t,"Tb",(function(){return E.Tb})),n.d(t,"Ub",(function(){return E.Ub})),n.d(t,"Vb",(function(){return E.Vb})),n.d(t,"Zb",(function(){return E.Zb})),n.d(t,"Wb",(function(){return E.Wb})),n.d(t,"Xb",(function(){return E.Xb})),n.d(t,"Yb",(function(){return E.Yb})),n.d(t,"bc",(function(){return E.bc})),n.d(t,"ac",(function(){return E.ac})),n.d(t,"dc",(function(){return E.cc})),n.d(t,"ec",(function(){return E.dc})),n.d(t,"fc",(function(){return E.ec})),n.d(t,"gc",(function(){return E.fc})),n.d(t,"hc",(function(){return E.gc})),n.d(t,"ic",(function(){return E.hc})),n.d(t,"jc",(function(){return E.ic})),n.d(t,"lc",(function(){return E.kc})),n.d(t,"mc",(function(){return E.lc})),n.d(t,"oc",(function(){return E.nc})),n.d(t,"rc",(function(){return E.qc})),n.d(t,"sc",(function(){return E.rc})),n.d(t,"pc",(function(){return E.oc})),n.d(t,"qc",(function(){return E.pc})),n.d(t,"nc",(function(){return E.mc})),n.d(t,"tc",(function(){return E.sc})),n.d(t,"vc",(function(){return E.uc})),n.d(t,"wc",(function(){return E.vc})),n.d(t,"xc",(function(){return E.wc})),n.d(t,"yc",(function(){return E.xc})),n.d(t,"zc",(function(){return E.yc})),n.d(t,"Ec",(function(){return E.Dc})),n.d(t,"Cc",(function(){return E.Bc})),n.d(t,"Dc",(function(){return E.Cc})),n.d(t,"Bc",(function(){return E.Ac})),n.d(t,"Ac",(function(){return E.zc})),n.d(t,"Gc",(function(){return E.Fc})),n.d(t,"Kc",(function(){return E.Jc})),n.d(t,"Qc",(function(){return E.Pc})),n.d(t,"Hc",(function(){return E.Gc})),n.d(t,"Jc",(function(){return E.Ic})),n.d(t,"Fc",(function(){return E.Ec})),n.d(t,"Mc",(function(){return E.Lc})),n.d(t,"Lc",(function(){return E.Kc})),n.d(t,"Pc",(function(){return E.Oc})),n.d(t,"Ic",(function(){return E.Hc})),n.d(t,"Oc",(function(){return E.Nc})),n.d(t,"Rc",(function(){return E.Qc})),n.d(t,"Sc",(function(){return E.Rc})),n.d(t,"Vc",(function(){return E.Sc})),n.d(t,"Wc",(function(){return E.Tc})),n.d(t,"Xc",(function(){return E.Uc})),n.d(t,"Yc",(function(){return E.Vc})),n.d(t,"Zc",(function(){return E.Wc})),n.d(t,"ad",(function(){return E.Xc})),n.d(t,"bd",(function(){return E.Yc})),n.d(t,"cd",(function(){return E.Zc})),n.d(t,"Nc",(function(){return E.Mc})),n.d(t,"hb",(function(){return E.hb})),n.d(t,"uc",(function(){return E.tc})),n.d(t,"dd",(function(){return E.ad})),n.d(t,"jb",(function(){return E.jb})),n.d(t,"kb",(function(){return E.kb}));var r={};n.r(r),n.d(r,"copyModel",(function(){return copyModel})),n.d(r,"listModels",(function(){return listModels})),n.d(r,"moveModel",(function(){return moveModel})),n.d(r,"removeModel",(function(){return removeModel})),n.d(r,"browserFiles",(function(){return browserFiles})),n.d(r,"browserHTTPRequest",(function(){return browserHTTPRequest})),n.d(r,"concatenateArrayBuffers",(function(){return d.d})),n.d(r,"decodeWeights",(function(){return d.e})),n.d(r,"encodeWeights",(function(){return d.f})),n.d(r,"fromMemory",(function(){return fromMemory})),n.d(r,"getLoadHandlers",(function(){return getLoadHandlers})),n.d(r,"getModelArtifactsInfoForJSON",(function(){return d.g})),n.d(r,"getSaveHandlers",(function(){return getSaveHandlers})),n.d(r,"http",(function(){return http})),n.d(r,"isHTTPScheme",(function(){return isHTTPScheme})),n.d(r,"loadWeights",(function(){return loadWeights})),n.d(r,"registerLoadRouter",(function(){return registerLoadRouter})),n.d(r,"registerSaveRouter",(function(){return registerSaveRouter})),n.d(r,"weightsLoaderFactory",(function(){return weightsLoaderFactory})),n.d(r,"withSaveHandler",(function(){return withSaveHandler}));var a={};n.r(a),n.d(a,"fromPixelsAsync",(function(){return fromPixelsAsync})),n.d(a,"toPixels",(function(){return toPixels})),n.d(a,"fromPixels",(function(){return P}));var s={};n.r(s),n.d(s,"Serializable",(function(){return Serializable})),n.d(s,"SerializationMap",(function(){return SerializationMap})),n.d(s,"registerClass",(function(){return registerClass}));var o={};n.r(o),n.d(o,"segOpComputeOptimalWindowSize",(function(){return segOpComputeOptimalWindowSize})),n.d(o,"computeOutShape",(function(){return segment_util_computeOutShape})),n.d(o,"collectGatherOpShapeInfo",(function(){return collectGatherOpShapeInfo}));var i={};n.r(i),n.d(i,"axesAreInnerMostDims",(function(){return ie.b})),n.d(i,"combineLocations",(function(){return ie.c})),n.d(i,"computeOutAndReduceShapes",(function(){return ie.d})),n.d(i,"expandShapeToKeepDim",(function(){return ie.e})),n.d(i,"assertAxesAreInnerMostDims",(function(){return ie.a})),n.d(i,"getAxesPermutation",(function(){return ie.f})),n.d(i,"getUndoAxesPermutation",(function(){return ie.h})),n.d(i,"getInnerMostAxes",(function(){return ie.g})),n.d(i,"getBroadcastDims",(function(){return ue.b})),n.d(i,"getReductionAxes",(function(){return ue.c})),n.d(i,"assertAndGetBroadcastShape",(function(){return ue.a})),n.d(i,"assertParamsConsistent",(function(){return assertParamsConsistent})),n.d(i,"computeOutShape",(function(){return computeOutShape})),n.d(i,"computeDilation2DInfo",(function(){return ce.d})),n.d(i,"computePool2DInfo",(function(){return ce.e})),n.d(i,"computePool3DInfo",(function(){return ce.f})),n.d(i,"computeConv2DInfo",(function(){return ce.a})),n.d(i,"computeConv3DInfo",(function(){return ce.b})),n.d(i,"computeDefaultPad",(function(){return ce.c})),n.d(i,"tupleValuesAreOne",(function(){return ce.i})),n.d(i,"eitherStridesOrDilationsAreOne",(function(){return ce.h})),n.d(i,"convertConv2DDataFormat",(function(){return ce.g})),n.d(i,"getFusedDyActivation",(function(){return le.c})),n.d(i,"getFusedBiasGradient",(function(){return le.b})),n.d(i,"applyActivation",(function(){return le.a})),n.d(i,"shouldFuse",(function(){return le.d})),n.d(i,"PARALLELIZE_THRESHOLD",(function(){return de})),n.d(i,"computeOptimalWindowSize",(function(){return computeOptimalWindowSize})),n.d(i,"slice_util",(function(){return L})),n.d(i,"upcastType",(function(){return H.b})),n.d(i,"getImageCenter",(function(){return getImageCenter})),n.d(i,"getReshaped",(function(){return getReshaped})),n.d(i,"getPermuted",(function(){return getPermuted})),n.d(i,"getReshapedPermuted",(function(){return getReshapedPermuted})),n.d(i,"getSliceBeginCoords",(function(){return getSliceBeginCoords})),n.d(i,"getSliceSize",(function(){return getSliceSize})),n.d(i,"prepareAndValidate",(function(){return prepareAndValidate})),n.d(i,"validateUpdateShape",(function(){return pe.c})),n.d(i,"validateInput",(function(){return pe.b})),n.d(i,"calculateShapes",(function(){return pe.a})),n.d(i,"SELU_SCALEALPHA",(function(){return he.b})),n.d(i,"SELU_SCALE",(function(){return he.a})),n.d(i,"ERF_P",(function(){return fe})),n.d(i,"ERF_A1",(function(){return ge})),n.d(i,"ERF_A2",(function(){return be})),n.d(i,"ERF_A3",(function(){return ye})),n.d(i,"ERF_A4",(function(){return xe})),n.d(i,"ERF_A5",(function(){return ve})),n.d(i,"warn",(function(){return warn})),n.d(i,"log",(function(){return log})),n.d(i,"mergeRealAndImagArrays",(function(){return mergeRealAndImagArrays})),n.d(i,"splitRealAndImagArrays",(function(){return splitRealAndImagArrays})),n.d(i,"complexWithEvenIndex",(function(){return complexWithEvenIndex})),n.d(i,"complexWithOddIndex",(function(){return complexWithOddIndex})),n.d(i,"getComplexWithIndex",(function(){return getComplexWithIndex})),n.d(i,"assignToTypedArray",(function(){return assignToTypedArray})),n.d(i,"exponents",(function(){return exponents})),n.d(i,"exponent",(function(){return exponent})),n.d(i,"prepareSplitSize",(function(){return prepareSplitSize})),n.d(i,"segment_util",(function(){return o})),n.d(i,"fromUint8ToStringArray",(function(){return fromUint8ToStringArray})),n.d(i,"fromStringArrayToUint8",(function(){return fromStringArrayToUint8}));var u={};n.r(u),n.d(u,"nonMaxSuppressionV3Impl",(function(){return we.a})),n.d(u,"nonMaxSuppressionV4Impl",(function(){return we.b})),n.d(u,"nonMaxSuppressionV5Impl",(function(){return we.c})),n.d(u,"whereImpl",(function(){return Oe.a}));var c=n("6ae2"),l=(n("29a8"),n("b333")),d=n("350f");class IORouterRegistry{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==IORouterRegistry.instance&&(IORouterRegistry.instance=new IORouterRegistry),IORouterRegistry.instance}static registerSaveRouter(e){IORouterRegistry.getInstance().saveRouters.push(e)}static registerLoadRouter(e){IORouterRegistry.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return IORouterRegistry.getHandlers(e,"save")}static getLoadHandlers(e,t){return IORouterRegistry.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?IORouterRegistry.getInstance().loadRouters:IORouterRegistry.getInstance().saveRouters).forEach((t=>{const a=t(e,n);null!==a&&r.push(a)})),r}}const registerSaveRouter=e=>IORouterRegistry.registerSaveRouter(e),registerLoadRouter=e=>IORouterRegistry.registerLoadRouter(e),getSaveHandlers=e=>IORouterRegistry.getSaveHandlers(e),getLoadHandlers=(e,t)=>IORouterRegistry.getLoadHandlers(e,t),p="tensorflowjs",h="models_store",f="model_info_store";function getIndexedDBFactory(){if(!Object(l.b)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function setUpDatabase(e){const t=e.result;t.createObjectStore(h,{keyPath:"modelPath"}),t.createObjectStore(f,{keyPath:"modelPath"})}class indexed_db_BrowserIndexedDB{constructor(e){if(this.indexedDB=getIndexedDBFactory(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(p,1);r.onupgradeneeded=()=>setUpDatabase(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(h,"readonly"),r=t.objectStore(h).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{const r=Object(d.g)(t),s=a.transaction(f,"readwrite");let o=s.objectStore(f);const i=o.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;i.onsuccess=()=>{u=a.transaction(h,"readwrite");const i=u.objectStore(h).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});i.onsuccess=()=>e({modelArtifactsInfo:r}),i.onerror=e=>{o=s.objectStore(f);const t=o.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(i.error)),t.onerror=e=>(a.close(),n(i.error))}},i.onerror=e=>(a.close(),n(i.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}}indexed_db_BrowserIndexedDB.URL_SCHEME="indexeddb://";const indexedDBRouter=e=>Object(l.b)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(indexed_db_BrowserIndexedDB.URL_SCHEME)?function browserIndexedDB(e){return new indexed_db_BrowserIndexedDB(e)}(e.slice(indexed_db_BrowserIndexedDB.URL_SCHEME.length)):null;IORouterRegistry.registerSaveRouter(indexedDBRouter),IORouterRegistry.registerLoadRouter(indexedDBRouter);class BrowserIndexedDBManager{constructor(){this.indexedDB=getIndexedDBFactory()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(p,1);n.onupgradeneeded=()=>setUpDatabase(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(f,"readonly"),s=a.objectStore(f).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){return e=function maybeStripScheme(e){return e.startsWith(indexed_db_BrowserIndexedDB.URL_SCHEME)?e.slice(indexed_db_BrowserIndexedDB.URL_SCHEME.length):e}(e),new Promise(((t,n)=>{const r=this.indexedDB.open(p,1);r.onupgradeneeded=()=>setUpDatabase(r),r.onsuccess=()=>{const a=r.result,s=a.transaction(f,"readwrite"),o=s.objectStore(f),i=o.get(e);let u;i.onsuccess=()=>{if(null==i.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=o.delete(e),deleteModelData=()=>{u=a.transaction(h,"readwrite");const r=u.objectStore(h).delete(e);r.onsuccess=()=>t(i.result.modelArtifactsInfo),r.onerror=e=>n(i.error)};r.onsuccess=deleteModelData,r.onerror=e=>(deleteModelData(),a.close(),n(i.error))}},i.onerror=e=>(a.close(),n(i.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)}))}}var m=n("6ad5");const g="/",b="tensorflowjs_models",y="info",x="model_topology",v="weight_specs",k="weight_data",w="model_metadata";function getModelKeys(e){return{info:[b,e,y].join(g),topology:[b,e,x].join(g),weightSpecs:[b,e,v].join(g),weightData:[b,e,k].join(g),modelMetadata:[b,e,w].join(g)}}function getModelPathFromKey(e){const t=e.split(g);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(g)}class local_storage_BrowserLocalStorage{constructor(e){if(!Object(l.b)().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=getModelKeys(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),a=Object(d.g)(e);try{this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,Object(d.a)(e.weightData));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};return null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:a}}catch(t){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${a.modelTopologyBytes}, weightSpecsBytes=${a.weightSpecsBytes}, weightDataBytes=${a.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=Object(d.b)(s),t}}local_storage_BrowserLocalStorage.URL_SCHEME="localstorage://";const localStorageRouter=e=>Object(l.b)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(local_storage_BrowserLocalStorage.URL_SCHEME)?function browserLocalStorage(e){return new local_storage_BrowserLocalStorage(e)}(e.slice(local_storage_BrowserLocalStorage.URL_SCHEME.length)):null;IORouterRegistry.registerSaveRouter(localStorageRouter),IORouterRegistry.registerLoadRouter(localStorageRouter);class local_storage_BrowserLocalStorageManager{constructor(){Object(m.b)(Object(l.b)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),Object(m.b)("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=b+g,n=g+y;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);if(a.startsWith(t)&&a.endsWith(n)){e[getModelPathFromKey(a)]=JSON.parse(this.LS.getItem(a))}}return e}async removeModel(e){const t=getModelKeys(e=function local_storage_maybeStripScheme(e){return e.startsWith(local_storage_BrowserLocalStorage.URL_SCHEME)?e.slice(local_storage_BrowserLocalStorage.URL_SCHEME.length):e}(e));if(null==this.LS.getItem(t.info))throw new Error(`Cannot find model at path '${e}'`);const n=JSON.parse(this.LS.getItem(t.info));return this.LS.removeItem(t.info),this.LS.removeItem(t.topology),this.LS.removeItem(t.weightSpecs),this.LS.removeItem(t.weightData),n}}const O="://";class model_management_ModelStoreManagerRegistry{constructor(){this.managers={}}static getInstance(){return null==model_management_ModelStoreManagerRegistry.instance&&(model_management_ModelStoreManagerRegistry.instance=new model_management_ModelStoreManagerRegistry),model_management_ModelStoreManagerRegistry.instance}static registerManager(e,t){Object(m.b)(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(O)&&(e=e.slice(0,e.indexOf(O))),Object(m.b)(e.length>0,(()=>"scheme must not be an empty string."));const n=model_management_ModelStoreManagerRegistry.getInstance();Object(m.b)(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function parseURL(e){if(-1===e.indexOf(O))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${model_management_ModelStoreManagerRegistry.getSchemes().join(",")}`);return{scheme:e.split(O)[0],path:e.split(O)[1]}}async function cloneModelInternal(e,t,n=!1){Object(m.b)(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=IORouterRegistry.getLoadHandlers(e);Object(m.b)(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),Object(m.b)(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const a=r[0],s=IORouterRegistry.getSaveHandlers(t);Object(m.b)(s.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),Object(m.b)(s.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const o=s[0],i=parseURL(e).scheme,u=parseURL(e).path,c=i===parseURL(e).scheme,l=await a.load();n&&c&&await model_management_ModelStoreManagerRegistry.getManager(i).removeModel(u);const d=await o.save(l);return n&&!c&&await model_management_ModelStoreManagerRegistry.getManager(i).removeModel(u),d.modelArtifactsInfo}async function listModels(){const e=model_management_ModelStoreManagerRegistry.getSchemes(),t={};for(const n of e){const e=await model_management_ModelStoreManagerRegistry.getManager(n).listModels();for(const r in e){t[n+O+r]=e[r]}}return t}async function removeModel(e){const t=parseURL(e);return model_management_ModelStoreManagerRegistry.getManager(t.scheme).removeModel(t.path)}async function copyModel(e,t){return cloneModelInternal(e,t,!1)}async function moveModel(e,t){return cloneModelInternal(e,t,!0)}class PlatformBrowser{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(Object(l.b)().get("IS_BROWSER")){Object(l.b)().setPlatform("browser",new PlatformBrowser);try{model_management_ModelStoreManagerRegistry.registerManager(local_storage_BrowserLocalStorage.URL_SCHEME,new local_storage_BrowserLocalStorageManager)}catch(Ie){}try{model_management_ModelStoreManagerRegistry.registerManager(indexed_db_BrowserIndexedDB.URL_SCHEME,new BrowserIndexedDBManager)}catch(Ie){}}n("4b05");var _=n("043e"),I=n("deb3"),S=n("f0a9"),N=n("7568"),C=n("34d7");Object(c.b)();const T={buffer:_.a,cast:I.a,clone:S.a,print:N.a};Object(C.f)(T);function defer(e){return new Promise((e=>setTimeout(e))).then(e)}class browser_files_BrowserDownloads{constructor(e){if(!Object(l.b)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(browser_files_BrowserDownloads.URL_SCHEME)&&(e=e.slice(browser_files_BrowserDownloads.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelTopologyFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer);const a=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),s=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(s.download=this.modelTopologyFileName,s.href=a,await defer((()=>s.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await defer((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Object(d.g)(e)}}}}browser_files_BrowserDownloads.URL_SCHEME="downloads://";class browser_files_BrowserFiles{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.files=e}async load(){const e=this.files[0],t=this.files.slice(1);return new Promise(((n,r)=>{const a=new FileReader;a.onload=a=>{const s=JSON.parse(a.target.result),o=s.modelTopology;if(null==o)return void r(new Error(`modelTopology field is missing from file ${e.name}`));0===t.length&&n({modelTopology:o});const i=s.weightsManifest;if(null==i)return void r(new Error(`weightManifest field is missing from file ${e.name}`));let u;try{u=this.checkManifestAndWeightFiles(i,t)}catch(Ie){return void r(Ie)}const c=[],l=[],p=[];i.forEach((e=>{e.paths.forEach((e=>{l.push(e),p.push(null)})),c.push(...e.weights)})),i.forEach((e=>{e.paths.forEach((e=>{const t=new FileReader;t.onload=t=>{const r=t.target.result,a=l.indexOf(e);if(p[a]=r,-1===p.indexOf(null)){const e={modelTopology:o,weightSpecs:c,weightData:Object(d.d)(p),format:s.format,generatedBy:s.generatedBy,convertedBy:s.convertedBy};null!=s.signature&&(e.signature=s.signature),null!=s.userDefinedMetadata&&(e.userDefinedMetadata=s.userDefinedMetadata),null!=s.modelInitializer&&(e.modelInitializer=s.modelInitializer),n(e)}},t.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),t.readAsArrayBuffer(u[e])}))}))},a.onerror=t=>r(`Failed to read model topology and weights manifest JSON from file '${e.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),a.readAsText(e)}))}checkManifestAndWeightFiles(e,t){const n=[],r=t.map((e=>Object(d.c)(e.name))),a={};for(const s of e)s.paths.forEach((e=>{const s=Object(d.c)(e);if(-1!==n.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(n.push(s),-1===r.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);a[e]=t[r.indexOf(s)]}));if(n.length!==t.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${t.length}).`);return a}}function browserFiles(e){return new browser_files_BrowserFiles(e)}function monitorPromisesProgress(e,t,n,r){!function checkPromises(e){Object(m.b)(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function checkFraction(e,t){Object(m.b)(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),Object(m.b)(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),Object(m.b)(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(e.map((s=>(s.then((s=>{const o=n+ ++a/e.length*(r-n);return t(o),s})),s))))}IORouterRegistry.registerSaveRouter((e=>Object(l.b)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(browser_files_BrowserDownloads.URL_SCHEME)?function browserDownloads(e="model"){return new browser_files_BrowserDownloads(e)}(e.slice(browser_files_BrowserDownloads.URL_SCHEME.length)):null));var A=n("9847");async function loadWeightsAsArrayBuffer(e,t){null==t&&(t={});const n=null==t.fetchFunc?Object(l.b)().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await monitorPromisesProgress(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await monitorPromisesProgress(a,t.onProgress,.5,1)}async function loadWeights(e,t="",n,r){return weightsLoaderFactory((e=>loadWeightsAsArrayBuffer(e,{requestInit:r})))(e,t,n)}function weightsLoaderFactory(e){return async(t,n="",r)=>{const a=t.map((()=>!1)),s={},o=null!=r?r.map((()=>!1)):[],i=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,c=A.a[u]*m.O(e.shape),enqueueWeightsForFetchingFn=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:c})};null!=r?r.forEach(((t,n)=>{t===e.name&&(enqueueWeightsForFetchingFn(),o[n]=!0)})):enqueueWeightsForFetchingFn(),i.push(e.name),n+=c}))})),!o.every((e=>e))){const e=r.filter(((e,t)=>!o[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${i.join(", ")}.`)}const u=a.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),c=[];u.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;c.push(t)}))}));const l=await e(c),p={};let h=0;return u.forEach((e=>{const n=t[e].paths.length;let r=0;for(let t=0;t<n;t++)r+=l[h+t].byteLength;const a=new ArrayBuffer(r),o=new Uint8Array(a);let i=0;for(let t=0;t<n;t++){const e=new Uint8Array(l[h+t]);o.set(e,i),i+=e.byteLength}s[e].forEach((e=>{const t=a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),n=Object(d.e)(t,[e.manifestEntry]);for(const r in n)p[r]=n[r]})),h+=n})),p}}class http_HTTPRequest{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(Object(m.b)("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Object(l.b)().platform.fetch,Object(m.b)(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&Object(m.b)(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:Object(d.g)(e),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(h){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,r=t.weightsManifest,a=t.generatedBy,s=t.convertedBy,o=t.format,i=t.signature,u=t.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let c,l;if(null!=r){const e=await this.loadWeights(r);[c,l]=e}const d={modelTopology:n,weightSpecs:c,weightData:l,generatedBy:a,convertedBy:s,format:o};null!=i&&(d.signature=i),null!=u&&(d.userDefinedMetadata=u);const p=t.modelInitializer;return p&&(d.modelInitializer=p),d}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function parseUrl(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),a=n>t?e.substring(n):"";return[r+"/",a]}(t),a=this.weightPathPrefix||n,s=[];for(const c of e)s.push(...c.weights);const o=[],i=[];for(const c of e)for(const e of c.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):o.push(a+e+r);this.weightUrlConverter&&o.push(...await Promise.all(i));const u=await loadWeightsAsArrayBuffer(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[s,Object(d.d)(u)]}}function isHTTPScheme(e){return null!=e.match(http_HTTPRequest.URL_SCHEME_REGEX)}http_HTTPRequest.URL_SCHEME_REGEX=/^https?:\/\//;const httpRouter=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>isHTTPScheme(e))):isHTTPScheme(e),n)return http(e,t)}return null};function http(e,t){return new http_HTTPRequest(e,t)}function browserHTTPRequest(e,t){return http(e,t)}IORouterRegistry.registerSaveRouter(httpRouter),IORouterRegistry.registerLoadRouter(httpRouter);class PassthroughLoader{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class PassthroughSaver{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}function fromMemory(e,t,n,r){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new PassthroughLoader(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new PassthroughLoader({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new PassthroughLoader({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r})}function withSaveHandler(e){return new PassthroughSaver(e)}var E=n("c05b"),j=n("73b8"),R=n("a3f7"),$=n("54ef"),D=n("05bb");let z;function fromPixels_(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,o=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)o=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);i=!0}if(a){const t=2;if(a&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=Object(j.b)(E.hb,c.a.backendName)){const n={pixels:e},r={numChannels:t};return c.a.runKernel(E.hb,n,r)}const[u,l]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let d,p;if(o?d=e.getContext("2d").getImageData(0,0,u,l).data:r||n?d=e.data:(s||a||i)&&(null==z&&(z=document.createElement("canvas").getContext("2d")),z.canvas.width=u,z.canvas.height=l,z.drawImage(e,0,0,u,l),d=z.getImageData(0,0,u,l).data),4===t)p=new Int32Array(d);else{const e=u*l;p=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)p[n*t+e]=d[4*n+e]}const h=[l,u,t];return Object(D.a)(p,h,"int32")}function canWrapPixelsToImageBitmap(e){return function isImageBitmapFullySupported(){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")}()&&!(e instanceof ImageBitmap)&&function isNonEmptyPixels(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function browser_isPixelData(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function fromPixelsAsync(e,t=3){let n=null;if(Object(l.b)().getBool("WRAP_TO_IMAGEBITMAP")&&canWrapPixelsToImageBitmap(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(r){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return fromPixels_(n,t)}async function toPixels(e,t){let n=Object(R.a)(e,"img","toPixels");if(!(e instanceof C.a)){const e=n;n=Object(I.a)(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const o=await n.data(),i="float32"===n.dtype?255:1,u=new Uint8ClampedArray(a*r*4);for(let c=0;c<r*a;++c){const e=[0,0,0,255];for(let r=0;r<s;r++){const t=o[c*s+r];if("float32"===n.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===n.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===s?(e[0]=t*i,e[1]=t*i,e[2]=t*i):e[r]=t*i}const t=4*c;u[t+0]=Math.round(e[0]),u[t+1]=Math.round(e[1]),u[t+2]=Math.round(e[2]),u[t+3]=Math.round(e[3])}if(null!=t){t.width=a,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}const P=Object($.a)({fromPixels_:fromPixels_});var L=n("5ebd");class Serializable{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class SerializationMap{constructor(){this.classNameMap={}}static getMap(){return null==SerializationMap.instance&&(SerializationMap.instance=new SerializationMap),SerializationMap.instance}static register(e){SerializationMap.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function registerClass(e){Object(m.b)(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),Object(m.b)("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),Object(m.b)(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),SerializationMap.register(e)}var M=n("76c2"),B=n("eb7e");const V="3.3.0";var W=n("c04e"),U=n("538e"),G=n("015f");class optimizer_Optimizer extends Serializable{minimize(e,t=!1,n){const{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return Object(W.b)(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Object(U.b)(e,t)}dispose(){null!=this.iterations_&&Object(W.b)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Object(G.a)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(optimizer_Optimizer,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});var H=n("23bf"),K=n("132b"),q=n("9117"),X=n("c77c"),J=n("a5aa"),Y=n("163a"),Z=n("93b2"),Q=n("a09b");class adadelta_optimizer_AdadeltaOptimizer extends optimizer_Optimizer{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=c.a.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=c.a.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:Object(W.h)((()=>Object(Q.a)(r).variable(false)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:Object(W.h)((()=>Object(Q.a)(r).variable(false)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;Object(W.h)((()=>{const e=Object(q.a)(Object(J.a)(s,this.rho),Object(J.a)(Object(Z.a)(a),1-this.rho)),t=Object(J.a)(Object(X.a)(Object(Y.a)(Object(q.a)(o,this.epsilon)),Object(Y.a)(Object(q.a)(s,this.epsilon))),a),n=Object(q.a)(Object(J.a)(o,this.rho),Object(J.a)(Object(Z.a)(t),1-this.rho));s.assign(e),o.assign(n);const i=Object(q.a)(Object(J.a)(t,-this.learningRate),r);r.assign(i)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Object(W.b)(this.accumulatedGrads.map((e=>e.variable))),Object(W.b)(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}adadelta_optimizer_AdadeltaOptimizer.className="Adadelta",registerClass(adadelta_optimizer_AdadeltaOptimizer);var ee=n("46b8");class adagrad_optimizer_AdagradOptimizer extends optimizer_Optimizer{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=c.a.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:Object(W.h)((()=>Object(ee.a)(r.shape,this.initialAccumulatorValue).variable(e)))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable;Object(W.h)((()=>{const e=Object(q.a)(s,Object(Z.a)(a));s.assign(e);const t=Object(q.a)(Object(J.a)(Object(X.a)(a,Object(Y.a)(Object(q.a)(e,c.a.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Object(W.b)(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}adagrad_optimizer_AdagradOptimizer.className="Adagrad",registerClass(adagrad_optimizer_AdagradOptimizer);var te=n("c9f1"),ne=n("a009");class adam_optimizer_AdamOptimizer extends optimizer_Optimizer{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Object(W.h)((()=>{this.accBeta1=Object(G.a)(t).variable(),this.accBeta2=Object(G.a)(n).variable()})),null==r&&(this.epsilon=c.a.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Object(W.h)((()=>{const n=Object(ne.a)(1,this.accBeta1),r=Object(ne.a)(1,this.accBeta2);t.forEach(((t,a)=>{const s=c.a.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:Object(W.h)((()=>Object(Q.a)(s).variable(false)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:Object(W.h)((()=>Object(Q.a)(s).variable(false)))});const o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;const i=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,l=Object(q.a)(Object(J.a)(i,this.beta1),Object(J.a)(o,1-this.beta1)),d=Object(q.a)(Object(J.a)(u,this.beta2),Object(J.a)(Object(Z.a)(o),1-this.beta2)),p=Object(X.a)(l,n),h=Object(X.a)(d,r);i.assign(l),u.assign(d);const f=Object(q.a)(Object(J.a)(Object(X.a)(p,Object(q.a)(Object(Y.a)(h),this.epsilon)),-this.learningRate),s);s.assign(f)})),this.accBeta1.assign(Object(J.a)(this.accBeta1,this.beta1)),this.accBeta2.assign(Object(J.a)(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Object(W.b)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&Object(W.b)(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Object(W.h)((()=>{this.accBeta1.assign(Object(te.a)(this.beta1,this.iterations_+1)),this.accBeta2.assign(Object(te.a)(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}adam_optimizer_AdamOptimizer.className="Adam",registerClass(adam_optimizer_AdamOptimizer);var re=n("8ae0"),ae=n("09f4");class adamax_optimizer_AdamaxOptimizer extends optimizer_Optimizer{constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Object(W.h)((()=>{this.iteration=Object(G.a)(0).variable(),this.accBeta1=Object(G.a)(t).variable()})),null==r&&(this.epsilon=c.a.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Object(W.h)((()=>{const n=Object(ne.a)(1,this.accBeta1),r=Object(X.a)(-this.learningRate,Object(q.a)(Object(J.a)(this.iteration,this.decay),1));t.forEach(((t,a)=>{const s=c.a.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:Object(Q.a)(s).variable(false)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:Object(Q.a)(s).variable(false)});const o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;const i=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,l=Object(q.a)(Object(J.a)(i,this.beta1),Object(J.a)(o,1-this.beta1)),d=Object(J.a)(u,this.beta2),p=Object(re.a)(o),h=Object(ae.a)(d,p);i.assign(l),u.assign(h);const f=Object(q.a)(Object(J.a)(Object(X.a)(r,n),Object(X.a)(l,Object(q.a)(h,this.epsilon))),s);s.assign(f)})),this.iteration.assign(Object(q.a)(this.iteration,1)),this.accBeta1.assign(Object(J.a)(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Object(W.b)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&Object(W.b)(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}adamax_optimizer_AdamaxOptimizer.className="Adamax",registerClass(adamax_optimizer_AdamaxOptimizer);class sgd_optimizer_SGDOptimizer extends optimizer_Optimizer{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=c.a.registeredVariables[t];Object(W.h)((()=>{const e=Object(q.a)(Object(J.a)(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Object(W.d)(Object(G.a)(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}sgd_optimizer_SGDOptimizer.className="SGD",registerClass(sgd_optimizer_SGDOptimizer);class momentum_optimizer_MomentumOptimizer extends sgd_optimizer_SGDOptimizer{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Object(G.a)(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=c.a.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:Object(W.h)((()=>Object(Q.a)(r).variable(e)))}}const a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&Object(W.h)((()=>{let e;const t=Object(q.a)(Object(J.a)(this.m,a),s);e=this.useNesterov?Object(q.a)(Object(J.a)(this.c,Object(q.a)(s,Object(J.a)(t,this.m))),r):Object(q.a)(Object(J.a)(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Object(W.b)(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}momentum_optimizer_MomentumOptimizer.className="Momentum",registerClass(momentum_optimizer_MomentumOptimizer);class rmsprop_optimizer_RMSPropOptimizer extends optimizer_Optimizer{constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=c.a.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=c.a.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:Object(W.h)((()=>Object(Q.a)(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:Object(W.h)((()=>Object(Q.a)(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:Object(W.h)((()=>Object(Q.a)(r).variable(a)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const o=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;Object(W.h)((()=>{const e=Object(q.a)(Object(J.a)(o,this.decay),Object(J.a)(Object(Z.a)(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,a=Object(q.a)(Object(J.a)(t,this.decay),Object(J.a)(s,1-this.decay)),u=Object(X.a)(Object(J.a)(s,this.learningRate),Object(Y.a)(Object(ne.a)(e,Object(q.a)(Object(Z.a)(a),this.epsilon)))),c=Object(q.a)(Object(J.a)(i,this.momentum),u);o.assign(e),t.assign(a),i.assign(c);const l=Object(ne.a)(r,c);r.assign(l)}else{const e=Object(q.a)(Object(J.a)(o,this.decay),Object(J.a)(Object(Z.a)(s),1-this.decay)),t=Object(q.a)(Object(J.a)(i,this.momentum),Object(X.a)(Object(J.a)(s,this.learningRate),Object(Y.a)(Object(q.a)(e,this.epsilon))));o.assign(e),i.assign(t);const n=Object(ne.a)(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Object(W.b)(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Object(W.b)(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&Object(W.b)(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}rmsprop_optimizer_RMSPropOptimizer.className="RMSProp",registerClass(rmsprop_optimizer_RMSPropOptimizer);class optimizer_constructors_OptimizerConstructors{static sgd(e){return new sgd_optimizer_SGDOptimizer(e)}static momentum(e,t,n=!1){return new momentum_optimizer_MomentumOptimizer(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new rmsprop_optimizer_RMSPropOptimizer(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new adam_optimizer_AdamOptimizer(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new adadelta_optimizer_AdadeltaOptimizer(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new adamax_optimizer_AdamaxOptimizer(e,t,n,r,a)}static adagrad(e,t=.1){return new adagrad_optimizer_AdagradOptimizer(e,t)}}const se={sgd:optimizer_constructors_OptimizerConstructors.sgd,momentum:optimizer_constructors_OptimizerConstructors.momentum,adadelta:optimizer_constructors_OptimizerConstructors.adadelta,adagrad:optimizer_constructors_OptimizerConstructors.adagrad,rmsprop:optimizer_constructors_OptimizerConstructors.rmsprop,adamax:optimizer_constructors_OptimizerConstructors.adamax,adam:optimizer_constructors_OptimizerConstructors.adam},oe="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function nextFrame(){return new Promise((e=>oe((()=>e()))))}var ie=n("36e5"),ue=n("526f");function assertParamsConsistent(e,t){const n=e[0].length;e.forEach(((e,t)=>{m.b(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),m.b(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,a)=>{for(let s=0;s<n;s++)m.b(s===t||e[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function computeOutShape(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var ce=n("b818"),le=n("4749");const de=30;function computeOptimalWindowSize(e){return e<=de?e:Object(m.G)(e,Math.floor(Math.sqrt(e)))}function getImageCenter(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function getReshaped(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function getPermuted(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function getReshapedPermuted(e,t,n,r=!0){const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let s=1;s<e.length;++s)s<=t.length?r?a.push(t[s-1]*e[s]):a.push(e[s]/t[s-1]):a.push(e[s]);return a}function getSliceBeginCoords(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function getSliceSize(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}function prepareAndValidate(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===Object(m.O)(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,s=a[a.length-1];let o=1;for(let d=0;d<a.length-1;++d)o*=a[d];const i=e.shape,u=a.slice();u.pop();let c=1;for(let d=s;d<n;++d)c*=i[d],u.push(i[d]);const l=[...Object(m.j)(e.shape).map((e=>e/c)),1].slice(0,s);return[u,o,c,l]}var pe=n("a34f"),he=n("7cde");const fe=.3275911,ge=.254829592,be=-.284496736,ye=1.421413741,xe=-1.453152027,ve=1.061405429;function warn(...e){Object(l.b)().getBool("IS_TEST")||console.warn(...e)}function log(...e){Object(l.b)().getBool("IS_TEST")||console.log(...e)}function mergeRealAndImagArrays(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function splitRealAndImagArrays(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function complexWithEvenIndex(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=0;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function complexWithOddIndex(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=2;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function getComplexWithIndex(e,t){return{real:e[2*t],imag:e[2*t+1]}}function assignToTypedArray(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function exponents(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function exponent(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}function prepareSplitSize(e,t,n=0){let r=[];if("number"==typeof t)Object(m.b)(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const a=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);Object(m.b)(a<=1,(()=>"There should be only one negative value in split array."));const s=t.indexOf(-1);if(-1!==s){const r=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-r}Object(m.b)(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function segOpComputeOptimalWindowSize(e,t){let n,r=!1;for(e<=de?(n=e,r=!0):n=Object(m.G)(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Object(m.G)(e,n+1);return n}function segment_util_computeOutShape(e,t,n){const r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function collectGatherOpShapeInfo(e,t,n,r){const a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let d=0;d<r;++d)if(e.shape[d]!==t.shape[d])throw new Error(`x.shape[${d}]: ${e.shape[d]} should be equal to indices.shape[${d}]: ${t.shape[d]}.`);const o=e.shape[n],i=[];let u=1,c=1,l=1;for(let d=0;d<r;++d)i.push(e.shape[d]),u*=e.shape[d];for(let d=r;d<n;d++)i.push(e.shape[d]),c*=e.shape[d];for(let d=r;d<a;d++)i.push(t.shape[d]);for(let d=n+1;d<s;d++)i.push(e.shape[d]),l*=e.shape[d];return{batchSize:u,sliceSize:l,outerSize:c,dimSize:o,outputShape:i}}function fromUint8ToStringArray(e){try{return e.map((e=>Object(B.decodeString)(e)))}catch(Ie){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${Ie}`)}}function fromStringArrayToUint8(e){return e.map((e=>Object(B.encodeString)(e)))}var ke=n("7ed6"),we=n("8389"),Oe=n("0280"),_e=n("8b87")},fb6a:function(e,t,n){"use strict";var r=n("23e7"),a=n("861d"),s=n("e8b5"),o=n("23cb"),i=n("50c4"),u=n("fc6a"),c=n("8418"),l=n("b622"),d=n("1dde")("slice"),p=l("species"),h=[].slice,f=Math.max;r({target:"Array",proto:!0,forced:!d},{slice:function slice(e,t){var n,r,l,d=u(this),m=i(d.length),g=o(e,m),b=o(void 0===t?m:t,m);if(s(d)&&("function"!=typeof(n=d.constructor)||n!==Array&&!s(n.prototype)?a(n)&&null===(n=n[p])&&(n=void 0):n=void 0,n===Array||void 0===n))return h.call(d,g,b);for(r=new(void 0===n?Array:n)(f(b-g,0)),l=0;g<b;g++,l++)g in d&&c(r,l,d[g]);return r.length=l,r}})},fc0b:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({isFinite_:function isFinite_(e){const t={x:Object(s.a)(e,"x","isFinite")};return r.a.runKernel(a.sb,t)}})},fc6a:function(e,t,n){var r=n("44ad"),a=n("1d80");e.exports=function(e){return r(a(e))}},fdbc:function(e,t){e.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},fdbf:function(e,t,n){var r=n("4930");e.exports=r&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},ffb3:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),o=n("54ef");const i=Object(o.a)({sigmoid_:function sigmoid_(e){const t={x:Object(s.a)(e,"x","sigmoid")};return r.a.runKernel(a.zc,t)}})}});
//# sourceMappingURL=dba9c6d348ba66acbd78.worker.js.map